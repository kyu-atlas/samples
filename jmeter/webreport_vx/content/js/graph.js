/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7951.0, "minX": 0.0, "maxY": 32266.0, "series": [{"data": [[0.0, 7951.0], [0.1, 10053.0], [0.2, 12713.0], [0.3, 12754.0], [0.4, 12791.0], [0.5, 12818.0], [0.6, 12833.0], [0.7, 12862.0], [0.8, 12882.0], [0.9, 12912.0], [1.0, 12931.0], [1.1, 12950.0], [1.2, 12971.0], [1.3, 12994.0], [1.4, 13019.0], [1.5, 13057.0], [1.6, 13076.0], [1.7, 13089.0], [1.8, 13114.0], [1.9, 13138.0], [2.0, 13160.0], [2.1, 13186.0], [2.2, 13196.0], [2.3, 13222.0], [2.4, 13244.0], [2.5, 13276.0], [2.6, 13312.0], [2.7, 13334.0], [2.8, 13355.0], [2.9, 13375.0], [3.0, 13403.0], [3.1, 13440.0], [3.2, 13452.0], [3.3, 13488.0], [3.4, 13511.0], [3.5, 13536.0], [3.6, 13549.0], [3.7, 13570.0], [3.8, 13604.0], [3.9, 13640.0], [4.0, 13658.0], [4.1, 13674.0], [4.2, 13693.0], [4.3, 13711.0], [4.4, 13753.0], [4.5, 13795.0], [4.6, 13824.0], [4.7, 13839.0], [4.8, 13856.0], [4.9, 13870.0], [5.0, 13897.0], [5.1, 13923.0], [5.2, 13955.0], [5.3, 13994.0], [5.4, 14002.0], [5.5, 14026.0], [5.6, 14043.0], [5.7, 14062.0], [5.8, 14087.0], [5.9, 14118.0], [6.0, 14130.0], [6.1, 14157.0], [6.2, 14162.0], [6.3, 14183.0], [6.4, 14214.0], [6.5, 14254.0], [6.6, 14284.0], [6.7, 14295.0], [6.8, 14315.0], [6.9, 14359.0], [7.0, 14376.0], [7.1, 14403.0], [7.2, 14413.0], [7.3, 14429.0], [7.4, 14462.0], [7.5, 14476.0], [7.6, 14507.0], [7.7, 14541.0], [7.8, 14572.0], [7.9, 14587.0], [8.0, 14615.0], [8.1, 14644.0], [8.2, 14665.0], [8.3, 14674.0], [8.4, 14697.0], [8.5, 14724.0], [8.6, 14756.0], [8.7, 14778.0], [8.8, 14794.0], [8.9, 14827.0], [9.0, 14839.0], [9.1, 14875.0], [9.2, 14889.0], [9.3, 14933.0], [9.4, 14940.0], [9.5, 14958.0], [9.6, 14974.0], [9.7, 14988.0], [9.8, 15039.0], [9.9, 15069.0], [10.0, 15105.0], [10.1, 15116.0], [10.2, 15143.0], [10.3, 15154.0], [10.4, 15180.0], [10.5, 15196.0], [10.6, 15228.0], [10.7, 15250.0], [10.8, 15258.0], [10.9, 15276.0], [11.0, 15302.0], [11.1, 15328.0], [11.2, 15354.0], [11.3, 15380.0], [11.4, 15394.0], [11.5, 15418.0], [11.6, 15446.0], [11.7, 15483.0], [11.8, 15501.0], [11.9, 15515.0], [12.0, 15535.0], [12.1, 15547.0], [12.2, 15566.0], [12.3, 15596.0], [12.4, 15610.0], [12.5, 15625.0], [12.6, 15659.0], [12.7, 15690.0], [12.8, 15719.0], [12.9, 15751.0], [13.0, 15768.0], [13.1, 15784.0], [13.2, 15799.0], [13.3, 15809.0], [13.4, 15836.0], [13.5, 15879.0], [13.6, 15935.0], [13.7, 15948.0], [13.8, 15960.0], [13.9, 15980.0], [14.0, 15997.0], [14.1, 16021.0], [14.2, 16049.0], [14.3, 16070.0], [14.4, 16096.0], [14.5, 16112.0], [14.6, 16132.0], [14.7, 16158.0], [14.8, 16187.0], [14.9, 16221.0], [15.0, 16250.0], [15.1, 16273.0], [15.2, 16290.0], [15.3, 16310.0], [15.4, 16340.0], [15.5, 16361.0], [15.6, 16384.0], [15.7, 16412.0], [15.8, 16428.0], [15.9, 16450.0], [16.0, 16492.0], [16.1, 16498.0], [16.2, 16519.0], [16.3, 16536.0], [16.4, 16547.0], [16.5, 16564.0], [16.6, 16586.0], [16.7, 16621.0], [16.8, 16632.0], [16.9, 16647.0], [17.0, 16679.0], [17.1, 16721.0], [17.2, 16744.0], [17.3, 16755.0], [17.4, 16778.0], [17.5, 16807.0], [17.6, 16821.0], [17.7, 16834.0], [17.8, 16853.0], [17.9, 16870.0], [18.0, 16892.0], [18.1, 16903.0], [18.2, 16939.0], [18.3, 16973.0], [18.4, 17002.0], [18.5, 17015.0], [18.6, 17036.0], [18.7, 17052.0], [18.8, 17071.0], [18.9, 17084.0], [19.0, 17097.0], [19.1, 17108.0], [19.2, 17139.0], [19.3, 17169.0], [19.4, 17180.0], [19.5, 17205.0], [19.6, 17226.0], [19.7, 17254.0], [19.8, 17276.0], [19.9, 17295.0], [20.0, 17312.0], [20.1, 17324.0], [20.2, 17342.0], [20.3, 17371.0], [20.4, 17386.0], [20.5, 17405.0], [20.6, 17438.0], [20.7, 17473.0], [20.8, 17510.0], [20.9, 17538.0], [21.0, 17554.0], [21.1, 17568.0], [21.2, 17581.0], [21.3, 17586.0], [21.4, 17602.0], [21.5, 17620.0], [21.6, 17627.0], [21.7, 17670.0], [21.8, 17684.0], [21.9, 17694.0], [22.0, 17710.0], [22.1, 17729.0], [22.2, 17741.0], [22.3, 17774.0], [22.4, 17783.0], [22.5, 17795.0], [22.6, 17808.0], [22.7, 17819.0], [22.8, 17839.0], [22.9, 17873.0], [23.0, 17875.0], [23.1, 17900.0], [23.2, 17925.0], [23.3, 17953.0], [23.4, 17993.0], [23.5, 18022.0], [23.6, 18040.0], [23.7, 18052.0], [23.8, 18087.0], [23.9, 18117.0], [24.0, 18139.0], [24.1, 18204.0], [24.2, 18255.0], [24.3, 18282.0], [24.4, 18298.0], [24.5, 18315.0], [24.6, 18342.0], [24.7, 18351.0], [24.8, 18388.0], [24.9, 18418.0], [25.0, 18451.0], [25.1, 18482.0], [25.2, 18499.0], [25.3, 18532.0], [25.4, 18543.0], [25.5, 18569.0], [25.6, 18589.0], [25.7, 18630.0], [25.8, 18643.0], [25.9, 18654.0], [26.0, 18673.0], [26.1, 18692.0], [26.2, 18739.0], [26.3, 18761.0], [26.4, 18786.0], [26.5, 18810.0], [26.6, 18834.0], [26.7, 18854.0], [26.8, 18869.0], [26.9, 18920.0], [27.0, 18936.0], [27.1, 18954.0], [27.2, 18967.0], [27.3, 18980.0], [27.4, 19000.0], [27.5, 19024.0], [27.6, 19043.0], [27.7, 19071.0], [27.8, 19084.0], [27.9, 19101.0], [28.0, 19118.0], [28.1, 19134.0], [28.2, 19149.0], [28.3, 19166.0], [28.4, 19192.0], [28.5, 19200.0], [28.6, 19211.0], [28.7, 19231.0], [28.8, 19250.0], [28.9, 19271.0], [29.0, 19291.0], [29.1, 19302.0], [29.2, 19316.0], [29.3, 19330.0], [29.4, 19340.0], [29.5, 19355.0], [29.6, 19366.0], [29.7, 19378.0], [29.8, 19398.0], [29.9, 19417.0], [30.0, 19437.0], [30.1, 19459.0], [30.2, 19478.0], [30.3, 19499.0], [30.4, 19522.0], [30.5, 19540.0], [30.6, 19563.0], [30.7, 19583.0], [30.8, 19600.0], [30.9, 19620.0], [31.0, 19641.0], [31.1, 19662.0], [31.2, 19681.0], [31.3, 19703.0], [31.4, 19723.0], [31.5, 19743.0], [31.6, 19766.0], [31.7, 19784.0], [31.8, 19805.0], [31.9, 19829.0], [32.0, 19845.0], [32.1, 19866.0], [32.2, 19887.0], [32.3, 19912.0], [32.4, 19931.0], [32.5, 19950.0], [32.6, 19971.0], [32.7, 19991.0], [32.8, 20011.0], [32.9, 20031.0], [33.0, 20057.0], [33.1, 20071.0], [33.2, 20093.0], [33.3, 20115.0], [33.4, 20134.0], [33.5, 20154.0], [33.6, 20179.0], [33.7, 20195.0], [33.8, 20225.0], [33.9, 20259.0], [34.0, 20269.0], [34.1, 20281.0], [34.2, 20294.0], [34.3, 20313.0], [34.4, 20333.0], [34.5, 20355.0], [34.6, 20379.0], [34.7, 20397.0], [34.8, 20416.0], [34.9, 20440.0], [35.0, 20470.0], [35.1, 20490.0], [35.2, 20514.0], [35.3, 20533.0], [35.4, 20552.0], [35.5, 20581.0], [35.6, 20604.0], [35.7, 20617.0], [35.8, 20636.0], [35.9, 20653.0], [36.0, 20677.0], [36.1, 20691.0], [36.2, 20715.0], [36.3, 20736.0], [36.4, 20758.0], [36.5, 20774.0], [36.6, 20797.0], [36.7, 20818.0], [36.8, 20836.0], [36.9, 20857.0], [37.0, 20885.0], [37.1, 20897.0], [37.2, 20918.0], [37.3, 20931.0], [37.4, 20944.0], [37.5, 20949.0], [37.6, 20963.0], [37.7, 20969.0], [37.8, 20985.0], [37.9, 21005.0], [38.0, 21024.0], [38.1, 21032.0], [38.2, 21047.0], [38.3, 21060.0], [38.4, 21076.0], [38.5, 21094.0], [38.6, 21115.0], [38.7, 21123.0], [38.8, 21132.0], [38.9, 21153.0], [39.0, 21172.0], [39.1, 21189.0], [39.2, 21211.0], [39.3, 21233.0], [39.4, 21250.0], [39.5, 21270.0], [39.6, 21285.0], [39.7, 21302.0], [39.8, 21326.0], [39.9, 21347.0], [40.0, 21369.0], [40.1, 21385.0], [40.2, 21400.0], [40.3, 21423.0], [40.4, 21438.0], [40.5, 21454.0], [40.6, 21480.0], [40.7, 21497.0], [40.8, 21521.0], [40.9, 21536.0], [41.0, 21551.0], [41.1, 21571.0], [41.2, 21595.0], [41.3, 21610.0], [41.4, 21631.0], [41.5, 21650.0], [41.6, 21668.0], [41.7, 21686.0], [41.8, 21710.0], [41.9, 21728.0], [42.0, 21746.0], [42.1, 21768.0], [42.2, 21788.0], [42.3, 21803.0], [42.4, 21823.0], [42.5, 21842.0], [42.6, 21861.0], [42.7, 21896.0], [42.8, 21922.0], [42.9, 21931.0], [43.0, 21948.0], [43.1, 21971.0], [43.2, 22027.0], [43.3, 22045.0], [43.4, 22065.0], [43.5, 22076.0], [43.6, 22087.0], [43.7, 22101.0], [43.8, 22108.0], [43.9, 22115.0], [44.0, 22126.0], [44.1, 22133.0], [44.2, 22145.0], [44.3, 22163.0], [44.4, 22183.0], [44.5, 22203.0], [44.6, 22226.0], [44.7, 22246.0], [44.8, 22263.0], [44.9, 22286.0], [45.0, 22304.0], [45.1, 22321.0], [45.2, 22341.0], [45.3, 22364.0], [45.4, 22382.0], [45.5, 22402.0], [45.6, 22422.0], [45.7, 22443.0], [45.8, 22461.0], [45.9, 22479.0], [46.0, 22504.0], [46.1, 22535.0], [46.2, 22544.0], [46.3, 22566.0], [46.4, 22598.0], [46.5, 22612.0], [46.6, 22642.0], [46.7, 22660.0], [46.8, 22683.0], [46.9, 22699.0], [47.0, 22715.0], [47.1, 22732.0], [47.2, 22771.0], [47.3, 22789.0], [47.4, 22807.0], [47.5, 22827.0], [47.6, 22844.0], [47.7, 22869.0], [47.8, 22882.0], [47.9, 22901.0], [48.0, 22919.0], [48.1, 22956.0], [48.2, 22973.0], [48.3, 22992.0], [48.4, 23013.0], [48.5, 23032.0], [48.6, 23049.0], [48.7, 23068.0], [48.8, 23099.0], [48.9, 23110.0], [49.0, 23155.0], [49.1, 23172.0], [49.2, 23188.0], [49.3, 23208.0], [49.4, 23227.0], [49.5, 23244.0], [49.6, 23259.0], [49.7, 23282.0], [49.8, 23310.0], [49.9, 23318.0], [50.0, 23344.0], [50.1, 23361.0], [50.2, 23380.0], [50.3, 23393.0], [50.4, 23421.0], [50.5, 23435.0], [50.6, 23456.0], [50.7, 23475.0], [50.8, 23493.0], [50.9, 23533.0], [51.0, 23551.0], [51.1, 23572.0], [51.2, 23588.0], [51.3, 23608.0], [51.4, 23628.0], [51.5, 23645.0], [51.6, 23669.0], [51.7, 23711.0], [51.8, 23795.0], [51.9, 23811.0], [52.0, 23834.0], [52.1, 23849.0], [52.2, 23870.0], [52.3, 23913.0], [52.4, 23930.0], [52.5, 23948.0], [52.6, 23970.0], [52.7, 23989.0], [52.8, 24009.0], [52.9, 24026.0], [53.0, 24046.0], [53.1, 24075.0], [53.2, 24097.0], [53.3, 24115.0], [53.4, 24132.0], [53.5, 24154.0], [53.6, 24180.0], [53.7, 24190.0], [53.8, 24209.0], [53.9, 24229.0], [54.0, 24247.0], [54.1, 24271.0], [54.2, 24291.0], [54.3, 24304.0], [54.4, 24320.0], [54.5, 24343.0], [54.6, 24355.0], [54.7, 24377.0], [54.8, 24396.0], [54.9, 24410.0], [55.0, 24427.0], [55.1, 24445.0], [55.2, 24463.0], [55.3, 24481.0], [55.4, 24496.0], [55.5, 24503.0], [55.6, 24520.0], [55.7, 24526.0], [55.8, 24541.0], [55.9, 24547.0], [56.0, 24559.0], [56.1, 24568.0], [56.2, 24578.0], [56.3, 24586.0], [56.4, 24602.0], [56.5, 24619.0], [56.6, 24634.0], [56.7, 24657.0], [56.8, 24677.0], [56.9, 24695.0], [57.0, 24715.0], [57.1, 24735.0], [57.2, 24751.0], [57.3, 24775.0], [57.4, 24790.0], [57.5, 24810.0], [57.6, 24835.0], [57.7, 24844.0], [57.8, 24866.0], [57.9, 24887.0], [58.0, 24904.0], [58.1, 24925.0], [58.2, 24943.0], [58.3, 24966.0], [58.4, 24977.0], [58.5, 25005.0], [58.6, 25021.0], [58.7, 25037.0], [58.8, 25056.0], [58.9, 25079.0], [59.0, 25097.0], [59.1, 25118.0], [59.2, 25128.0], [59.3, 25140.0], [59.4, 25157.0], [59.5, 25177.0], [59.6, 25195.0], [59.7, 25210.0], [59.8, 25234.0], [59.9, 25249.0], [60.0, 25272.0], [60.1, 25291.0], [60.2, 25309.0], [60.3, 25326.0], [60.4, 25349.0], [60.5, 25364.0], [60.6, 25383.0], [60.7, 25405.0], [60.8, 25422.0], [60.9, 25439.0], [61.0, 25458.0], [61.1, 25478.0], [61.2, 25499.0], [61.3, 25510.0], [61.4, 25534.0], [61.5, 25557.0], [61.6, 25571.0], [61.7, 25589.0], [61.8, 25610.0], [61.9, 25626.0], [62.0, 25647.0], [62.1, 25665.0], [62.2, 25683.0], [62.3, 25702.0], [62.4, 25722.0], [62.5, 25740.0], [62.6, 25756.0], [62.7, 25777.0], [62.8, 25807.0], [62.9, 25817.0], [63.0, 25830.0], [63.1, 25850.0], [63.2, 25868.0], [63.3, 25884.0], [63.4, 25904.0], [63.5, 25918.0], [63.6, 25939.0], [63.7, 25958.0], [63.8, 25974.0], [63.9, 26003.0], [64.0, 26043.0], [64.1, 26055.0], [64.2, 26077.0], [64.3, 26091.0], [64.4, 26115.0], [64.5, 26126.0], [64.6, 26147.0], [64.7, 26161.0], [64.8, 26180.0], [64.9, 26201.0], [65.0, 26219.0], [65.1, 26235.0], [65.2, 26256.0], [65.3, 26267.0], [65.4, 26286.0], [65.5, 26305.0], [65.6, 26323.0], [65.7, 26332.0], [65.8, 26348.0], [65.9, 26369.0], [66.0, 26387.0], [66.1, 26406.0], [66.2, 26418.0], [66.3, 26432.0], [66.4, 26456.0], [66.5, 26478.0], [66.6, 26491.0], [66.7, 26510.0], [66.8, 26530.0], [66.9, 26551.0], [67.0, 26569.0], [67.1, 26591.0], [67.2, 26616.0], [67.3, 26633.0], [67.4, 26647.0], [67.5, 26671.0], [67.6, 26685.0], [67.7, 26700.0], [67.8, 26712.0], [67.9, 26729.0], [68.0, 26734.0], [68.1, 26750.0], [68.2, 26754.0], [68.3, 26760.0], [68.4, 26782.0], [68.5, 26794.0], [68.6, 26809.0], [68.7, 26820.0], [68.8, 26838.0], [68.9, 26860.0], [69.0, 26874.0], [69.1, 26886.0], [69.2, 26910.0], [69.3, 26928.0], [69.4, 26980.0], [69.5, 27001.0], [69.6, 27019.0], [69.7, 27031.0], [69.8, 27052.0], [69.9, 27071.0], [70.0, 27082.0], [70.1, 27100.0], [70.2, 27117.0], [70.3, 27136.0], [70.4, 27158.0], [70.5, 27172.0], [70.6, 27208.0], [70.7, 27215.0], [70.8, 27230.0], [70.9, 27249.0], [71.0, 27258.0], [71.1, 27271.0], [71.2, 27294.0], [71.3, 27316.0], [71.4, 27336.0], [71.5, 27354.0], [71.6, 27373.0], [71.7, 27395.0], [71.8, 27417.0], [71.9, 27437.0], [72.0, 27458.0], [72.1, 27478.0], [72.2, 27515.0], [72.3, 27532.0], [72.4, 27546.0], [72.5, 27567.0], [72.6, 27596.0], [72.7, 27611.0], [72.8, 27635.0], [72.9, 27656.0], [73.0, 27673.0], [73.1, 27692.0], [73.2, 27708.0], [73.3, 27728.0], [73.4, 27747.0], [73.5, 27767.0], [73.6, 27785.0], [73.7, 27807.0], [73.8, 27819.0], [73.9, 27841.0], [74.0, 27864.0], [74.1, 27878.0], [74.2, 27894.0], [74.3, 27914.0], [74.4, 27930.0], [74.5, 27946.0], [74.6, 27967.0], [74.7, 27985.0], [74.8, 28011.0], [74.9, 28025.0], [75.0, 28060.0], [75.1, 28081.0], [75.2, 28107.0], [75.3, 28121.0], [75.4, 28132.0], [75.5, 28155.0], [75.6, 28176.0], [75.7, 28193.0], [75.8, 28207.0], [75.9, 28226.0], [76.0, 28244.0], [76.1, 28266.0], [76.2, 28282.0], [76.3, 28299.0], [76.4, 28323.0], [76.5, 28335.0], [76.6, 28358.0], [76.7, 28379.0], [76.8, 28399.0], [76.9, 28416.0], [77.0, 28443.0], [77.1, 28459.0], [77.2, 28473.0], [77.3, 28497.0], [77.4, 28515.0], [77.5, 28533.0], [77.6, 28554.0], [77.7, 28573.0], [77.8, 28588.0], [77.9, 28628.0], [78.0, 28640.0], [78.1, 28660.0], [78.2, 28676.0], [78.3, 28681.0], [78.4, 28702.0], [78.5, 28722.0], [78.6, 28740.0], [78.7, 28761.0], [78.8, 28785.0], [78.9, 28801.0], [79.0, 28827.0], [79.1, 28840.0], [79.2, 28859.0], [79.3, 28880.0], [79.4, 28904.0], [79.5, 28921.0], [79.6, 28942.0], [79.7, 28957.0], [79.8, 28979.0], [79.9, 28999.0], [80.0, 29012.0], [80.1, 29042.0], [80.2, 29060.0], [80.3, 29085.0], [80.4, 29095.0], [80.5, 29114.0], [80.6, 29135.0], [80.7, 29153.0], [80.8, 29173.0], [80.9, 29192.0], [81.0, 29215.0], [81.1, 29230.0], [81.2, 29252.0], [81.3, 29265.0], [81.4, 29288.0], [81.5, 29304.0], [81.6, 29317.0], [81.7, 29340.0], [81.8, 29356.0], [81.9, 29380.0], [82.0, 29388.0], [82.1, 29411.0], [82.2, 29433.0], [82.3, 29453.0], [82.4, 29471.0], [82.5, 29485.0], [82.6, 29499.0], [82.7, 29513.0], [82.8, 29525.0], [82.9, 29549.0], [83.0, 29562.0], [83.1, 29574.0], [83.2, 29599.0], [83.3, 29616.0], [83.4, 29629.0], [83.5, 29650.0], [83.6, 29664.0], [83.7, 29676.0], [83.8, 29695.0], [83.9, 29712.0], [84.0, 29717.0], [84.1, 29733.0], [84.2, 29738.0], [84.3, 29761.0], [84.4, 29765.0], [84.5, 29784.0], [84.6, 29804.0], [84.7, 29822.0], [84.8, 29843.0], [84.9, 29866.0], [85.0, 29881.0], [85.1, 29903.0], [85.2, 29923.0], [85.3, 29940.0], [85.4, 29960.0], [85.5, 29982.0], [85.6, 30019.0], [85.7, 30050.0], [85.8, 30069.0], [85.9, 30087.0], [86.0, 30106.0], [86.1, 30123.0], [86.2, 30141.0], [86.3, 30153.0], [86.4, 30177.0], [86.5, 30194.0], [86.6, 30210.0], [86.7, 30224.0], [86.8, 30246.0], [86.9, 30263.0], [87.0, 30278.0], [87.1, 30296.0], [87.2, 30311.0], [87.3, 30326.0], [87.4, 30340.0], [87.5, 30369.0], [87.6, 30382.0], [87.7, 30401.0], [87.8, 30424.0], [87.9, 30443.0], [88.0, 30459.0], [88.1, 30479.0], [88.2, 30496.0], [88.3, 30510.0], [88.4, 30526.0], [88.5, 30542.0], [88.6, 30565.0], [88.7, 30581.0], [88.8, 30591.0], [88.9, 30606.0], [89.0, 30630.0], [89.1, 30642.0], [89.2, 30659.0], [89.3, 30683.0], [89.4, 30691.0], [89.5, 30708.0], [89.6, 30720.0], [89.7, 30740.0], [89.8, 30757.0], [89.9, 30769.0], [90.0, 30793.0], [90.1, 30806.0], [90.2, 30820.0], [90.3, 30839.0], [90.4, 30851.0], [90.5, 30875.0], [90.6, 30887.0], [90.7, 30904.0], [90.8, 30926.0], [90.9, 30939.0], [91.0, 30958.0], [91.1, 30973.0], [91.2, 30993.0], [91.3, 31005.0], [91.4, 31025.0], [91.5, 31034.0], [91.6, 31059.0], [91.7, 31073.0], [91.8, 31088.0], [91.9, 31104.0], [92.0, 31124.0], [92.1, 31145.0], [92.2, 31157.0], [92.3, 31170.0], [92.4, 31196.0], [92.5, 31208.0], [92.6, 31225.0], [92.7, 31235.0], [92.8, 31254.0], [92.9, 31276.0], [93.0, 31298.0], [93.1, 31307.0], [93.2, 31326.0], [93.3, 31338.0], [93.4, 31360.0], [93.5, 31371.0], [93.6, 31393.0], [93.7, 31405.0], [93.8, 31430.0], [93.9, 31445.0], [94.0, 31460.0], [94.1, 31488.0], [94.2, 31504.0], [94.3, 31520.0], [94.4, 31536.0], [94.5, 31553.0], [94.6, 31575.0], [94.7, 31592.0], [94.8, 31614.0], [94.9, 31635.0], [95.0, 31658.0], [95.1, 31672.0], [95.2, 31686.0], [95.3, 31708.0], [95.4, 31719.0], [95.5, 31742.0], [95.6, 31754.0], [95.7, 31776.0], [95.8, 31785.0], [95.9, 31809.0], [96.0, 31826.0], [96.1, 31834.0], [96.2, 31850.0], [96.3, 31878.0], [96.4, 31887.0], [96.5, 31910.0], [96.6, 31922.0], [96.7, 31950.0], [96.8, 31960.0], [96.9, 31982.0], [97.0, 31992.0], [97.1, 32015.0], [97.2, 32024.0], [97.3, 32046.0], [97.4, 32063.0], [97.5, 32083.0], [97.6, 32099.0], [97.7, 32111.0], [97.8, 32140.0], [97.9, 32152.0], [98.0, 32168.0], [98.1, 32186.0], [98.2, 32194.0], [98.3, 32200.0], [98.4, 32211.0], [98.5, 32215.0], [98.6, 32217.0], [98.7, 32219.0], [98.8, 32221.0], [98.9, 32222.0], [99.0, 32225.0], [99.1, 32229.0], [99.2, 32233.0], [99.3, 32235.0], [99.4, 32239.0], [99.5, 32241.0], [99.6, 32243.0], [99.7, 32247.0], [99.8, 32251.0], [99.9, 32259.0]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 7900.0, "maxY": 85.0, "series": [{"data": [[7900.0, 1.0], [8000.0, 3.0], [8100.0, 1.0], [10100.0, 2.0], [10000.0, 1.0], [11000.0, 1.0], [12700.0, 12.0], [12800.0, 23.0], [12900.0, 22.0], [13000.0, 23.0], [13100.0, 22.0], [13200.0, 16.0], [13300.0, 21.0], [13400.0, 19.0], [13500.0, 22.0], [13600.0, 25.0], [13700.0, 12.0], [13800.0, 25.0], [13900.0, 19.0], [14000.0, 22.0], [14100.0, 28.0], [14200.0, 18.0], [14300.0, 17.0], [14400.0, 25.0], [14500.0, 18.0], [14600.0, 24.0], [14700.0, 21.0], [14800.0, 19.0], [14900.0, 24.0], [15000.0, 13.0], [15100.0, 27.0], [15200.0, 24.0], [15300.0, 22.0], [15400.0, 18.0], [15500.0, 26.0], [15600.0, 20.0], [15700.0, 25.0], [15800.0, 18.0], [15900.0, 22.0], [16000.0, 20.0], [16100.0, 21.0], [16200.0, 21.0], [16300.0, 20.0], [17200.0, 23.0], [16400.0, 25.0], [16600.0, 20.0], [16800.0, 31.0], [17000.0, 35.0], [17400.0, 17.0], [18200.0, 19.0], [17600.0, 29.0], [17800.0, 27.0], [18000.0, 21.0], [18400.0, 16.0], [19200.0, 29.0], [18600.0, 25.0], [18800.0, 20.0], [19000.0, 24.0], [19400.0, 25.0], [19600.0, 25.0], [19800.0, 25.0], [20000.0, 23.0], [20200.0, 25.0], [20400.0, 21.0], [20600.0, 27.0], [20800.0, 25.0], [21000.0, 34.0], [21200.0, 26.0], [21400.0, 27.0], [21600.0, 25.0], [21800.0, 21.0], [22000.0, 27.0], [22200.0, 25.0], [22400.0, 25.0], [22600.0, 25.0], [22800.0, 26.0], [23000.0, 23.0], [23200.0, 25.0], [23400.0, 26.0], [23600.0, 21.0], [23800.0, 22.0], [24000.0, 23.0], [24200.0, 26.0], [24400.0, 31.0], [24600.0, 29.0], [24800.0, 25.0], [25000.0, 29.0], [25200.0, 26.0], [25400.0, 29.0], [25600.0, 26.0], [25800.0, 29.0], [26000.0, 23.0], [26400.0, 29.0], [26200.0, 29.0], [26600.0, 27.0], [27400.0, 24.0], [26800.0, 31.0], [27000.0, 30.0], [27200.0, 33.0], [27600.0, 26.0], [27800.0, 28.0], [28000.0, 21.0], [28200.0, 29.0], [28400.0, 25.0], [28600.0, 25.0], [28800.0, 25.0], [29000.0, 25.0], [29200.0, 26.0], [29400.0, 30.0], [29600.0, 32.0], [29800.0, 25.0], [30000.0, 19.0], [30200.0, 28.0], [30400.0, 26.0], [30600.0, 31.0], [30800.0, 29.0], [31000.0, 32.0], [31200.0, 30.0], [31400.0, 28.0], [31600.0, 26.0], [31800.0, 29.0], [32000.0, 28.0], [32200.0, 85.0], [16500.0, 25.0], [16700.0, 20.0], [16900.0, 14.0], [17100.0, 21.0], [17300.0, 26.0], [17500.0, 28.0], [17700.0, 31.0], [17900.0, 17.0], [18100.0, 11.0], [18300.0, 22.0], [18500.0, 20.0], [18700.0, 18.0], [18900.0, 26.0], [19100.0, 31.0], [19300.0, 38.0], [19500.0, 22.0], [19700.0, 24.0], [19900.0, 25.0], [20100.0, 25.0], [20300.0, 25.0], [21300.0, 25.0], [20500.0, 23.0], [20700.0, 24.0], [20900.0, 38.0], [21100.0, 30.0], [21500.0, 26.0], [22300.0, 25.0], [21700.0, 27.0], [21900.0, 22.0], [22100.0, 40.0], [22500.0, 21.0], [23300.0, 28.0], [22700.0, 22.0], [22900.0, 24.0], [23100.0, 23.0], [23500.0, 20.0], [23700.0, 8.0], [23900.0, 25.0], [24100.0, 26.0], [24300.0, 28.0], [24500.0, 46.0], [24700.0, 26.0], [24900.0, 25.0], [25100.0, 29.0], [25300.0, 25.0], [25500.0, 26.0], [25700.0, 25.0], [25900.0, 26.0], [26100.0, 28.0], [26500.0, 26.0], [26300.0, 29.0], [26700.0, 42.0], [26900.0, 17.0], [27100.0, 24.0], [27300.0, 24.0], [27500.0, 21.0], [27700.0, 26.0], [27900.0, 27.0], [28100.0, 28.0], [28300.0, 25.0], [28500.0, 27.0], [28700.0, 27.0], [28900.0, 26.0], [29100.0, 26.0], [29300.0, 29.0], [29500.0, 29.0], [29700.0, 37.0], [29900.0, 25.0], [30100.0, 30.0], [30300.0, 28.0], [30500.0, 31.0], [30700.0, 31.0], [30900.0, 29.0], [31100.0, 28.0], [31300.0, 30.0], [31500.0, 29.0], [31700.0, 30.0], [31900.0, 31.0], [32100.0, 33.0]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 32200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 90.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4910.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4910.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 90.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2501.365800000009, "minX": 1.65795306E12, "maxY": 2501.365800000009, "series": [{"data": [[1.65795306E12, 2501.365800000009]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795306E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8026.5, "minX": 1.0, "maxY": 32260.0, "series": [{"data": [[3.0, 32256.5], [5.0, 32245.0], [6.0, 32254.5], [8.0, 32247.0], [9.0, 32242.0], [10.0, 32253.0], [12.0, 32234.0], [13.0, 32246.5], [16.0, 32238.5], [17.0, 32237.5], [19.0, 32244.5], [20.0, 32260.0], [21.0, 32239.0], [23.0, 32238.5], [25.0, 32234.0], [26.0, 32239.0], [28.0, 32242.0], [32.0, 32247.75], [35.0, 32229.666666666668], [38.0, 32226.333333333332], [41.0, 32224.333333333332], [43.0, 32228.0], [45.0, 32238.0], [47.0, 32231.0], [49.0, 32227.5], [50.0, 32215.0], [53.0, 32231.333333333332], [56.0, 32221.666666666668], [58.0, 32224.5], [60.0, 32240.0], [63.0, 32219.0], [62.0, 32228.5], [67.0, 32219.5], [65.0, 32228.5], [71.0, 32214.0], [70.0, 32218.333333333332], [73.0, 32224.5], [78.0, 32217.0], [77.0, 32212.0], [76.0, 32217.666666666668], [83.0, 32195.0], [82.0, 32200.0], [81.0, 32203.666666666668], [87.0, 32209.0], [85.0, 32199.0], [84.0, 32194.0], [91.0, 32194.0], [90.0, 32198.0], [89.0, 32206.0], [95.0, 32185.75], [97.0, 32174.0], [96.0, 32187.0], [101.0, 32173.0], [100.0, 32171.0], [106.0, 32139.0], [105.0, 32158.25], [111.0, 32152.0], [110.0, 32142.0], [115.0, 32112.75], [116.0, 32107.0], [121.0, 32094.0], [120.0, 32103.5], [126.0, 32086.0], [125.0, 32086.0], [135.0, 32051.5], [131.0, 32079.0], [130.0, 32066.75], [141.0, 32024.0], [140.0, 32030.5], [139.0, 32028.0], [136.0, 32037.0], [151.0, 31992.0], [150.0, 31995.25], [146.0, 32012.0], [145.0, 32021.5], [158.0, 31965.0], [156.0, 31970.0], [155.0, 31983.5], [166.0, 31950.0], [165.0, 31947.5], [161.0, 31955.0], [160.0, 31962.333333333332], [175.0, 31913.0], [171.0, 31911.0], [170.0, 31939.0], [183.0, 31887.0], [181.0, 31881.0], [180.0, 31896.0], [176.0, 31922.0], [191.0, 31861.0], [190.0, 31860.75], [186.0, 31867.0], [185.0, 31881.333333333332], [196.0, 31826.0], [195.0, 31837.75], [206.0, 31826.0], [205.0, 31808.333333333332], [202.0, 31809.0], [201.0, 31816.0], [200.0, 31830.75], [215.0, 31774.5], [213.0, 31786.0], [211.0, 31776.0], [210.0, 31793.25], [221.0, 31745.0], [220.0, 31761.75], [216.0, 31780.0], [231.0, 31704.0], [230.0, 31721.0], [229.0, 31723.0], [228.0, 31731.0], [226.0, 31744.0], [225.0, 31742.333333333332], [224.0, 31742.0], [236.0, 31710.0], [235.0, 31711.666666666668], [232.0, 31714.0], [246.0, 31664.0], [245.0, 31682.75], [241.0, 31681.0], [240.0, 31686.25], [255.0, 31644.0], [251.0, 31648.0], [250.0, 31659.75], [271.0, 31574.0], [270.0, 31580.0], [266.0, 31581.0], [265.0, 31600.333333333332], [262.0, 31598.0], [261.0, 31600.0], [260.0, 31616.0], [259.0, 31618.333333333332], [256.0, 31628.0], [286.0, 31509.0], [285.0, 31527.0], [282.0, 31513.0], [281.0, 31525.0], [280.0, 31550.75], [276.0, 31546.0], [275.0, 31570.0], [274.0, 31553.0], [273.0, 31555.0], [301.0, 31458.0], [299.0, 31472.333333333332], [296.0, 31488.0], [294.0, 31488.0], [292.0, 31514.0], [291.0, 31491.0], [290.0, 31507.333333333332], [288.0, 31524.0], [319.0, 31403.333333333332], [316.0, 31408.0], [314.0, 31436.0], [311.0, 31426.5], [309.0, 31432.0], [306.0, 31447.0], [304.0, 31452.333333333332], [334.0, 31358.5], [332.0, 31354.0], [331.0, 31355.5], [329.0, 31365.666666666668], [326.0, 31372.0], [324.0, 31378.333333333332], [321.0, 31393.0], [320.0, 31393.0], [351.0, 31294.0], [349.0, 31299.333333333332], [346.0, 31307.0], [344.0, 31318.333333333332], [341.0, 31327.5], [339.0, 31333.333333333332], [336.0, 31343.5], [366.0, 31238.0], [364.0, 31250.333333333332], [361.0, 31250.5], [359.0, 31269.666666666668], [356.0, 31293.0], [354.0, 31290.666666666668], [371.0, 31227.5], [381.0, 31192.5], [379.0, 31203.0], [376.0, 31202.0], [375.0, 31198.0], [374.0, 31216.5], [372.0, 31210.0], [369.0, 31230.5], [368.0, 31228.0], [399.0, 31132.333333333332], [396.0, 31151.0], [394.0, 31156.0], [393.0, 31149.0], [391.0, 31161.5], [389.0, 31164.333333333332], [386.0, 31170.0], [384.0, 31187.333333333332], [414.0, 31083.0], [411.0, 31092.5], [409.0, 31100.333333333332], [406.0, 31106.0], [404.0, 31116.666666666668], [401.0, 31127.0], [431.0, 31029.5], [429.0, 31033.333333333332], [426.0, 31030.0], [424.0, 31044.0], [421.0, 31066.0], [419.0, 31063.666666666668], [416.0, 31072.0], [446.0, 30983.5], [444.0, 30983.333333333332], [441.0, 30992.5], [439.0, 31003.666666666668], [436.0, 31008.0], [434.0, 31014.333333333332], [461.0, 30926.5], [459.0, 30938.333333333332], [456.0, 30942.0], [454.0, 30949.333333333332], [451.0, 30964.0], [449.0, 30968.333333333332], [479.0, 30858.666666666668], [476.0, 30870.5], [474.0, 30880.0], [471.0, 30882.0], [469.0, 30895.666666666668], [466.0, 30907.5], [464.0, 30915.666666666668], [494.0, 30820.0], [495.0, 30807.0], [493.0, 30807.0], [492.0, 30806.0], [491.0, 30823.0], [489.0, 30836.0], [486.0, 30842.5], [484.0, 30860.0], [481.0, 30849.0], [511.0, 30758.0], [509.0, 30768.0], [506.0, 30766.0], [504.0, 30778.0], [503.0, 30785.5], [501.0, 30795.0], [500.0, 30818.0], [499.0, 30794.666666666668], [496.0, 30802.0], [536.0, 30689.0], [534.0, 30694.666666666668], [526.0, 30707.0], [524.0, 30718.666666666668], [516.0, 30741.5], [514.0, 30744.666666666668], [574.0, 30561.666666666668], [566.0, 30580.5], [564.0, 30585.333333333332], [556.0, 30622.5], [554.0, 30616.0], [546.0, 30642.0], [544.0, 30645.666666666668], [606.0, 30444.5], [604.0, 30452.0], [596.0, 30483.0], [594.0, 30486.333333333332], [586.0, 30513.0], [584.0, 30520.333333333332], [580.0, 30528.0], [576.0, 30542.0], [636.0, 30328.0], [634.0, 30339.0], [626.0, 30386.0], [624.0, 30370.0], [616.0, 30400.0], [614.0, 30413.666666666668], [646.0, 30296.5], [666.0, 30224.0], [668.0, 30222.0], [664.0, 30234.666666666668], [660.0, 30255.0], [656.0, 30269.0], [654.0, 30263.0], [650.0, 30276.0], [644.0, 30304.0], [642.0, 30320.0], [696.0, 30130.0], [702.0, 30099.0], [700.0, 30107.0], [698.0, 30119.5], [694.0, 30131.666666666668], [686.0, 30162.0], [684.0, 30170.0], [676.0, 30196.0], [674.0, 30203.666666666668], [708.0, 30078.5], [734.0, 29953.666666666668], [730.0, 29960.0], [726.0, 29982.0], [724.0, 29989.333333333332], [716.0, 30050.0], [714.0, 30066.666666666668], [706.0, 30087.0], [704.0, 30102.5], [764.0, 29834.5], [766.0, 29822.0], [762.0, 29835.0], [756.0, 29866.5], [754.0, 29874.0], [752.0, 29875.0], [746.0, 29903.0], [744.0, 29910.666666666668], [740.0, 29924.0], [736.0, 29940.0], [794.0, 29717.333333333332], [790.0, 29729.0], [784.0, 29765.0], [780.0, 29762.0], [776.0, 29785.0], [774.0, 29791.0], [830.0, 29637.0], [824.0, 29658.666666666668], [822.0, 29651.0], [820.0, 29674.0], [814.0, 29695.0], [810.0, 29701.0], [804.0, 29721.25], [800.0, 29686.0], [838.0, 29608.0], [860.0, 29536.0], [856.0, 29549.0], [854.0, 29557.5], [850.0, 29561.0], [844.0, 29597.0], [840.0, 29604.0], [836.0, 29613.0], [834.0, 29628.75], [892.0, 29432.0], [894.0, 29432.5], [890.0, 29440.0], [884.0, 29465.0], [880.0, 29487.0], [876.0, 29478.0], [874.0, 29494.5], [870.0, 29494.0], [864.0, 29522.5], [920.0, 29326.5], [918.0, 29339.333333333332], [910.0, 29379.0], [908.0, 29376.666666666668], [904.0, 29386.25], [900.0, 29393.0], [932.0, 29286.0], [958.0, 29192.0], [954.0, 29204.0], [950.0, 29217.0], [948.0, 29227.666666666668], [940.0, 29252.0], [938.0, 29263.333333333332], [930.0, 29293.5], [928.0, 29305.333333333332], [990.0, 29066.5], [988.0, 29080.0], [980.0, 29101.5], [978.0, 29113.666666666668], [970.0, 29146.0], [968.0, 29151.666666666668], [960.0, 29182.5], [1020.0, 28950.0], [1018.0, 28955.666666666668], [1010.0, 28982.0], [1008.0, 28997.0], [1000.0, 29028.5], [998.0, 29040.0], [1080.0, 28707.5], [1068.0, 28760.0], [1060.0, 28786.5], [1048.0, 28837.0], [1040.0, 28869.0], [1028.0, 28920.666666666668], [1148.0, 28458.333333333332], [1140.0, 28490.0], [1128.0, 28532.333333333332], [1120.0, 28555.0], [1112.0, 28588.0], [1108.0, 28622.0], [1100.0, 28636.5], [1088.0, 28680.333333333332], [1208.0, 28228.25], [1204.0, 28215.0], [1200.0, 28245.0], [1188.0, 28298.0], [1184.0, 28301.0], [1168.0, 28378.25], [1164.0, 28382.0], [1272.0, 27964.0], [1268.0, 27986.333333333332], [1264.0, 27993.0], [1248.0, 28070.0], [1244.0, 28084.0], [1228.0, 28154.5], [1224.0, 28155.0], [1328.0, 27769.5], [1324.0, 27767.0], [1320.0, 27784.0], [1312.0, 27819.0], [1308.0, 27839.5], [1304.0, 27841.0], [1288.0, 27913.0], [1284.0, 27916.0], [1352.0, 27673.5], [1404.0, 27437.0], [1392.0, 27518.0], [1388.0, 27529.25], [1384.0, 27532.0], [1368.0, 27613.0], [1364.0, 27627.0], [1348.0, 27692.75], [1344.0, 27696.0], [1468.0, 27208.75], [1464.0, 27222.0], [1448.0, 27270.5], [1444.0, 27280.0], [1428.0, 27354.0], [1424.0, 27373.6], [1408.0, 27434.75], [1528.0, 27001.0], [1532.0, 26979.666666666668], [1524.0, 27003.0], [1520.0, 27021.0], [1508.0, 27069.75], [1504.0, 27082.0], [1488.0, 27133.666666666668], [1484.0, 27139.0], [1472.0, 27250.0], [1592.0, 26732.0], [1584.0, 26758.0], [1572.0, 26808.333333333332], [1564.0, 26826.0], [1552.0, 26873.0], [1544.0, 26898.5], [1652.0, 26569.0], [1644.0, 26599.5], [1632.0, 26647.666666666668], [1628.0, 26659.0], [1624.0, 26681.5], [1612.0, 26729.333333333332], [1608.0, 26736.0], [1604.0, 26754.0], [1724.0, 26294.5], [1712.0, 26347.333333333332], [1704.0, 26376.0], [1692.0, 26421.333333333332], [1684.0, 26445.0], [1672.0, 26492.0], [1664.0, 26519.5], [1784.0, 26093.0], [1772.0, 26146.666666666668], [1768.0, 26149.0], [1764.0, 26167.0], [1752.0, 26219.0], [1744.0, 26262.5], [1732.0, 26266.0], [1852.0, 25831.0], [1844.0, 25857.5], [1804.0, 26026.5], [1812.0, 25974.666666666668], [1832.0, 25903.5], [1824.0, 25933.0], [1792.0, 26081.6], [1912.0, 25612.75], [1916.0, 25594.333333333332], [1908.0, 25615.0], [1868.0, 25766.0], [1872.0, 25758.0], [1892.0, 25681.5], [1888.0, 25694.0], [1972.0, 25387.0], [1968.0, 25400.0], [1932.0, 25534.75], [1928.0, 25538.0], [1952.0, 25461.0], [1948.0, 25467.0], [1996.0, 25291.333333333332], [2032.0, 25158.333333333332], [1992.0, 25309.25], [1988.0, 25319.0], [2028.0, 25170.0], [2012.0, 25233.75], [2008.0, 25242.0], [2168.0, 24644.0], [2152.0, 24715.25], [2128.0, 24799.0], [2112.0, 24866.0], [2048.0, 25106.0], [2072.0, 25021.75], [2088.0, 24950.0], [2272.0, 24356.0], [2288.0, 24294.0], [2192.0, 24558.75], [2176.0, 24620.0], [2248.0, 24437.0], [2232.0, 24498.75], [2224.0, 24520.0], [2208.0, 24593.0], [2424.0, 23649.0], [2408.0, 23811.0], [2392.0, 23873.25], [2368.0, 23976.0], [2352.0, 24046.5], [2328.0, 24145.0], [2312.0, 24209.5], [2552.0, 23157.75], [2528.0, 23231.0], [2512.0, 23308.5], [2432.0, 23629.75], [2448.0, 23559.0], [2488.0, 23384.0], [2472.0, 23455.75], [2672.0, 22642.75], [2568.0, 23056.0], [2648.0, 22728.0], [2632.0, 22806.25], [2608.0, 22891.0], [2592.0, 22972.75], [2712.0, 22454.0], [2808.0, 22154.0], [2704.0, 22485.0], [2696.0, 22534.0], [2688.0, 22571.0], [2776.0, 22203.666666666668], [2768.0, 22235.0], [2736.0, 22364.333333333332], [2728.0, 22393.5], [2928.0, 21639.5], [2936.0, 21611.666666666668], [2912.0, 21703.0], [2896.0, 21768.666666666668], [2888.0, 21796.5], [2816.0, 22125.666666666668], [2856.0, 21935.0], [2848.0, 21953.5], [3056.0, 21156.75], [3040.0, 21213.666666666668], [3032.0, 21242.0], [3016.0, 21307.5], [2992.0, 21398.0], [2976.0, 21460.0], [3192.0, 20713.0], [3184.0, 20743.5], [3152.0, 20879.333333333332], [3144.0, 20915.5], [3072.0, 21094.0], [3096.0, 21035.0], [3120.0, 20969.0], [3112.0, 20979.0], [3304.0, 20237.0], [3312.0, 20224.666666666668], [3224.0, 20581.0], [3208.0, 20638.0], [3272.0, 20379.0], [3264.0, 20405.0], [3232.0, 20550.0], [3448.0, 19651.0], [3432.0, 19723.0], [3408.0, 19813.0], [3392.0, 19886.666666666668], [3384.0, 19916.0], [3344.0, 20083.0], [3352.0, 20057.0], [3568.0, 19157.666666666668], [3528.0, 19323.0], [3552.0, 19229.5], [3472.0, 19561.0], [3512.0, 19398.0], [3488.0, 19487.0], [3544.0, 19249.0], [3688.0, 18841.666666666668], [3648.0, 18875.333333333332], [3680.0, 18972.0], [3608.0, 18935.0], [3600.0, 18972.0], [3640.0, 18799.5], [3624.0, 19300.0], [3824.0, 17924.0], [3784.0, 18096.0], [3792.0, 18324.666666666668], [3832.0, 18003.25], [3728.0, 18343.0], [3720.0, 18771.0], [3768.0, 18574.0], [3744.0, 18645.0], [3912.0, 17858.333333333332], [3904.0, 17899.0], [3920.0, 17837.0], [3936.0, 17535.5], [3848.0, 17803.0], [3888.0, 17609.0], [3872.0, 17709.0], [3928.0, 17784.0], [4072.0, 16986.75], [4088.0, 17041.0], [4032.0, 17273.333333333332], [4048.0, 17135.0], [3992.0, 17366.333333333332], [3984.0, 17140.5], [3968.0, 17517.0], [4024.0, 17346.0], [4008.0, 17276.0], [4128.0, 16840.0], [4224.0, 16106.0], [4304.0, 15957.0], [4288.0, 16106.5], [4112.0, 16724.5], [4208.0, 16512.0], [4192.0, 16540.0], [4176.0, 16601.5], [4480.0, 15181.0], [4496.0, 15172.0], [4544.0, 14984.0], [4400.0, 15562.0], [4384.0, 15617.5], [4464.0, 15267.5], [4416.0, 15470.5], [4752.0, 13987.5], [4768.0, 13834.0], [4832.0, 13413.5], [4640.0, 14395.0], [4608.0, 14611.666666666666], [4704.0, 14112.0], [4688.0, 14259.0], [4896.0, 13183.666666666666], [4992.0, 11087.0], [4864.0, 13346.5], [4912.0, 13164.0], [4976.0, 12898.0], [4960.0, 12875.0], [4928.0, 13094.0], [4129.0, 16772.0], [4289.0, 16070.0], [4097.0, 16941.0], [4113.0, 16924.0], [4193.0, 16520.0], [4177.0, 16586.0], [4273.0, 16182.75], [4369.0, 15784.0], [4593.0, 14650.25], [4529.0, 14965.0], [4401.0, 15538.0], [4353.0, 15698.75], [4465.0, 15337.0], [4449.0, 15290.0], [4433.0, 15369.0], [4417.0, 15446.0], [4849.0, 13457.5], [4737.0, 13900.0], [4769.0, 13824.0], [4785.0, 13797.0], [4817.0, 13583.333333333334], [4801.0, 13583.0], [4609.0, 14572.0], [4625.0, 14518.0], [4689.0, 14178.0], [4673.0, 14284.666666666666], [4993.0, 10134.0], [4865.0, 13319.0], [4897.0, 13251.0], [4913.0, 13160.0], [4961.0, 12940.0], [4929.0, 13073.0], [2073.0, 25005.0], [2153.0, 24703.0], [2057.0, 25079.0], [2137.0, 24775.5], [2121.0, 24836.0], [2113.0, 24856.0], [2097.0, 24925.5], [2297.0, 24270.75], [2273.0, 24349.0], [2257.0, 24408.5], [2185.0, 24579.5], [2177.0, 24619.0], [2193.0, 24549.0], [2233.0, 24492.0], [2217.0, 24567.0], [2329.0, 24135.0], [2417.0, 23712.0], [2313.0, 24206.0], [2393.0, 23864.0], [2377.0, 23949.5], [2353.0, 24030.0], [2337.0, 24117.75], [2553.0, 23156.0], [2537.0, 23212.25], [2513.0, 23286.0], [2497.0, 23361.0], [2433.0, 23616.0], [2457.0, 23534.25], [2473.0, 23443.0], [2657.0, 22699.0], [2673.0, 22642.0], [2585.0, 22993.0], [2577.0, 23035.5], [2561.0, 23101.333333333332], [2633.0, 22794.0], [2617.0, 22868.25], [2593.0, 22959.0], [2793.0, 22131.0], [2801.0, 22107.0], [2713.0, 22453.0], [2697.0, 22517.0], [2689.0, 22544.0], [2761.0, 22272.0], [2753.0, 22293.5], [2721.0, 22424.333333333332], [2841.0, 22028.0], [2921.0, 21670.0], [2913.0, 21702.0], [2889.0, 21790.0], [2881.0, 21825.333333333332], [2873.0, 21849.0], [2833.0, 22056.5], [2865.0, 21904.5], [2849.0, 21956.0], [3041.0, 21215.0], [3057.0, 21147.0], [2961.0, 21524.0], [2953.0, 21549.0], [3033.0, 21235.0], [3017.0, 21299.0], [3001.0, 21374.0], [2985.0, 21423.666666666668], [2977.0, 21450.0], [3177.0, 20773.333333333332], [3193.0, 20702.0], [3169.0, 20806.0], [3097.0, 21032.0], [3081.0, 21078.333333333332], [3073.0, 21094.0], [3137.0, 20940.333333333332], [3129.0, 20961.0], [3313.0, 20206.0], [3297.0, 20269.0], [3289.0, 20301.5], [3257.0, 20439.333333333332], [3209.0, 20641.0], [3217.0, 20616.333333333332], [3249.0, 20481.0], [3433.0, 19711.0], [3337.0, 20114.0], [3329.0, 20146.0], [3417.0, 19783.25], [3377.0, 19949.333333333332], [3369.0, 19978.0], [3553.0, 19219.0], [3537.0, 19292.666666666668], [3521.0, 19355.0], [3561.0, 19191.0], [3473.0, 19550.0], [3457.0, 19619.5], [3513.0, 19382.0], [3497.0, 19458.75], [3593.0, 19050.0], [3705.0, 18707.0], [3585.0, 19085.0], [3609.0, 18924.0], [3633.0, 18978.333333333332], [3625.0, 19366.0], [3617.0, 19359.5], [3673.0, 18747.0], [3665.0, 18831.5], [3809.0, 18172.0], [3777.0, 18399.333333333332], [3833.0, 18351.0], [3817.0, 18376.333333333332], [3713.0, 18677.333333333332], [3721.0, 18786.0], [3729.0, 18742.0], [3769.0, 18523.0], [3753.0, 18509.0], [3953.0, 17551.5], [3913.0, 17953.0], [3921.0, 17516.0], [3857.0, 17775.75], [3897.0, 17670.75], [3873.0, 17694.0], [3977.0, 17390.333333333332], [4073.0, 17055.0], [4065.0, 17049.5], [3993.0, 17097.0], [3969.0, 17610.0], [4025.0, 17219.0], [4017.0, 17212.333333333332], [4009.0, 17413.0], [4057.0, 17033.5], [4098.0, 17021.0], [4338.0, 15808.75], [4210.0, 16470.0], [4194.0, 16493.0], [4178.0, 16536.0], [4162.0, 16656.666666666668], [4274.0, 16119.0], [4258.0, 16240.5], [4514.0, 14960.75], [4578.0, 14811.333333333334], [4530.0, 14933.0], [4594.0, 14655.0], [4386.0, 15588.0], [4354.0, 15537.0], [4434.0, 15369.0], [4754.0, 13890.0], [4770.0, 13658.0], [4850.0, 13438.0], [4818.0, 13577.0], [4802.0, 13681.0], [4658.0, 14249.666666666666], [4722.0, 14027.0], [4882.0, 13265.666666666666], [4978.0, 12805.5], [4994.0, 10053.0], [4866.0, 13342.0], [4898.0, 13027.0], [4914.0, 13096.0], [4962.0, 12942.0], [4946.0, 12975.0], [4930.0, 13096.0], [4339.0, 15603.0], [4291.0, 16045.0], [4259.0, 16272.0], [4243.0, 16237.25], [4323.0, 15961.5], [4147.0, 16777.25], [4163.0, 16646.0], [4579.0, 14717.0], [4483.0, 15235.0], [4499.0, 15109.666666666666], [4515.0, 15114.0], [4563.0, 14787.25], [4371.0, 15579.5], [4451.0, 15300.5], [4435.0, 15325.0], [4419.0, 15360.0], [4819.0, 13628.0], [4851.0, 13397.0], [4739.0, 14008.5], [4835.0, 13479.666666666666], [4803.0, 13674.0], [4643.0, 14443.666666666666], [4707.0, 14096.333333333334], [4675.0, 14248.0], [4883.0, 13260.0], [4995.0, 10124.0], [4899.0, 13024.0], [4915.0, 13180.0], [4963.0, 12825.0], [4947.0, 12917.0], [1085.0, 28690.0], [1073.0, 28738.666666666668], [1065.0, 28763.0], [1057.0, 28804.0], [1053.0, 28815.0], [1049.0, 28831.0], [1045.0, 28847.5], [1033.0, 28900.666666666668], [1025.0, 28927.5], [1149.0, 28447.0], [1145.0, 28467.0], [1133.0, 28511.333333333332], [1125.0, 28539.0], [1113.0, 28586.0], [1105.0, 28628.0], [1093.0, 28672.333333333332], [1213.0, 28206.0], [1209.0, 28219.0], [1193.0, 28282.0], [1189.0, 28288.0], [1173.0, 28354.5], [1169.0, 28368.0], [1161.0, 28385.0], [1153.0, 28442.666666666668], [1273.0, 27967.0], [1269.0, 27966.0], [1265.0, 27985.0], [1261.0, 28014.5], [1253.0, 28070.5], [1249.0, 28054.0], [1233.0, 28133.5], [1229.0, 28137.0], [1333.0, 27747.0], [1329.0, 27763.0], [1313.0, 27817.5], [1309.0, 27842.0], [1293.0, 27890.75], [1289.0, 27905.0], [1393.0, 27497.5], [1389.0, 27519.0], [1373.0, 27599.0], [1369.0, 27604.0], [1353.0, 27669.5], [1349.0, 27680.0], [1469.0, 27196.0], [1453.0, 27250.0], [1449.0, 27258.0], [1433.0, 27333.75], [1429.0, 27344.0], [1413.0, 27416.0], [1409.0, 27427.0], [1529.0, 26995.0], [1517.0, 27033.0], [1513.0, 27052.0], [1509.0, 27053.0], [1493.0, 27120.5], [1489.0, 27131.0], [1485.0, 27131.0], [1473.0, 27187.0], [1597.0, 26771.0], [1589.0, 26737.0], [1577.0, 26786.0], [1569.0, 26808.5], [1557.0, 26861.333333333332], [1549.0, 26883.0], [1537.0, 26929.0], [1657.0, 26550.333333333332], [1649.0, 26581.0], [1637.0, 26633.666666666668], [1629.0, 26665.0], [1617.0, 26705.0], [1609.0, 26738.0], [1717.0, 26325.666666666668], [1709.0, 26354.5], [1697.0, 26407.333333333332], [1689.0, 26424.0], [1677.0, 26476.666666666668], [1669.0, 26502.0], [1777.0, 26127.333333333332], [1769.0, 26157.0], [1761.0, 26180.0], [1757.0, 26268.333333333332], [1749.0, 26233.0], [1737.0, 26243.666666666668], [1729.0, 26272.0], [1849.0, 25839.5], [1837.0, 25882.0], [1829.0, 25908.0], [1817.0, 25958.666666666668], [1809.0, 25984.5], [1797.0, 26055.0], [1917.0, 25588.0], [1913.0, 25594.0], [1897.0, 25666.5], [1893.0, 25679.0], [1857.0, 25812.0], [1877.0, 25740.5], [1873.0, 25756.0], [1977.0, 25364.0], [1973.0, 25378.0], [1957.0, 25443.5], [1953.0, 25457.0], [1933.0, 25525.0], [1937.0, 25515.0], [2037.0, 25140.666666666668], [2033.0, 25151.0], [1997.0, 25300.0], [1993.0, 25298.0], [2013.0, 25234.0], [2017.0, 25212.5], [2162.0, 24677.25], [2170.0, 24636.0], [2074.0, 25003.0], [2058.0, 25063.0], [2138.0, 24757.0], [2122.0, 24833.0], [2098.0, 24916.0], [2082.0, 24979.25], [2298.0, 24258.0], [2282.0, 24323.0], [2258.0, 24402.0], [2242.0, 24463.25], [2178.0, 24607.0], [2202.0, 24527.333333333332], [2218.0, 24560.0], [2418.0, 23680.0], [2402.0, 23833.75], [2322.0, 24181.75], [2378.0, 23940.0], [2362.0, 24013.0], [2338.0, 24097.0], [2538.0, 23196.0], [2458.0, 23521.0], [2442.0, 23590.5], [2522.0, 23260.5], [2498.0, 23354.0], [2482.0, 23426.0], [2682.0, 22610.666666666668], [2658.0, 22690.0], [2642.0, 22780.25], [2562.0, 23089.0], [2578.0, 23017.0], [2618.0, 22851.0], [2602.0, 22919.5], [2786.0, 22163.333333333332], [2706.0, 22480.0], [2698.0, 22562.0], [2778.0, 22195.0], [2746.0, 22323.333333333332], [2738.0, 22355.0], [2826.0, 22088.666666666668], [2938.0, 21605.0], [2818.0, 22112.0], [2906.0, 21732.0], [2898.0, 21758.0], [2866.0, 21896.0], [2858.0, 21926.5], [3066.0, 21123.0], [3042.0, 21204.0], [3026.0, 21271.25], [2946.0, 21574.333333333332], [2962.0, 21506.0], [3002.0, 21358.0], [2986.0, 21426.0], [3194.0, 20699.0], [3178.0, 20770.0], [3162.0, 20835.333333333332], [3154.0, 20864.5], [3082.0, 21074.0], [3122.0, 20949.0], [3114.0, 20970.5], [3106.0, 21007.0], [3314.0, 20205.0], [3322.0, 20177.333333333332], [3306.0, 20262.0], [3282.0, 20331.666666666668], [3202.0, 20672.666666666668], [3242.0, 20512.333333333332], [3234.0, 20540.5], [3354.0, 20042.0], [3442.0, 19681.25], [3338.0, 20106.0], [3418.0, 19775.0], [3402.0, 19844.0], [3394.0, 19876.0], [3362.0, 20009.666666666668], [3578.0, 19119.0], [3570.0, 19147.5], [3538.0, 19282.0], [3522.0, 19356.0], [3458.0, 19610.0], [3482.0, 19521.0], [3498.0, 19445.0], [3698.0, 18500.333333333332], [3650.0, 18857.0], [3658.0, 18809.0], [3690.0, 18743.0], [3610.0, 19343.0], [3618.0, 19275.0], [3826.0, 18338.0], [3794.0, 18053.0], [3802.0, 18023.0], [3834.0, 17875.0], [3738.0, 18297.75], [3730.0, 18322.0], [3762.0, 18566.0], [3754.0, 18648.0], [3858.0, 17760.0], [3954.0, 17670.0], [3946.0, 17569.333333333332], [3938.0, 17525.5], [3842.0, 18143.333333333332], [3898.0, 17581.0], [3890.0, 17601.5], [3882.0, 17843.25], [4034.0, 17207.5], [4042.0, 17093.333333333332], [4082.0, 17063.0], [3994.0, 17460.0], [4018.0, 17330.0], [4002.0, 17372.0], [4058.0, 16821.0], [4324.0, 15876.0], [4308.0, 16000.25], [4244.0, 16295.0], [4228.0, 16271.25], [4292.0, 15949.0], [4132.0, 16675.666666666668], [4148.0, 16751.0], [4212.0, 16414.0], [4548.0, 14927.0], [4484.0, 15143.0], [4500.0, 15116.0], [4564.0, 14780.0], [4404.0, 15517.666666666666], [4468.0, 15255.666666666666], [4452.0, 15276.0], [4436.0, 15372.0], [4420.0, 15436.0], [4804.0, 13684.0], [4852.0, 13240.0], [4772.0, 13721.0], [4788.0, 13704.0], [4660.0, 14415.5], [4628.0, 14527.666666666666], [4724.0, 14083.0], [4692.0, 14161.0], [4884.0, 13334.0], [4996.0, 8145.0], [4868.0, 13274.0], [4980.0, 12793.5], [4948.0, 12940.0], [4932.0, 12982.5], [4309.0, 15943.0], [4229.0, 16422.0], [4293.0, 15948.0], [4117.0, 16869.75], [4133.0, 16851.0], [4149.0, 16707.0], [4213.0, 16455.0], [4197.0, 16467.0], [4389.0, 15616.333333333334], [4581.0, 14695.5], [4485.0, 15132.0], [4549.0, 14667.0], [4373.0, 15746.5], [4357.0, 15747.666666666666], [4469.0, 15254.0], [4421.0, 15515.0], [4837.0, 13477.5], [4757.0, 13871.666666666666], [4789.0, 13698.0], [4853.0, 13463.0], [4805.0, 13671.0], [4613.0, 14543.25], [4629.0, 14541.0], [4645.0, 14379.0], [4709.0, 14147.5], [4885.0, 13309.0], [4869.0, 13332.0], [4901.0, 13178.0], [4917.0, 13083.5], [4965.0, 12867.5], [2147.0, 24735.75], [2163.0, 24664.0], [2067.0, 25037.25], [2131.0, 24791.0], [2123.0, 24824.0], [2107.0, 24887.75], [2083.0, 24974.0], [2299.0, 24251.0], [2283.0, 24318.0], [2267.0, 24375.5], [2243.0, 24449.0], [2227.0, 24522.333333333332], [2203.0, 24517.0], [2187.0, 24582.0], [2411.0, 23798.0], [2427.0, 23643.666666666668], [2403.0, 23816.0], [2323.0, 24165.0], [2307.0, 24229.5], [2387.0, 23913.75], [2363.0, 23998.0], [2347.0, 24076.25], [2547.0, 23170.5], [2443.0, 23581.0], [2523.0, 23253.0], [2507.0, 23325.25], [2483.0, 23401.0], [2467.0, 23475.5], [2667.0, 22661.0], [2683.0, 22586.0], [2587.0, 22991.5], [2563.0, 23076.0], [2603.0, 22910.0], [2643.0, 22752.0], [2627.0, 22827.5], [2811.0, 22118.0], [2803.0, 22092.0], [2779.0, 22185.0], [2771.0, 22227.0], [2763.0, 22255.0], [2731.0, 22386.0], [2723.0, 22413.5], [2923.0, 21661.0], [2931.0, 21633.0], [2843.0, 22006.0], [2891.0, 21788.0], [2883.0, 21817.0], [2867.0, 21894.0], [2851.0, 21950.0], [3051.0, 21174.0], [3067.0, 21115.0], [2971.0, 21484.0], [2963.0, 21505.0], [3027.0, 21264.0], [3011.0, 21329.25], [2987.0, 21411.0], [3179.0, 20768.0], [3187.0, 20736.0], [3091.0, 21054.75], [3083.0, 21065.0], [3147.0, 20895.0], [3139.0, 20916.5], [3107.0, 20996.0], [3307.0, 20259.0], [3299.0, 20275.0], [3275.0, 20363.5], [3267.0, 20395.666666666668], [3259.0, 20425.5], [3203.0, 20658.0], [3227.0, 20577.0], [3219.0, 20605.5], [3427.0, 19743.0], [3443.0, 19669.0], [3347.0, 20070.666666666668], [3339.0, 20102.0], [3403.0, 19835.0], [3387.0, 19910.666666666668], [3379.0, 19938.0], [3563.0, 19191.5], [3547.0, 19250.0], [3523.0, 19347.0], [3467.0, 19582.25], [3483.0, 19508.0], [3507.0, 19416.25], [3603.0, 18954.666666666668], [3683.0, 18806.333333333332], [3595.0, 18986.0], [3643.0, 18895.666666666668], [3635.0, 19016.5], [3619.0, 19326.0], [3675.0, 19004.5], [3819.0, 18129.5], [3827.0, 17920.0], [3779.0, 18117.5], [3787.0, 18207.666666666668], [3715.0, 18579.5], [3723.0, 18552.0], [3739.0, 18672.0], [3763.0, 18643.0], [3755.0, 18214.0], [3803.0, 18392.0], [3907.0, 17676.333333333332], [3963.0, 17581.75], [3923.0, 17800.5], [3843.0, 17819.0], [3867.0, 17808.75], [3899.0, 17569.0], [3883.0, 17632.0], [3931.0, 17644.333333333332], [3987.0, 17402.333333333332], [4067.0, 17073.5], [4043.0, 16885.0], [4083.0, 17081.0], [3979.0, 17309.0], [4027.0, 17242.5], [4019.0, 17223.0], [4003.0, 17339.0], [4294.0, 16008.0], [4102.0, 16915.0], [4118.0, 16817.0], [4198.0, 16564.0], [4182.0, 16572.25], [4278.0, 16140.75], [4390.0, 15606.0], [4406.0, 15555.0], [4534.0, 14845.0], [4598.0, 14659.5], [4374.0, 15441.0], [4358.0, 15802.0], [4470.0, 15201.0], [4454.0, 15340.0], [4422.0, 15446.0], [4758.0, 13851.0], [4742.0, 13970.333333333334], [4774.0, 13819.0], [4790.0, 13738.0], [4630.0, 14462.0], [4614.0, 14492.0], [4694.0, 14212.0], [4678.0, 14250.333333333334], [4982.0, 12830.5], [4886.0, 13244.0], [4902.0, 13148.0], [4966.0, 12854.0], [4950.0, 12956.5], [4934.0, 12975.0], [4103.0, 16896.0], [4343.0, 15742.25], [4215.0, 16387.5], [4183.0, 16569.0], [4167.0, 16551.0], [4279.0, 15870.0], [4263.0, 16245.5], [4503.0, 15063.666666666666], [4599.0, 14608.0], [4519.0, 15014.25], [4535.0, 14958.0], [4583.0, 14686.5], [4391.0, 15354.0], [4359.0, 15650.0], [4439.0, 15428.666666666666], [4743.0, 13839.0], [4759.0, 13894.0], [4807.0, 13569.0], [4663.0, 14304.666666666666], [4727.0, 14033.333333333334], [4695.0, 14162.0], [4887.0, 13240.0], [4871.0, 13321.5], [4903.0, 13061.0], [4919.0, 13105.5], [4983.0, 12770.0], [4951.0, 12893.0], [4935.0, 13083.0], [541.0, 30665.0], [539.0, 30673.0], [531.0, 30688.0], [529.0, 30700.0], [521.0, 30722.0], [519.0, 30737.0], [571.0, 30559.5], [569.0, 30575.0], [561.0, 30598.0], [559.0, 30599.666666666668], [551.0, 30623.5], [549.0, 30642.333333333332], [601.0, 30460.5], [599.0, 30472.333333333332], [591.0, 30501.0], [589.0, 30505.666666666668], [581.0, 30526.0], [579.0, 30533.666666666668], [639.0, 30319.666666666668], [631.0, 30340.5], [629.0, 30364.0], [621.0, 30381.5], [619.0, 30392.0], [611.0, 30424.5], [609.0, 30431.0], [669.0, 30221.5], [671.0, 30210.0], [665.0, 30232.0], [641.0, 30309.0], [661.0, 30246.0], [659.0, 30250.333333333332], [655.0, 30263.0], [653.0, 30278.5], [651.0, 30272.0], [649.0, 30288.333333333332], [701.0, 30102.0], [699.0, 30112.0], [695.0, 30119.0], [691.0, 30143.5], [689.0, 30144.333333333332], [681.0, 30180.0], [679.0, 30182.666666666668], [675.0, 30194.0], [731.0, 29961.0], [735.0, 29945.0], [729.0, 29972.0], [727.0, 29971.0], [725.0, 29987.0], [721.0, 30020.5], [719.0, 30041.0], [715.0, 30052.0], [711.0, 30071.0], [709.0, 30080.0], [705.0, 30095.0], [761.0, 29844.0], [759.0, 29852.5], [757.0, 29851.0], [751.0, 29881.0], [749.0, 29895.333333333332], [745.0, 29905.0], [741.0, 29923.0], [739.0, 29933.666666666668], [795.0, 29708.0], [799.0, 29759.0], [793.0, 29721.0], [789.0, 29737.0], [785.0, 29745.0], [783.0, 29765.0], [779.0, 29774.333333333332], [771.0, 29804.0], [769.0, 29813.666666666668], [829.0, 29642.25], [825.0, 29652.0], [819.0, 29676.666666666668], [817.0, 29674.0], [815.0, 29681.0], [809.0, 29715.25], [805.0, 29725.0], [859.0, 29538.0], [855.0, 29558.0], [849.0, 29572.75], [845.0, 29582.0], [841.0, 29597.0], [839.0, 29616.0], [835.0, 29616.0], [895.0, 29416.0], [889.0, 29451.0], [887.0, 29453.0], [885.0, 29442.0], [879.0, 29472.666666666668], [875.0, 29485.0], [869.0, 29508.5], [865.0, 29513.0], [925.0, 29303.0], [923.0, 29316.333333333332], [915.0, 29342.0], [913.0, 29354.666666666668], [905.0, 29375.0], [899.0, 29407.666666666668], [897.0, 29410.0], [955.0, 29193.0], [953.0, 29210.333333333332], [945.0, 29240.0], [943.0, 29249.0], [935.0, 29273.5], [933.0, 29283.0], [985.0, 29094.0], [983.0, 29094.666666666668], [975.0, 29128.0], [973.0, 29134.666666666668], [969.0, 29145.0], [965.0, 29165.0], [963.0, 29171.666666666668], [1023.0, 28938.333333333332], [1015.0, 28967.0], [1013.0, 28978.333333333332], [1005.0, 29007.5], [1003.0, 29010.0], [995.0, 29051.0], [993.0, 29061.0], [1082.0, 28702.0], [1078.0, 28721.0], [1070.0, 28750.5], [1058.0, 28792.0], [1050.0, 28840.0], [1038.0, 28877.666666666668], [1030.0, 28907.5], [1150.0, 28441.0], [1138.0, 28497.333333333332], [1130.0, 28518.0], [1118.0, 28570.666666666668], [1110.0, 28595.0], [1098.0, 28652.666666666668], [1090.0, 28679.0], [1214.0, 28194.0], [1198.0, 28265.5], [1194.0, 28269.0], [1178.0, 28335.25], [1174.0, 28346.0], [1162.0, 28395.0], [1158.0, 28420.5], [1154.0, 28416.0], [1278.0, 27943.5], [1274.0, 27974.0], [1258.0, 28021.25], [1254.0, 28055.0], [1238.0, 28117.5], [1234.0, 28121.0], [1218.0, 28194.333333333332], [1338.0, 27727.75], [1334.0, 27768.0], [1318.0, 27807.333333333332], [1314.0, 27807.0], [1298.0, 27882.666666666668], [1294.0, 27881.0], [1402.0, 27455.0], [1398.0, 27479.0], [1394.0, 27491.0], [1390.0, 27515.0], [1378.0, 27567.5], [1374.0, 27583.0], [1358.0, 27656.25], [1354.0, 27650.0], [1458.0, 27235.5], [1454.0, 27236.0], [1438.0, 27314.75], [1434.0, 27326.0], [1418.0, 27397.0], [1414.0, 27404.0], [1534.0, 26974.5], [1518.0, 27028.0], [1514.0, 27038.0], [1498.0, 27100.25], [1494.0, 27114.0], [1482.0, 27163.0], [1478.0, 27179.25], [1474.0, 27173.0], [1594.0, 26714.5], [1582.0, 26758.333333333332], [1574.0, 26794.5], [1562.0, 26838.666666666668], [1554.0, 26868.0], [1542.0, 26910.0], [1662.0, 26529.666666666668], [1654.0, 26559.5], [1642.0, 26616.0], [1634.0, 26639.0], [1626.0, 26671.0], [1622.0, 26686.333333333332], [1614.0, 26715.0], [1602.0, 26730.0], [1722.0, 26305.0], [1714.0, 26333.0], [1702.0, 26384.666666666668], [1694.0, 26403.5], [1682.0, 26456.0], [1674.0, 26486.5], [1782.0, 26114.333333333332], [1774.0, 26133.5], [1762.0, 26197.0], [1754.0, 26205.0], [1746.0, 26300.0], [1742.0, 26292.666666666668], [1734.0, 26256.5], [1846.0, 25851.0], [1854.0, 25826.5], [1842.0, 25871.666666666668], [1802.0, 26041.0], [1822.0, 25939.333333333332], [1794.0, 26070.0], [1814.0, 25962.5], [1834.0, 25897.5], [1830.0, 25907.0], [1918.0, 25583.0], [1890.0, 25686.0], [1882.0, 25724.25], [1858.0, 25806.0], [1862.0, 25814.0], [1878.0, 25739.0], [1902.0, 25650.0], [1898.0, 25656.0], [1978.0, 25354.0], [1982.0, 25349.75], [1974.0, 25371.0], [1922.0, 25571.333333333332], [1962.0, 25424.25], [1958.0, 25431.0], [1942.0, 25500.0], [1938.0, 25505.0], [2038.0, 25128.0], [2042.0, 25129.75], [1998.0, 25279.0], [2022.0, 25198.25], [2018.0, 25205.0], [2002.0, 25272.25], [2172.0, 24636.5], [2148.0, 24722.0], [2132.0, 24790.0], [2108.0, 24875.0], [2052.0, 25098.0], [2068.0, 25029.0], [2100.0, 24903.5], [2092.0, 24944.0], [2292.0, 24291.75], [2188.0, 24571.0], [2268.0, 24368.0], [2252.0, 24427.25], [2228.0, 24503.0], [2212.0, 24560.5], [2428.0, 23663.0], [2412.0, 23796.0], [2388.0, 23899.0], [2372.0, 23970.25], [2332.0, 24133.333333333332], [2308.0, 24219.0], [2348.0, 24058.0], [2548.0, 23160.0], [2532.0, 23229.5], [2508.0, 23312.0], [2492.0, 23382.0], [2452.0, 23555.75], [2468.0, 23460.0], [2668.0, 22644.0], [2588.0, 22998.0], [2572.0, 23052.75], [2652.0, 22716.75], [2628.0, 22827.0], [2612.0, 22881.25], [2788.0, 22152.0], [2796.0, 22121.0], [2716.0, 22446.333333333332], [2708.0, 22470.5], [2692.0, 22537.0], [2756.0, 22286.0], [2748.0, 22314.5], [2724.0, 22409.0], [2916.0, 21687.666666666668], [2908.0, 21715.0], [2876.0, 21842.666666666668], [2836.0, 22047.333333333332], [2828.0, 22074.5], [2868.0, 21896.0], [2972.0, 21469.0], [3052.0, 21163.0], [2956.0, 21539.333333333332], [2948.0, 21563.5], [3036.0, 21233.0], [3012.0, 21321.0], [2996.0, 21387.25], [3188.0, 20727.0], [3172.0, 20796.0], [3164.0, 20825.0], [3132.0, 20939.0], [3076.0, 21099.333333333332], [3092.0, 21047.0], [3124.0, 20930.5], [3212.0, 20632.0], [3324.0, 20164.5], [3204.0, 20660.0], [3292.0, 20293.333333333332], [3284.0, 20321.0], [3252.0, 20468.666666666668], [3244.0, 20499.5], [3452.0, 19640.0], [3428.0, 19731.0], [3412.0, 19805.0], [3404.0, 19829.0], [3332.0, 20133.0], [3348.0, 20061.0], [3372.0, 19970.0], [3364.0, 19999.0], [3580.0, 19103.5], [3532.0, 19315.25], [3468.0, 19568.0], [3508.0, 19404.0], [3492.0, 19478.0], [3548.0, 19240.0], [3700.0, 18681.5], [3708.0, 18821.333333333332], [3668.0, 18750.666666666668], [3660.0, 18657.5], [3684.0, 18556.0], [3588.0, 19076.666666666668], [3628.0, 18856.333333333332], [3620.0, 19373.0], [3828.0, 18351.0], [3804.0, 18013.0], [3812.0, 17980.666666666668], [3724.0, 18757.0], [3772.0, 18448.0], [3764.0, 18181.0], [3748.0, 18354.75], [3956.0, 17522.5], [3964.0, 17585.0], [3908.0, 17875.0], [3916.0, 17820.333333333332], [3948.0, 17321.5], [3852.0, 17788.75], [3868.0, 17716.0], [3892.0, 17821.0], [3996.0, 17192.0], [4092.0, 16993.25], [4044.0, 17132.0], [4052.0, 17053.25], [4068.0, 17052.0], [3988.0, 17394.0], [3972.0, 17501.333333333332], [4028.0, 17329.0], [4012.0, 17329.666666666668], [4004.0, 17324.0], [4328.0, 15914.0], [4344.0, 15827.0], [4264.0, 16268.0], [4248.0, 16308.75], [4136.0, 16621.0], [4152.0, 16623.0], [4200.0, 16519.5], [4168.0, 16690.0], [4584.0, 14516.0], [4568.0, 14805.25], [4504.0, 15088.0], [4520.0, 14794.0], [4376.0, 15647.0], [4360.0, 15757.0], [4456.0, 15352.5], [4424.0, 15503.0], [4824.0, 13567.4], [4840.0, 13479.666666666666], [4856.0, 13389.666666666666], [4744.0, 13935.0], [4792.0, 13696.0], [4808.0, 13640.0], [4664.0, 14130.0], [4648.0, 14418.666666666666], [4712.0, 14066.666666666666], [4680.0, 14336.0], [5000.0, 8026.5], [4872.0, 13151.0], [4888.0, 13086.0], [4904.0, 13167.0], [4968.0, 12817.5], [4329.0, 15898.0], [4233.0, 16296.25], [4217.0, 16452.0], [4137.0, 16783.333333333332], [4153.0, 16656.0], [4185.0, 16534.0], [4169.0, 16338.0], [4249.0, 16250.0], [4601.0, 14555.5], [4489.0, 15158.25], [4505.0, 15113.0], [4537.0, 14936.5], [4569.0, 14582.0], [4553.0, 14923.25], [4409.0, 15493.0], [4361.0, 15759.0], [4441.0, 15362.0], [4425.0, 15203.0], [4649.0, 14297.0], [4809.0, 13604.0], [4761.0, 13876.0], [4777.0, 13777.333333333334], [4793.0, 13546.0], [4633.0, 14478.0], [4665.0, 14127.0], [4729.0, 13993.5], [4697.0, 14125.5], [4681.0, 14328.0], [4873.0, 13307.0], [4921.0, 13071.5], [4985.0, 12798.5], [4969.0, 12862.0], [4953.0, 12845.5], [4937.0, 13033.0], [2173.0, 24633.0], [2117.0, 24845.75], [2157.0, 24695.25], [2077.0, 25005.333333333332], [2053.0, 25086.0], [2133.0, 24778.0], [2093.0, 24932.0], [2293.0, 24275.0], [2277.0, 24343.0], [2253.0, 24421.0], [2237.0, 24481.25], [2197.0, 24542.75], [2213.0, 24572.0], [2413.0, 23779.0], [2333.0, 24123.0], [2317.0, 24191.0], [2397.0, 23851.5], [2373.0, 23958.0], [2357.0, 24026.25], [2557.0, 23109.75], [2533.0, 23219.0], [2517.0, 23283.75], [2493.0, 23366.0], [2437.0, 23614.5], [2453.0, 23546.0], [2485.0, 23393.0], [2477.0, 23434.75], [2677.0, 22610.5], [2573.0, 23038.0], [2653.0, 22701.0], [2645.0, 22735.5], [2637.0, 22790.0], [2613.0, 22875.0], [2597.0, 22959.25], [2709.0, 22468.0], [2813.0, 22132.5], [2701.0, 22505.333333333332], [2781.0, 22183.5], [2773.0, 22214.5], [2741.0, 22345.666666666668], [2733.0, 22376.0], [2941.0, 21595.333333333332], [2933.0, 21624.0], [2901.0, 21748.333333333332], [2893.0, 21774.5], [2821.0, 22104.333333333332], [2861.0, 21923.0], [2853.0, 21942.0], [3061.0, 21133.5], [2957.0, 21525.0], [3037.0, 21220.0], [3021.0, 21290.5], [2997.0, 21378.0], [2981.0, 21442.25], [3189.0, 20719.0], [3197.0, 20689.0], [3101.0, 21023.0], [3077.0, 21091.0], [3157.0, 20856.0], [3149.0, 20890.0], [3133.0, 20939.0], [3117.0, 20963.0], [3317.0, 20194.0], [3309.0, 20238.5], [3285.0, 20313.0], [3277.0, 20354.333333333332], [3269.0, 20385.5], [3205.0, 20653.0], [3213.0, 20620.0], [3229.0, 20561.5], [3237.0, 20531.666666666668], [3437.0, 19701.5], [3453.0, 19629.0], [3357.0, 20030.333333333332], [3349.0, 20062.0], [3333.0, 20123.0], [3413.0, 19791.0], [3397.0, 19866.0], [3389.0, 19896.5], [3573.0, 19137.0], [3565.0, 19165.5], [3533.0, 19302.0], [3557.0, 19210.0], [3477.0, 19539.75], [3517.0, 19376.5], [3493.0, 19467.0], [3693.0, 18792.333333333332], [3685.0, 19042.0], [3653.0, 19157.666666666668], [3645.0, 18940.0], [3589.0, 19064.0], [3605.0, 19145.5], [3613.0, 19332.666666666668], [3629.0, 19285.0], [3789.0, 18472.0], [3837.0, 17873.666666666668], [3797.0, 18047.0], [3773.0, 18139.0], [3733.0, 18444.0], [3757.0, 18413.0], [3749.0, 18243.0], [3909.0, 17861.0], [3949.0, 17627.0], [3917.0, 17838.0], [3941.0, 17480.0], [3853.0, 17795.0], [3893.0, 17597.0], [3877.0, 17686.0], [3933.0, 17740.0], [3997.0, 17386.0], [4077.0, 17029.75], [4093.0, 16973.0], [4037.0, 17225.333333333332], [4053.0, 17201.0], [3989.0, 17119.0], [3973.0, 17583.0], [4029.0, 17323.0], [4013.0, 17295.0], [4122.0, 16743.0], [4298.0, 15920.5], [4218.0, 16416.0], [4138.0, 16747.0], [4154.0, 16629.0], [4202.0, 16468.5], [4234.0, 16400.0], [4490.0, 15228.0], [4506.0, 15039.0], [4554.0, 14921.0], [4394.0, 15584.0], [4362.0, 15700.0], [4474.0, 15235.25], [4426.0, 15410.0], [4842.0, 13432.0], [4746.0, 13906.5], [4858.0, 13365.0], [4762.0, 13929.0], [4794.0, 13728.0], [4826.0, 13526.0], [4650.0, 14413.0], [4618.0, 14490.5], [4730.0, 13998.0], [4714.0, 14044.5], [4890.0, 13217.0], [4874.0, 13256.0], [4906.0, 13215.0], [4922.0, 13096.0], [4986.0, 12785.0], [4970.0, 12833.0], [4938.0, 13006.0], [4123.0, 16546.0], [4299.0, 16063.0], [4107.0, 16891.5], [4139.0, 16715.0], [4219.0, 16130.0], [4203.0, 16543.0], [4187.0, 16510.5], [4283.0, 16117.5], [4267.0, 16066.333333333334], [4603.0, 14675.5], [4539.0, 14939.5], [4587.0, 14773.0], [4411.0, 15504.0], [4379.0, 15622.0], [4475.0, 15222.0], [4459.0, 15207.0], [4827.0, 13538.0], [4859.0, 13409.0], [4747.0, 13923.0], [4779.0, 13781.5], [4795.0, 13618.0], [4619.0, 14476.0], [4635.0, 14422.0], [4699.0, 14146.5], [4683.0, 14252.5], [4875.0, 13130.0], [4891.0, 13187.0], [4907.0, 13133.0], [4971.0, 12865.0], [4955.0, 12908.5], [4939.0, 12931.0], [1083.0, 28701.0], [1075.0, 28730.5], [1063.0, 28780.0], [1055.0, 28802.5], [1043.0, 28858.333333333332], [1035.0, 28888.5], [1143.0, 28472.666666666668], [1139.0, 28490.0], [1135.0, 28500.5], [1123.0, 28552.333333333332], [1119.0, 28563.0], [1115.0, 28581.5], [1103.0, 28641.666666666668], [1095.0, 28661.5], [1215.0, 28193.0], [1203.0, 28243.666666666668], [1199.0, 28243.0], [1183.0, 28320.5], [1179.0, 28330.0], [1163.0, 28407.5], [1159.0, 28413.0], [1279.0, 27931.0], [1263.0, 28020.0], [1259.0, 28008.0], [1243.0, 28108.0], [1239.0, 28099.0], [1223.0, 28177.25], [1219.0, 28176.0], [1343.0, 27704.0], [1339.0, 27723.0], [1323.0, 27785.0], [1319.0, 27802.0], [1315.0, 27805.0], [1311.0, 27812.0], [1303.0, 27863.0], [1299.0, 27876.0], [1295.0, 27878.0], [1283.0, 27927.25], [1403.0, 27450.0], [1399.0, 27458.0], [1383.0, 27550.0], [1379.0, 27546.0], [1367.0, 27610.333333333332], [1363.0, 27633.5], [1359.0, 27648.0], [1463.0, 27230.75], [1459.0, 27215.0], [1443.0, 27293.0], [1439.0, 27301.0], [1419.0, 27384.0], [1523.0, 27021.333333333332], [1519.0, 27018.0], [1503.0, 27080.5], [1499.0, 27097.0], [1483.0, 27152.0], [1479.0, 27158.0], [1599.0, 26779.0], [1591.0, 26732.5], [1587.0, 26749.0], [1579.0, 26768.5], [1567.0, 26820.333333333332], [1559.0, 26841.5], [1547.0, 26886.666666666668], [1539.0, 26920.0], [1659.0, 26538.5], [1647.0, 26591.333333333332], [1639.0, 26621.0], [1627.0, 26671.0], [1619.0, 26699.5], [1607.0, 26765.666666666668], [1727.0, 26286.333333333332], [1719.0, 26314.5], [1707.0, 26367.666666666668], [1699.0, 26396.5], [1687.0, 26432.0], [1679.0, 26465.0], [1667.0, 26510.333333333332], [1787.0, 26093.0], [1783.0, 26100.0], [1779.0, 26120.5], [1767.0, 26160.666666666668], [1763.0, 26163.0], [1759.0, 26188.0], [1747.0, 26267.0], [1739.0, 26235.0], [1847.0, 25850.0], [1807.0, 26003.0], [1799.0, 26046.0], [1839.0, 25882.5], [1827.0, 25919.666666666668], [1819.0, 25943.5], [1919.0, 25574.0], [1907.0, 25628.0], [1903.0, 25639.0], [1887.0, 25702.75], [1867.0, 25778.0], [1863.0, 25779.0], [1883.0, 25711.0], [1983.0, 25338.0], [1975.0, 25370.0], [1967.0, 25405.25], [1963.0, 25409.0], [1947.0, 25478.25], [1923.0, 25562.0], [1927.0, 25556.25], [1943.0, 25494.0], [2043.0, 25128.0], [2047.0, 25114.25], [2035.0, 25135.0], [1987.0, 25326.5], [2007.0, 25250.25], [2003.0, 25263.0], [2031.0, 25154.0], [2027.0, 25179.75], [2023.0, 25182.0], [2158.0, 24685.0], [2078.0, 24990.0], [2062.0, 25057.25], [2142.0, 24752.5], [2118.0, 24835.0], [2102.0, 24906.5], [2302.0, 24247.0], [2278.0, 24328.0], [2262.0, 24399.75], [2238.0, 24470.0], [2182.0, 24602.5], [2198.0, 24527.0], [2222.0, 24548.25], [2214.0, 24574.0], [2326.0, 24154.333333333332], [2422.0, 23669.25], [2318.0, 24181.0], [2310.0, 24212.5], [2398.0, 23838.0], [2382.0, 23930.25], [2358.0, 24016.0], [2342.0, 24099.75], [2542.0, 23189.75], [2558.0, 23099.0], [2462.0, 23494.5], [2438.0, 23600.0], [2518.0, 23271.0], [2502.0, 23343.5], [2478.0, 23423.0], [2678.0, 22601.0], [2662.0, 22684.0], [2638.0, 22781.0], [2622.0, 22845.25], [2582.0, 23014.0], [2598.0, 22943.0], [2798.0, 22108.5], [2806.0, 22080.333333333332], [2718.0, 22429.5], [2694.0, 22541.5], [2766.0, 22247.0], [2758.0, 22277.0], [2726.0, 22404.0], [2918.0, 21681.5], [2926.0, 21651.333333333332], [2846.0, 21972.0], [2838.0, 22038.5], [2822.0, 22101.0], [2886.0, 21804.333333333332], [2878.0, 21826.5], [3062.0, 21132.0], [3046.0, 21192.5], [3022.0, 21280.0], [3006.0, 21351.25], [2958.0, 21521.0], [2966.0, 21498.333333333332], [2982.0, 21429.0], [3182.0, 20754.666666666668], [3174.0, 20784.0], [3142.0, 20918.0], [3134.0, 20940.0], [3078.0, 21079.0], [3102.0, 21009.0], [3086.0, 21065.333333333332], [3302.0, 20281.0], [3294.0, 20279.5], [3262.0, 20415.666666666668], [3222.0, 20598.333333333332], [3214.0, 20622.0], [3254.0, 20447.0], [3438.0, 19691.0], [3342.0, 20092.0], [3334.0, 20123.0], [3422.0, 19765.0], [3382.0, 19930.333333333332], [3374.0, 19959.0], [3534.0, 19294.0], [3558.0, 19196.0], [3542.0, 19270.75], [3518.0, 19366.0], [3462.0, 19600.5], [3478.0, 19528.0], [3502.0, 19436.25], [3694.0, 19003.0], [3710.0, 18651.5], [3654.0, 18681.0], [3678.0, 18708.666666666668], [3670.0, 19045.5], [3598.0, 18979.333333333332], [3590.0, 19062.0], [3638.0, 18811.666666666668], [3630.0, 18839.0], [3814.0, 18385.0], [3838.0, 17839.0], [3782.0, 18228.666666666668], [3822.0, 18056.333333333332], [3734.0, 18306.0], [3718.0, 18669.666666666668], [3774.0, 18141.0], [3750.0, 18611.0], [3918.0, 17915.0], [3926.0, 17672.0], [3958.0, 17566.0], [3902.0, 17558.666666666668], [3862.0, 17843.5], [3878.0, 17673.0], [3934.0, 17698.0], [3998.0, 17079.0], [4086.0, 17005.0], [4038.0, 17288.0], [4078.0, 17056.0], [3982.0, 17345.666666666668], [3974.0, 17449.0], [4022.0, 17255.666666666668], [4014.0, 17310.0], [4062.0, 17062.0], [4108.0, 16834.0], [4348.0, 15803.0], [4220.0, 16338.0], [4188.0, 16613.0], [4172.0, 16519.0], [4284.0, 16132.0], [4268.0, 16112.0], [4396.0, 15581.0], [4604.0, 14606.0], [4588.0, 14566.333333333334], [4524.0, 14928.5], [4540.0, 14889.0], [4364.0, 15590.0], [4460.0, 15051.0], [4444.0, 15255.666666666666], [4428.0, 15449.0], [4812.0, 13668.333333333334], [4764.0, 13834.0], [4668.0, 14223.666666666666], [4620.0, 14321.0], [4732.0, 14044.5], [4684.0, 14196.0], [4892.0, 13255.0], [4908.0, 13203.0], [4924.0, 13041.0], [4988.0, 12742.0], [4956.0, 12971.0], [4333.0, 15839.25], [4349.0, 15801.0], [4109.0, 16916.0], [4157.0, 16662.666666666668], [4173.0, 16681.0], [4269.0, 16101.0], [4253.0, 16242.0], [4573.0, 14765.75], [4605.0, 14615.0], [4509.0, 15044.666666666666], [4525.0, 14974.0], [4589.0, 14668.0], [4381.0, 15668.0], [4477.0, 15184.0], [4445.0, 15413.0], [4429.0, 15191.0], [4845.0, 13451.666666666666], [4861.0, 13383.5], [4749.0, 13904.5], [4781.0, 13719.5], [4797.0, 13618.0], [4813.0, 13660.0], [4637.0, 14430.0], [4653.0, 14388.333333333334], [4669.0, 14310.0], [4717.0, 14027.0], [4701.0, 14132.5], [4685.0, 14173.0], [4893.0, 13276.0], [4909.0, 13186.0], [4989.0, 12739.0], [4973.0, 12832.0], [2167.0, 24658.0], [2063.0, 25046.0], [2143.0, 24741.0], [2127.0, 24811.75], [2111.0, 24866.0], [2103.0, 24890.0], [2087.0, 24966.5], [2303.0, 24243.0], [2287.0, 24304.25], [2263.0, 24377.0], [2247.0, 24445.0], [2207.0, 24505.25], [2199.0, 24524.0], [2183.0, 24586.0], [2223.0, 24537.0], [2407.0, 23817.25], [2423.0, 23658.0], [2327.0, 24154.0], [2383.0, 23920.0], [2367.0, 23989.5], [2343.0, 24086.0], [2543.0, 23175.0], [2463.0, 23485.0], [2447.0, 23575.0], [2527.0, 23249.0], [2503.0, 23340.0], [2487.0, 23399.0], [2679.0, 22600.0], [2687.0, 22563.75], [2663.0, 22675.0], [2583.0, 23008.0], [2567.0, 23077.5], [2623.0, 22829.0], [2607.0, 22904.5], [2655.0, 22699.5], [2647.0, 22733.0], [2791.0, 22140.0], [2711.0, 22463.5], [2703.0, 22495.0], [2783.0, 22171.5], [2751.0, 22305.0], [2743.0, 22335.0], [2831.0, 22068.0], [2943.0, 21579.0], [2823.0, 22098.0], [2911.0, 21710.0], [2903.0, 21739.5], [2871.0, 21863.0], [2863.0, 21903.0], [2967.0, 21491.0], [3071.0, 21121.5], [3063.0, 21125.0], [3047.0, 21185.0], [2951.0, 21552.333333333332], [3031.0, 21252.75], [3007.0, 21347.0], [2999.0, 21370.0], [2991.0, 21406.75], [3103.0, 21002.0], [3199.0, 20686.5], [3087.0, 21053.0], [3167.0, 20816.333333333332], [3159.0, 20846.0], [3127.0, 20961.0], [3119.0, 20959.0], [3111.0, 20986.25], [3327.0, 20152.333333333332], [3319.0, 20185.0], [3287.0, 20312.5], [3279.0, 20344.5], [3207.0, 20652.0], [3247.0, 20488.333333333332], [3239.0, 20523.0], [3359.0, 20020.5], [3447.0, 19661.5], [3343.0, 20085.0], [3423.0, 19754.0], [3407.0, 19828.0], [3399.0, 19854.0], [3367.0, 19990.333333333332], [3583.0, 19100.666666666668], [3527.0, 19338.25], [3575.0, 19127.0], [3543.0, 19259.0], [3511.0, 19397.333333333332], [3463.0, 19587.0], [3487.0, 19498.25], [3503.0, 19427.0], [3655.0, 19188.0], [3703.0, 18482.666666666668], [3663.0, 18942.0], [3695.0, 18985.0], [3615.0, 19121.5], [3623.0, 19017.0], [3679.0, 18576.0], [3839.0, 17832.0], [3823.0, 17926.0], [3799.0, 18035.5], [3719.0, 18783.0], [3727.0, 18342.666666666668], [3743.0, 18490.75], [3767.0, 18572.666666666668], [3759.0, 18446.0], [3807.0, 18131.333333333332], [3943.0, 17660.5], [3967.0, 17462.0], [3959.0, 17256.0], [3951.0, 17435.0], [3903.0, 17589.0], [3847.0, 17989.0], [3863.0, 17738.0], [3887.0, 17712.0], [4039.0, 17169.0], [4087.0, 17005.0], [4047.0, 17078.0], [3999.0, 17377.0], [4023.0, 17265.0], [4007.0, 17234.666666666668], [4063.0, 16802.0], [4334.0, 15735.0], [4142.0, 16760.666666666668], [4254.0, 16238.0], [4110.0, 16843.0], [4126.0, 16849.666666666668], [4158.0, 16647.0], [4174.0, 16679.0], [4238.0, 16344.0], [4558.0, 14828.75], [4494.0, 15119.5], [4510.0, 14838.0], [4574.0, 14798.0], [4414.0, 15504.333333333334], [4382.0, 15723.0], [4366.0, 15712.0], [4446.0, 15334.0], [4430.0, 15380.0], [4862.0, 13187.0], [4846.0, 13446.0], [4750.0, 13994.0], [4766.0, 13752.0], [4782.0, 13767.0], [4798.0, 13775.0], [4830.0, 13510.666666666666], [4814.0, 13581.0], [4670.0, 14189.0], [4638.0, 14427.0], [4734.0, 13960.5], [4702.0, 14214.0], [4990.0, 12717.0], [4878.0, 13242.0], [4958.0, 12872.0], [4303.0, 15948.25], [4143.0, 16807.0], [4239.0, 16292.0], [4223.0, 16447.666666666668], [4127.0, 16822.0], [4159.0, 16747.0], [4207.0, 16405.25], [4191.0, 16508.333333333332], [4495.0, 15183.0], [4543.0, 14760.666666666666], [4575.0, 14720.0], [4559.0, 14844.0], [4399.0, 15567.333333333334], [4479.0, 15232.0], [4431.0, 15418.0], [4767.0, 13860.0], [4847.0, 13522.0], [4783.0, 13854.0], [4799.0, 13655.0], [4735.0, 13795.0], [4623.0, 14529.333333333334], [4655.0, 14287.0], [4719.0, 13993.0], [4687.0, 14237.0], [4991.0, 12713.0], [4879.0, 13283.0], [4927.0, 13021.333333333334], [4975.0, 12810.0], [4943.0, 12960.75], [1.0, 32259.0]], "isOverall": false, "label": "Http Request", "isController": false}, {"data": [[2501.365600000006, 23138.32020000001]], "isOverall": false, "label": "Http Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8761.35, "minX": 1.65795306E12, "maxY": 29083.333333333332, "series": [{"data": [[1.65795306E12, 8761.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65795306E12, 29083.333333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795306E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 23138.32020000001, "minX": 1.65795306E12, "maxY": 23138.32020000001, "series": [{"data": [[1.65795306E12, 23138.32020000001]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795306E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 23138.303600000014, "minX": 1.65795306E12, "maxY": 23138.303600000014, "series": [{"data": [[1.65795306E12, 23138.303600000014]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795306E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 63.853, "minX": 1.65795306E12, "maxY": 63.853, "series": [{"data": [[1.65795306E12, 63.853]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795306E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 7951.0, "minX": 1.65795306E12, "maxY": 32194.0, "series": [{"data": [[1.65795306E12, 32194.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65795306E12, 30525.600000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65795306E12, 32027.56]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65795306E12, 31341.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65795306E12, 7951.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65795306E12, 23172.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795306E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8070.0, "minX": 1.0, "maxY": 32227.5, "series": [{"data": [[133.0, 13061.0], [150.0, 32096.5], [189.0, 17698.0], [191.0, 23600.0], [3.0, 10124.0], [206.0, 18649.5], [208.0, 13870.5], [214.0, 14878.5], [213.0, 22241.5], [211.0, 19445.0], [215.0, 20313.0], [210.0, 22783.5], [219.0, 26100.0], [216.0, 26818.5], [221.0, 30454.5], [218.0, 30091.0], [225.0, 25249.0], [224.0, 22820.0], [1.0, 11087.0], [5.0, 8070.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[150.0, 32227.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 225.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8066.0, "minX": 1.0, "maxY": 32227.5, "series": [{"data": [[133.0, 13061.0], [150.0, 32096.5], [189.0, 17698.0], [191.0, 23600.0], [3.0, 10124.0], [206.0, 18649.5], [208.0, 13870.5], [214.0, 14878.5], [213.0, 22241.5], [211.0, 19445.0], [215.0, 20313.0], [210.0, 22783.5], [219.0, 26100.0], [216.0, 26818.5], [221.0, 30454.5], [218.0, 30091.0], [225.0, 25249.0], [224.0, 22820.0], [1.0, 11087.0], [5.0, 8066.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[150.0, 32227.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 225.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.65795306E12, "maxY": 83.33333333333333, "series": [{"data": [[1.65795306E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795306E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.65795306E12, "maxY": 81.83333333333333, "series": [{"data": [[1.65795306E12, 81.83333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.65795306E12, 1.5]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795306E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.65795306E12, "maxY": 81.83333333333333, "series": [{"data": [[1.65795306E12, 81.83333333333333]], "isOverall": false, "label": "Http Request-success", "isController": false}, {"data": [[1.65795306E12, 1.5]], "isOverall": false, "label": "Http Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795306E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.65795306E12, "maxY": 81.83333333333333, "series": [{"data": [[1.65795306E12, 81.83333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.65795306E12, 1.5]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795306E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

