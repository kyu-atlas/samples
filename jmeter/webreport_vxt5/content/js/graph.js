/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6398.0, "minX": 0.0, "maxY": 33041.0, "series": [{"data": [[0.0, 6398.0], [0.1, 6418.0], [0.2, 6429.0], [0.3, 6469.0], [0.4, 6505.0], [0.5, 6511.0], [0.6, 6519.0], [0.7, 6524.0], [0.8, 6540.0], [0.9, 6553.0], [1.0, 6566.0], [1.1, 6575.0], [1.2, 6579.0], [1.3, 6601.0], [1.4, 6621.0], [1.5, 6631.0], [1.6, 6653.0], [1.7, 6672.0], [1.8, 6676.0], [1.9, 6688.0], [2.0, 6694.0], [2.1, 6702.0], [2.2, 6705.0], [2.3, 6713.0], [2.4, 6727.0], [2.5, 8235.0], [2.6, 8275.0], [2.7, 8289.0], [2.8, 8311.0], [2.9, 8335.0], [3.0, 8339.0], [3.1, 8344.0], [3.2, 8346.0], [3.3, 8355.0], [3.4, 8371.0], [3.5, 8378.0], [3.6, 8389.0], [3.7, 8398.0], [3.8, 8401.0], [3.9, 8406.0], [4.0, 8442.0], [4.1, 8449.0], [4.2, 8453.0], [4.3, 8466.0], [4.4, 8476.0], [4.5, 8489.0], [4.6, 9548.0], [4.7, 9570.0], [4.8, 9615.0], [4.9, 9633.0], [5.0, 9644.0], [5.1, 9664.0], [5.2, 9695.0], [5.3, 9709.0], [5.4, 9713.0], [5.5, 9720.0], [5.6, 9721.0], [5.7, 9722.0], [5.8, 9724.0], [5.9, 9731.0], [6.0, 9733.0], [6.1, 9735.0], [6.2, 9740.0], [6.3, 10326.0], [6.4, 10362.0], [6.5, 10442.0], [6.6, 10452.0], [6.7, 10460.0], [6.8, 10470.0], [6.9, 10472.0], [7.0, 10477.0], [7.1, 10485.0], [7.2, 10490.0], [7.3, 10492.0], [7.4, 10501.0], [7.5, 10504.0], [7.6, 10512.0], [7.7, 10527.0], [7.8, 10528.0], [7.9, 10543.0], [8.0, 10548.0], [8.1, 10549.0], [8.2, 11144.0], [8.3, 11144.0], [8.4, 11154.0], [8.5, 11328.0], [8.6, 11330.0], [8.7, 11330.0], [8.8, 11342.0], [8.9, 11343.0], [9.0, 11354.0], [9.1, 11355.0], [9.2, 11357.0], [9.3, 11361.0], [9.4, 11367.0], [9.5, 11368.0], [9.6, 11370.0], [9.7, 11532.0], [9.8, 11610.0], [9.9, 11622.0], [10.0, 11650.0], [10.1, 11667.0], [10.2, 11698.0], [10.3, 11707.0], [10.4, 11741.0], [10.5, 11772.0], [10.6, 11788.0], [10.7, 11795.0], [10.8, 11823.0], [10.9, 11875.0], [11.0, 11905.0], [11.1, 11940.0], [11.2, 12005.0], [11.3, 12038.0], [11.4, 12067.0], [11.5, 12103.0], [11.6, 12157.0], [11.7, 12208.0], [11.8, 12264.0], [11.9, 12294.0], [12.0, 12326.0], [12.1, 12369.0], [12.2, 12403.0], [12.3, 12522.0], [12.4, 12553.0], [12.5, 12588.0], [12.6, 12607.0], [12.7, 12643.0], [12.8, 12672.0], [12.9, 12701.0], [13.0, 12726.0], [13.1, 12753.0], [13.2, 12777.0], [13.3, 12802.0], [13.4, 12831.0], [13.5, 12956.0], [13.6, 12993.0], [13.7, 13024.0], [13.8, 13048.0], [13.9, 13070.0], [14.0, 13091.0], [14.1, 13112.0], [14.2, 13133.0], [14.3, 13151.0], [14.4, 13174.0], [14.5, 13206.0], [14.6, 13230.0], [14.7, 13247.0], [14.8, 13269.0], [14.9, 13288.0], [15.0, 13308.0], [15.1, 13330.0], [15.2, 13405.0], [15.3, 13428.0], [15.4, 13465.0], [15.5, 13494.0], [15.6, 13537.0], [15.7, 13570.0], [15.8, 13593.0], [15.9, 13613.0], [16.0, 13629.0], [16.1, 13659.0], [16.2, 13872.0], [16.3, 13930.0], [16.4, 13955.0], [16.5, 14000.0], [16.6, 14057.0], [16.7, 14079.0], [16.8, 14124.0], [16.9, 14155.0], [17.0, 14200.0], [17.1, 14251.0], [17.2, 14261.0], [17.3, 14281.0], [17.4, 14327.0], [17.5, 14362.0], [17.6, 14415.0], [17.7, 14451.0], [17.8, 14489.0], [17.9, 14529.0], [18.0, 14571.0], [18.1, 14613.0], [18.2, 14660.0], [18.3, 14686.0], [18.4, 14728.0], [18.5, 14763.0], [18.6, 14790.0], [18.7, 14826.0], [18.8, 14858.0], [18.9, 14881.0], [19.0, 14925.0], [19.1, 14989.0], [19.2, 15026.0], [19.3, 15062.0], [19.4, 15120.0], [19.5, 15147.0], [19.6, 15158.0], [19.7, 15184.0], [19.8, 15205.0], [19.9, 15230.0], [20.0, 15311.0], [20.1, 15422.0], [20.2, 15464.0], [20.3, 15526.0], [20.4, 15575.0], [20.5, 16281.0], [20.6, 16333.0], [20.7, 16461.0], [20.8, 16515.0], [20.9, 16544.0], [21.0, 16632.0], [21.1, 16658.0], [21.2, 16685.0], [21.3, 16696.0], [21.4, 16724.0], [21.5, 16773.0], [21.6, 16795.0], [21.7, 16819.0], [21.8, 16842.0], [21.9, 16875.0], [22.0, 16990.0], [22.1, 17076.0], [22.2, 17098.0], [22.3, 17117.0], [22.4, 17139.0], [22.5, 17204.0], [22.6, 17221.0], [22.7, 17250.0], [22.8, 17273.0], [22.9, 17329.0], [23.0, 17428.0], [23.1, 17517.0], [23.2, 17578.0], [23.3, 17650.0], [23.4, 17674.0], [23.5, 17691.0], [23.6, 17714.0], [23.7, 17759.0], [23.8, 17788.0], [23.9, 17831.0], [24.0, 17862.0], [24.1, 17886.0], [24.2, 17953.0], [24.3, 17977.0], [24.4, 17998.0], [24.5, 18016.0], [24.6, 18040.0], [24.7, 18063.0], [24.8, 18082.0], [24.9, 18111.0], [25.0, 18146.0], [25.1, 18167.0], [25.2, 18187.0], [25.3, 18218.0], [25.4, 18234.0], [25.5, 18275.0], [25.6, 18294.0], [25.7, 18325.0], [25.8, 18360.0], [25.9, 18380.0], [26.0, 18407.0], [26.1, 18435.0], [26.2, 18466.0], [26.3, 18494.0], [26.4, 18510.0], [26.5, 18527.0], [26.6, 18554.0], [26.7, 18571.0], [26.8, 18588.0], [26.9, 18607.0], [27.0, 18651.0], [27.1, 18673.0], [27.2, 18688.0], [27.3, 18710.0], [27.4, 18728.0], [27.5, 18755.0], [27.6, 18779.0], [27.7, 18806.0], [27.8, 18809.0], [27.9, 18848.0], [28.0, 18888.0], [28.1, 18950.0], [28.2, 18971.0], [28.3, 19040.0], [28.4, 19059.0], [28.5, 19132.0], [28.6, 19161.0], [28.7, 19212.0], [28.8, 19270.0], [28.9, 19320.0], [29.0, 19361.0], [29.1, 19399.0], [29.2, 19428.0], [29.3, 19438.0], [29.4, 19459.0], [29.5, 19477.0], [29.6, 19499.0], [29.7, 19524.0], [29.8, 19546.0], [29.9, 19567.0], [30.0, 19583.0], [30.1, 19608.0], [30.2, 19612.0], [30.3, 19623.0], [30.4, 19629.0], [30.5, 19633.0], [30.6, 19638.0], [30.7, 19653.0], [30.8, 19656.0], [30.9, 19667.0], [31.0, 19678.0], [31.1, 19684.0], [31.2, 19699.0], [31.3, 19700.0], [31.4, 19707.0], [31.5, 19719.0], [31.6, 19722.0], [31.7, 19731.0], [31.8, 19742.0], [31.9, 19744.0], [32.0, 19765.0], [32.1, 19782.0], [32.2, 19787.0], [32.3, 19804.0], [32.4, 19810.0], [32.5, 19832.0], [32.6, 19855.0], [32.7, 19857.0], [32.8, 19875.0], [32.9, 19894.0], [33.0, 19898.0], [33.1, 19919.0], [33.2, 19927.0], [33.3, 19939.0], [33.4, 19948.0], [33.5, 19962.0], [33.6, 19977.0], [33.7, 19986.0], [33.8, 20000.0], [33.9, 20008.0], [34.0, 20035.0], [34.1, 20073.0], [34.2, 20075.0], [34.3, 20106.0], [34.4, 20140.0], [34.5, 20172.0], [34.6, 20174.0], [34.7, 20191.0], [34.8, 20195.0], [34.9, 20214.0], [35.0, 20223.0], [35.1, 20237.0], [35.2, 20249.0], [35.3, 20270.0], [35.4, 20295.0], [35.5, 20313.0], [35.6, 20334.0], [35.7, 20353.0], [35.8, 20383.0], [35.9, 20402.0], [36.0, 20423.0], [36.1, 20440.0], [36.2, 20460.0], [36.3, 20479.0], [36.4, 20496.0], [36.5, 20514.0], [36.6, 20533.0], [36.7, 20551.0], [36.8, 20568.0], [36.9, 20585.0], [37.0, 20607.0], [37.1, 20627.0], [37.2, 20647.0], [37.3, 20666.0], [37.4, 20686.0], [37.5, 20707.0], [37.6, 20729.0], [37.7, 20754.0], [37.8, 20763.0], [37.9, 20796.0], [38.0, 20814.0], [38.1, 20829.0], [38.2, 20849.0], [38.3, 20867.0], [38.4, 20889.0], [38.5, 20909.0], [38.6, 20937.0], [38.7, 20953.0], [38.8, 20975.0], [38.9, 20991.0], [39.0, 21005.0], [39.1, 21028.0], [39.2, 21049.0], [39.3, 21071.0], [39.4, 21090.0], [39.5, 21110.0], [39.6, 21131.0], [39.7, 21152.0], [39.8, 21169.0], [39.9, 21195.0], [40.0, 21209.0], [40.1, 21229.0], [40.2, 21250.0], [40.3, 21268.0], [40.4, 21297.0], [40.5, 21310.0], [40.6, 21328.0], [40.7, 21350.0], [40.8, 21374.0], [40.9, 21392.0], [41.0, 21409.0], [41.1, 21434.0], [41.2, 21449.0], [41.3, 21469.0], [41.4, 21496.0], [41.5, 21512.0], [41.6, 21527.0], [41.7, 21546.0], [41.8, 21564.0], [41.9, 21585.0], [42.0, 21610.0], [42.1, 21619.0], [42.2, 21638.0], [42.3, 21649.0], [42.4, 21658.0], [42.5, 21675.0], [42.6, 21690.0], [42.7, 21701.0], [42.8, 21720.0], [42.9, 21740.0], [43.0, 21758.0], [43.1, 21772.0], [43.2, 21787.0], [43.3, 21792.0], [43.4, 21807.0], [43.5, 21810.0], [43.6, 21827.0], [43.7, 21835.0], [43.8, 21847.0], [43.9, 21856.0], [44.0, 21872.0], [44.1, 21894.0], [44.2, 21909.0], [44.3, 21934.0], [44.4, 21956.0], [44.5, 21962.0], [44.6, 21972.0], [44.7, 22005.0], [44.8, 22019.0], [44.9, 22050.0], [45.0, 22060.0], [45.1, 22086.0], [45.2, 22105.0], [45.3, 22181.0], [45.4, 22199.0], [45.5, 22217.0], [45.6, 22243.0], [45.7, 22253.0], [45.8, 22277.0], [45.9, 22298.0], [46.0, 22321.0], [46.1, 22336.0], [46.2, 22357.0], [46.3, 22374.0], [46.4, 22395.0], [46.5, 22417.0], [46.6, 22431.0], [46.7, 22457.0], [46.8, 22473.0], [46.9, 22494.0], [47.0, 22525.0], [47.1, 22538.0], [47.2, 22568.0], [47.3, 22582.0], [47.4, 22608.0], [47.5, 22636.0], [47.6, 22656.0], [47.7, 22665.0], [47.8, 22699.0], [47.9, 22714.0], [48.0, 22735.0], [48.1, 22754.0], [48.2, 22779.0], [48.3, 22798.0], [48.4, 22812.0], [48.5, 22834.0], [48.6, 22858.0], [48.7, 22869.0], [48.8, 22884.0], [48.9, 22904.0], [49.0, 22990.0], [49.1, 23007.0], [49.2, 23033.0], [49.3, 23055.0], [49.4, 23076.0], [49.5, 23092.0], [49.6, 23113.0], [49.7, 23130.0], [49.8, 23147.0], [49.9, 23169.0], [50.0, 23189.0], [50.1, 23212.0], [50.2, 23230.0], [50.3, 23249.0], [50.4, 23281.0], [50.5, 23300.0], [50.6, 23326.0], [50.7, 23341.0], [50.8, 23361.0], [50.9, 23379.0], [51.0, 23395.0], [51.1, 23416.0], [51.2, 23442.0], [51.3, 23458.0], [51.4, 23480.0], [51.5, 23497.0], [51.6, 23513.0], [51.7, 23535.0], [51.8, 23552.0], [51.9, 23570.0], [52.0, 23579.0], [52.1, 23596.0], [52.2, 23607.0], [52.3, 23624.0], [52.4, 23641.0], [52.5, 23656.0], [52.6, 23673.0], [52.7, 23688.0], [52.8, 23708.0], [52.9, 23727.0], [53.0, 23748.0], [53.1, 23768.0], [53.2, 23787.0], [53.3, 23804.0], [53.4, 23823.0], [53.5, 23843.0], [53.6, 23867.0], [53.7, 23902.0], [53.8, 23922.0], [53.9, 23943.0], [54.0, 23960.0], [54.1, 23982.0], [54.2, 24003.0], [54.3, 24023.0], [54.4, 24042.0], [54.5, 24064.0], [54.6, 24090.0], [54.7, 24110.0], [54.8, 24114.0], [54.9, 24131.0], [55.0, 24136.0], [55.1, 24153.0], [55.2, 24158.0], [55.3, 24167.0], [55.4, 24180.0], [55.5, 24188.0], [55.6, 24198.0], [55.7, 24222.0], [55.8, 24244.0], [55.9, 24262.0], [56.0, 24286.0], [56.1, 24299.0], [56.2, 24319.0], [56.3, 24341.0], [56.4, 24364.0], [56.5, 24387.0], [56.6, 24401.0], [56.7, 24422.0], [56.8, 24438.0], [56.9, 24456.0], [57.0, 24477.0], [57.1, 24493.0], [57.2, 24519.0], [57.3, 24529.0], [57.4, 24560.0], [57.5, 24570.0], [57.6, 24592.0], [57.7, 24613.0], [57.8, 24637.0], [57.9, 24648.0], [58.0, 24671.0], [58.1, 24687.0], [58.2, 24711.0], [58.3, 24729.0], [58.4, 24743.0], [58.5, 24758.0], [58.6, 24782.0], [58.7, 24802.0], [58.8, 24826.0], [58.9, 24839.0], [59.0, 24858.0], [59.1, 24874.0], [59.2, 24901.0], [59.3, 24915.0], [59.4, 24932.0], [59.5, 24955.0], [59.6, 24971.0], [59.7, 24986.0], [59.8, 25008.0], [59.9, 25026.0], [60.0, 25047.0], [60.1, 25069.0], [60.2, 25088.0], [60.3, 25111.0], [60.4, 25127.0], [60.5, 25158.0], [60.6, 25173.0], [60.7, 25186.0], [60.8, 25209.0], [60.9, 25230.0], [61.0, 25243.0], [61.1, 25260.0], [61.2, 25285.0], [61.3, 25303.0], [61.4, 25324.0], [61.5, 25352.0], [61.6, 25374.0], [61.7, 25386.0], [61.8, 25404.0], [61.9, 25427.0], [62.0, 25446.0], [62.1, 25461.0], [62.2, 25472.0], [62.3, 25498.0], [62.4, 25508.0], [62.5, 25527.0], [62.6, 25547.0], [62.7, 25565.0], [62.8, 25588.0], [62.9, 25606.0], [63.0, 25618.0], [63.1, 25642.0], [63.2, 25668.0], [63.3, 25679.0], [63.4, 25696.0], [63.5, 25717.0], [63.6, 25735.0], [63.7, 25754.0], [63.8, 25774.0], [63.9, 25841.0], [64.0, 25852.0], [64.1, 25887.0], [64.2, 25897.0], [64.3, 25924.0], [64.4, 25942.0], [64.5, 25967.0], [64.6, 25989.0], [64.7, 25998.0], [64.8, 26037.0], [64.9, 26045.0], [65.0, 26059.0], [65.1, 26080.0], [65.2, 26096.0], [65.3, 26127.0], [65.4, 26144.0], [65.5, 26160.0], [65.6, 26178.0], [65.7, 26198.0], [65.8, 26218.0], [65.9, 26237.0], [66.0, 26257.0], [66.1, 26278.0], [66.2, 26297.0], [66.3, 26319.0], [66.4, 26335.0], [66.5, 26362.0], [66.6, 26374.0], [66.7, 26394.0], [66.8, 26415.0], [66.9, 26434.0], [67.0, 26454.0], [67.1, 26475.0], [67.2, 26492.0], [67.3, 26514.0], [67.4, 26534.0], [67.5, 26550.0], [67.6, 26574.0], [67.7, 26601.0], [67.8, 26617.0], [67.9, 26637.0], [68.0, 26657.0], [68.1, 26678.0], [68.2, 26698.0], [68.3, 26717.0], [68.4, 26732.0], [68.5, 26753.0], [68.6, 26793.0], [68.7, 26807.0], [68.8, 26818.0], [68.9, 26831.0], [69.0, 26841.0], [69.1, 26850.0], [69.2, 26861.0], [69.3, 26883.0], [69.4, 26894.0], [69.5, 26915.0], [69.6, 26935.0], [69.7, 26958.0], [69.8, 26979.0], [69.9, 27008.0], [70.0, 27028.0], [70.1, 27083.0], [70.2, 27099.0], [70.3, 27111.0], [70.4, 27129.0], [70.5, 27143.0], [70.6, 27162.0], [70.7, 27184.0], [70.8, 27202.0], [70.9, 27232.0], [71.0, 27250.0], [71.1, 27269.0], [71.2, 27287.0], [71.3, 27305.0], [71.4, 27332.0], [71.5, 27349.0], [71.6, 27372.0], [71.7, 27391.0], [71.8, 27421.0], [71.9, 27449.0], [72.0, 27466.0], [72.1, 27489.0], [72.2, 27508.0], [72.3, 27519.0], [72.4, 27544.0], [72.5, 27557.0], [72.6, 27572.0], [72.7, 27613.0], [72.8, 27635.0], [72.9, 27646.0], [73.0, 27667.0], [73.1, 27684.0], [73.2, 27696.0], [73.3, 27716.0], [73.4, 27737.0], [73.5, 27781.0], [73.6, 27802.0], [73.7, 27816.0], [73.8, 27838.0], [73.9, 27859.0], [74.0, 27873.0], [74.1, 27895.0], [74.2, 27908.0], [74.3, 27926.0], [74.4, 27964.0], [74.5, 27987.0], [74.6, 28006.0], [74.7, 28025.0], [74.8, 28032.0], [74.9, 28077.0], [75.0, 28096.0], [75.1, 28114.0], [75.2, 28137.0], [75.3, 28148.0], [75.4, 28170.0], [75.5, 28187.0], [75.6, 28203.0], [75.7, 28222.0], [75.8, 28240.0], [75.9, 28255.0], [76.0, 28273.0], [76.1, 28293.0], [76.2, 28308.0], [76.3, 28328.0], [76.4, 28346.0], [76.5, 28365.0], [76.6, 28374.0], [76.7, 28393.0], [76.8, 28409.0], [76.9, 28426.0], [77.0, 28445.0], [77.1, 28464.0], [77.2, 28482.0], [77.3, 28500.0], [77.4, 28516.0], [77.5, 28533.0], [77.6, 28551.0], [77.7, 28569.0], [77.8, 28585.0], [77.9, 28662.0], [78.0, 28677.0], [78.1, 28698.0], [78.2, 28713.0], [78.3, 28734.0], [78.4, 28785.0], [78.5, 28806.0], [78.6, 28825.0], [78.7, 28845.0], [78.8, 28865.0], [78.9, 28883.0], [79.0, 28903.0], [79.1, 28919.0], [79.2, 28952.0], [79.3, 28978.0], [79.4, 28994.0], [79.5, 29013.0], [79.6, 29023.0], [79.7, 29042.0], [79.8, 29064.0], [79.9, 29083.0], [80.0, 29107.0], [80.1, 29125.0], [80.2, 29145.0], [80.3, 29164.0], [80.4, 29176.0], [80.5, 29187.0], [80.6, 29196.0], [80.7, 29206.0], [80.8, 29217.0], [80.9, 29239.0], [81.0, 29265.0], [81.1, 29281.0], [81.2, 29303.0], [81.3, 29324.0], [81.4, 29344.0], [81.5, 29365.0], [81.6, 29390.0], [81.7, 29411.0], [81.8, 29436.0], [81.9, 29453.0], [82.0, 29472.0], [82.1, 29494.0], [82.2, 29516.0], [82.3, 29540.0], [82.4, 29559.0], [82.5, 29581.0], [82.6, 29603.0], [82.7, 29623.0], [82.8, 29645.0], [82.9, 29667.0], [83.0, 29687.0], [83.1, 29718.0], [83.2, 29753.0], [83.3, 29780.0], [83.4, 29794.0], [83.5, 29816.0], [83.6, 29838.0], [83.7, 29860.0], [83.8, 29870.0], [83.9, 29893.0], [84.0, 29912.0], [84.1, 29936.0], [84.2, 29948.0], [84.3, 29962.0], [84.4, 29978.0], [84.5, 29985.0], [84.6, 29997.0], [84.7, 30008.0], [84.8, 30032.0], [84.9, 30046.0], [85.0, 30089.0], [85.1, 30096.0], [85.2, 30109.0], [85.3, 30140.0], [85.4, 30155.0], [85.5, 30177.0], [85.6, 30197.0], [85.7, 30217.0], [85.8, 30237.0], [85.9, 30257.0], [86.0, 30283.0], [86.1, 30302.0], [86.2, 30314.0], [86.3, 30336.0], [86.4, 30357.0], [86.5, 30379.0], [86.6, 30400.0], [86.7, 30423.0], [86.8, 30443.0], [86.9, 30476.0], [87.0, 30497.0], [87.1, 30519.0], [87.2, 30541.0], [87.3, 30562.0], [87.4, 30584.0], [87.5, 30605.0], [87.6, 30624.0], [87.7, 30644.0], [87.8, 30676.0], [87.9, 30696.0], [88.0, 30718.0], [88.1, 30737.0], [88.2, 30757.0], [88.3, 30780.0], [88.4, 30795.0], [88.5, 30815.0], [88.6, 30830.0], [88.7, 30852.0], [88.8, 30870.0], [88.9, 30894.0], [89.0, 30912.0], [89.1, 30925.0], [89.2, 30948.0], [89.3, 30962.0], [89.4, 30975.0], [89.5, 30999.0], [89.6, 31027.0], [89.7, 31045.0], [89.8, 31067.0], [89.9, 31079.0], [90.0, 31096.0], [90.1, 31119.0], [90.2, 31130.0], [90.3, 31154.0], [90.4, 31165.0], [90.5, 31184.0], [90.6, 31207.0], [90.7, 31216.0], [90.8, 31237.0], [90.9, 31248.0], [91.0, 31271.0], [91.1, 31282.0], [91.2, 31311.0], [91.3, 31320.0], [91.4, 31347.0], [91.5, 31356.0], [91.6, 31375.0], [91.7, 31390.0], [91.8, 31412.0], [91.9, 31423.0], [92.0, 31444.0], [92.1, 31457.0], [92.2, 31477.0], [92.3, 31486.0], [92.4, 31564.0], [92.5, 31592.0], [92.6, 31614.0], [92.7, 31650.0], [92.8, 31663.0], [92.9, 31689.0], [93.0, 31698.0], [93.1, 31720.0], [93.2, 31735.0], [93.3, 31754.0], [93.4, 31783.0], [93.5, 31794.0], [93.6, 31840.0], [93.7, 31876.0], [93.8, 31894.0], [93.9, 31910.0], [94.0, 31932.0], [94.1, 31953.0], [94.2, 31964.0], [94.3, 32002.0], [94.4, 32026.0], [94.5, 32039.0], [94.6, 32058.0], [94.7, 32082.0], [94.8, 32101.0], [94.9, 32126.0], [95.0, 32141.0], [95.1, 32175.0], [95.2, 32201.0], [95.3, 32211.0], [95.4, 32230.0], [95.5, 32245.0], [95.6, 32283.0], [95.7, 32296.0], [95.8, 32316.0], [95.9, 32349.0], [96.0, 32360.0], [96.1, 32386.0], [96.2, 32406.0], [96.3, 32425.0], [96.4, 32436.0], [96.5, 32451.0], [96.6, 32472.0], [96.7, 32488.0], [96.8, 32506.0], [96.9, 32529.0], [97.0, 32544.0], [97.1, 32563.0], [97.2, 32581.0], [97.3, 32590.0], [97.4, 32619.0], [97.5, 32624.0], [97.6, 32654.0], [97.7, 32667.0], [97.8, 32690.0], [97.9, 32702.0], [98.0, 32715.0], [98.1, 32737.0], [98.2, 32752.0], [98.3, 32766.0], [98.4, 32778.0], [98.5, 32794.0], [98.6, 32816.0], [98.7, 32826.0], [98.8, 32845.0], [98.9, 32861.0], [99.0, 32874.0], [99.1, 32893.0], [99.2, 32912.0], [99.3, 32923.0], [99.4, 32939.0], [99.5, 32963.0], [99.6, 32978.0], [99.7, 32992.0], [99.8, 33020.0], [99.9, 33030.0]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 6300.0, "maxY": 60.0, "series": [{"data": [[32900.0, 30.0], [6300.0, 2.0], [6400.0, 17.0], [6500.0, 45.0], [6600.0, 40.0], [6700.0, 18.0], [8200.0, 16.0], [8300.0, 48.0], [8400.0, 40.0], [9600.0, 23.0], [9500.0, 13.0], [9700.0, 49.0], [10200.0, 1.0], [10400.0, 46.0], [10300.0, 12.0], [10500.0, 37.0], [11100.0, 17.0], [11300.0, 60.0], [11500.0, 3.0], [11600.0, 26.0], [11400.0, 1.0], [11700.0, 22.0], [11800.0, 14.0], [11900.0, 9.0], [12000.0, 16.0], [12100.0, 10.0], [12200.0, 11.0], [12300.0, 13.0], [12400.0, 4.0], [12500.0, 16.0], [12600.0, 15.0], [12700.0, 20.0], [12800.0, 10.0], [12900.0, 8.0], [13000.0, 19.0], [13100.0, 22.0], [13200.0, 25.0], [13300.0, 12.0], [13400.0, 16.0], [13500.0, 17.0], [13600.0, 14.0], [13800.0, 4.0], [13700.0, 3.0], [13900.0, 11.0], [14000.0, 14.0], [14100.0, 11.0], [14200.0, 17.0], [14300.0, 11.0], [14400.0, 15.0], [14500.0, 10.0], [14600.0, 13.0], [14700.0, 16.0], [14800.0, 16.0], [14900.0, 10.0], [15000.0, 11.0], [15100.0, 20.0], [15200.0, 11.0], [15300.0, 5.0], [15400.0, 7.0], [15500.0, 9.0], [15600.0, 1.0], [16200.0, 5.0], [16300.0, 4.0], [16600.0, 16.0], [16800.0, 14.0], [16400.0, 5.0], [17000.0, 12.0], [17200.0, 17.0], [17400.0, 5.0], [17600.0, 16.0], [17800.0, 15.0], [18000.0, 19.0], [18200.0, 19.0], [18400.0, 20.0], [19200.0, 9.0], [18600.0, 21.0], [18800.0, 20.0], [19000.0, 8.0], [19400.0, 25.0], [19600.0, 59.0], [19800.0, 38.0], [20000.0, 25.0], [20200.0, 31.0], [20400.0, 27.0], [20600.0, 25.0], [20800.0, 25.0], [21000.0, 25.0], [21200.0, 25.0], [21400.0, 24.0], [21600.0, 37.0], [21800.0, 37.0], [22000.0, 22.0], [22200.0, 25.0], [22400.0, 25.0], [22600.0, 22.0], [22800.0, 27.0], [23000.0, 27.0], [23200.0, 21.0], [23400.0, 25.0], [23600.0, 31.0], [23800.0, 21.0], [24000.0, 24.0], [24200.0, 24.0], [24400.0, 27.0], [24600.0, 26.0], [24800.0, 25.0], [25000.0, 25.0], [25200.0, 27.0], [25400.0, 27.0], [25600.0, 27.0], [25800.0, 20.0], [26000.0, 25.0], [26200.0, 26.0], [26400.0, 25.0], [26600.0, 30.0], [27400.0, 22.0], [26800.0, 39.0], [27000.0, 17.0], [27200.0, 23.0], [27600.0, 28.0], [27800.0, 29.0], [28000.0, 25.0], [28200.0, 28.0], [28400.0, 26.0], [28600.0, 13.0], [28800.0, 25.0], [29000.0, 28.0], [29200.0, 29.0], [29400.0, 22.0], [29600.0, 25.0], [29800.0, 25.0], [30000.0, 26.0], [30200.0, 22.0], [30400.0, 23.0], [30600.0, 24.0], [30800.0, 26.0], [31000.0, 26.0], [31200.0, 30.0], [31400.0, 31.0], [31600.0, 24.0], [31800.0, 17.0], [32000.0, 26.0], [32200.0, 27.0], [32400.0, 27.0], [32600.0, 29.0], [32800.0, 30.0], [16500.0, 14.0], [16700.0, 16.0], [16900.0, 5.0], [17100.0, 12.0], [17300.0, 8.0], [17900.0, 16.0], [17500.0, 6.0], [17700.0, 15.0], [18100.0, 21.0], [18300.0, 17.0], [18500.0, 24.0], [18700.0, 20.0], [18900.0, 9.0], [19100.0, 14.0], [19300.0, 12.0], [19500.0, 23.0], [19700.0, 50.0], [19900.0, 39.0], [20100.0, 27.0], [20300.0, 22.0], [21300.0, 25.0], [20500.0, 27.0], [20700.0, 22.0], [20900.0, 25.0], [21100.0, 25.0], [21500.0, 26.0], [22300.0, 26.0], [21700.0, 35.0], [21900.0, 29.0], [22100.0, 14.0], [22500.0, 22.0], [23300.0, 27.0], [22700.0, 26.0], [22900.0, 8.0], [23100.0, 25.0], [23500.0, 31.0], [23700.0, 24.0], [23900.0, 24.0], [24100.0, 50.0], [24300.0, 24.0], [24500.0, 25.0], [24700.0, 27.0], [24900.0, 27.0], [25100.0, 26.0], [25300.0, 24.0], [25500.0, 28.0], [25700.0, 21.0], [25900.0, 24.0], [26100.0, 25.0], [26300.0, 25.0], [26500.0, 20.0], [26700.0, 20.0], [26900.0, 23.0], [27100.0, 28.0], [27300.0, 26.0], [27500.0, 24.0], [27700.0, 17.0], [27900.0, 21.0], [28100.0, 26.0], [28300.0, 31.0], [28500.0, 29.0], [28700.0, 18.0], [28900.0, 22.0], [29100.0, 31.0], [29300.0, 25.0], [29500.0, 23.0], [29700.0, 17.0], [29900.0, 34.0], [30100.0, 26.0], [30300.0, 24.0], [30500.0, 21.0], [30700.0, 25.0], [30900.0, 28.0], [31100.0, 27.0], [31300.0, 28.0], [31500.0, 9.0], [31700.0, 25.0], [31900.0, 21.0], [32100.0, 20.0], [32300.0, 22.0], [32500.0, 30.0], [32700.0, 34.0], [33000.0, 12.0]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 33000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2501.415200000001, "minX": 1.65795246E12, "maxY": 2501.415200000001, "series": [{"data": [[1.65795246E12, 2501.415200000001]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795246E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6429.0, "minX": 2.0, "maxY": 33040.5, "series": [{"data": [[2.0, 33040.5], [5.0, 33030.333333333336], [7.0, 33020.0], [10.0, 33022.0], [11.0, 32994.0], [12.0, 33002.0], [13.0, 32988.0], [15.0, 32992.0], [17.0, 32983.0], [20.0, 32977.0], [21.0, 32975.0], [25.0, 32976.0], [26.0, 32953.0], [30.0, 32947.5], [31.0, 32933.0], [35.0, 32924.25], [36.0, 32915.0], [41.0, 32899.0], [40.0, 32915.75], [45.0, 32895.75], [46.0, 32893.0], [51.0, 32876.0], [50.0, 32885.25], [55.0, 32858.5], [54.0, 32862.5], [56.0, 32852.0], [59.0, 32855.0], [58.0, 32845.0], [61.0, 32836.0], [60.0, 32862.0], [66.0, 32820.0], [65.0, 32829.5], [71.0, 32807.0], [70.0, 32816.0], [75.0, 32797.5], [73.0, 32806.5], [76.0, 32790.0], [81.0, 32778.0], [80.0, 32780.75], [86.0, 32761.0], [85.0, 32767.75], [91.0, 32755.0], [90.0, 32757.75], [95.0, 32738.75], [96.0, 32737.0], [101.0, 32708.0], [100.0, 32716.75], [106.0, 32694.0], [105.0, 32707.75], [111.0, 32676.0], [110.0, 32693.0], [115.0, 32673.0], [113.0, 32663.0], [118.0, 32660.0], [116.0, 32659.0], [121.0, 32649.0], [120.0, 32657.0], [126.0, 32623.0], [125.0, 32641.0], [135.0, 32610.5], [131.0, 32610.0], [130.0, 32622.75], [141.0, 32576.0], [140.0, 32584.0], [136.0, 32590.0], [151.0, 32534.0], [150.0, 32555.5], [146.0, 32562.0], [145.0, 32573.0], [156.0, 32529.0], [155.0, 32539.75], [166.0, 32488.0], [165.0, 32501.25], [161.0, 32506.0], [160.0, 32518.25], [175.0, 32462.0], [171.0, 32472.0], [170.0, 32480.25], [181.0, 32435.0], [180.0, 32445.5], [176.0, 32451.0], [191.0, 32400.0], [190.0, 32407.75], [186.0, 32414.0], [185.0, 32429.75], [196.0, 32389.0], [195.0, 32400.0], [194.0, 32388.0], [206.0, 32347.0], [205.0, 32353.0], [201.0, 32357.0], [200.0, 32368.5], [215.0, 32306.75], [211.0, 32316.0], [210.0, 32336.25], [221.0, 32265.0], [220.0, 32289.75], [216.0, 32291.0], [231.0, 32228.0], [230.0, 32235.0], [226.0, 32251.0], [225.0, 32258.0], [236.0, 32201.0], [235.0, 32217.25], [246.0, 32173.666666666668], [243.0, 32182.0], [241.0, 32207.0], [255.0, 32127.0], [253.0, 32132.0], [251.0, 32141.333333333332], [248.0, 32166.0], [259.0, 32110.0], [271.0, 32069.0], [270.0, 32058.0], [268.0, 32074.5], [266.0, 32080.0], [263.0, 32089.5], [261.0, 32110.0], [258.0, 32101.5], [256.0, 32119.0], [286.0, 32009.5], [284.0, 32283.0], [283.0, 32022.5], [281.0, 32023.333333333332], [278.0, 32033.5], [276.0, 32040.0], [273.0, 32052.0], [303.0, 31932.666666666668], [301.0, 31930.0], [299.0, 31932.0], [298.0, 31949.0], [296.0, 31956.666666666668], [293.0, 31959.5], [291.0, 31985.0], [290.0, 31964.5], [288.0, 31996.0], [319.0, 31853.0], [318.0, 31881.0], [316.0, 31880.0], [314.0, 31876.0], [313.0, 31893.75], [309.0, 31893.0], [308.0, 31909.25], [304.0, 31922.0], [334.0, 31763.0], [333.0, 31778.25], [329.0, 31838.0], [328.0, 31787.0], [324.0, 31828.0], [323.0, 31836.75], [349.0, 31721.0], [348.0, 31716.25], [344.0, 31729.0], [343.0, 31739.0], [339.0, 31744.0], [338.0, 31759.75], [364.0, 31649.0], [363.0, 31660.25], [359.0, 31685.0], [358.0, 31687.0], [354.0, 31689.0], [353.0, 31699.5], [383.0, 31561.25], [379.0, 31575.0], [378.0, 31588.75], [374.0, 31610.0], [373.0, 31626.0], [372.0, 31627.0], [369.0, 31614.0], [368.0, 31645.5], [399.0, 31445.0], [398.0, 31457.0], [394.0, 31457.0], [393.0, 31476.25], [389.0, 31477.0], [388.0, 31488.25], [384.0, 31498.0], [414.0, 31388.0], [413.0, 31409.0], [409.0, 31420.0], [408.0, 31422.25], [404.0, 31440.0], [403.0, 31443.0], [402.0, 31444.0], [429.0, 31355.0], [428.0, 31356.25], [424.0, 31372.0], [421.0, 31382.0], [420.0, 31373.0], [419.0, 31382.0], [418.0, 31395.0], [444.0, 31313.0], [443.0, 31303.0], [439.0, 31311.0], [438.0, 31322.0], [434.0, 31333.0], [433.0, 31341.0], [463.0, 31233.25], [459.0, 31237.0], [458.0, 31246.666666666668], [457.0, 31243.0], [454.0, 31254.0], [453.0, 31269.25], [449.0, 31272.0], [448.0, 31281.5], [479.0, 31168.0], [478.0, 31183.75], [474.0, 31196.0], [473.0, 31205.666666666668], [472.0, 31204.0], [469.0, 31207.0], [468.0, 31217.0], [464.0, 31238.0], [494.0, 31121.0], [493.0, 31131.75], [489.0, 31143.0], [488.0, 31152.5], [484.0, 31154.0], [483.0, 31162.666666666668], [482.0, 31184.0], [509.0, 31076.0], [508.0, 31077.5], [504.0, 31092.0], [503.0, 31095.5], [499.0, 31098.0], [498.0, 31117.0], [538.0, 30962.0], [534.0, 30968.0], [528.0, 30993.5], [526.0, 31001.5], [524.0, 31019.0], [520.0, 31022.0], [518.0, 31044.0], [514.0, 31045.0], [574.0, 30830.0], [568.0, 30850.75], [564.0, 30863.0], [562.0, 30873.333333333332], [558.0, 30891.0], [554.0, 30894.0], [552.0, 30905.0], [548.0, 30927.75], [544.0, 30943.0], [604.0, 30706.0], [598.0, 30735.75], [594.0, 30744.0], [588.0, 30777.75], [584.0, 30782.0], [578.0, 30814.75], [638.0, 30562.25], [634.0, 30572.0], [628.0, 30604.5], [626.0, 30605.0], [624.0, 30612.0], [618.0, 30643.75], [614.0, 30670.0], [608.0, 30696.0], [666.0, 30423.0], [664.0, 30432.666666666668], [656.0, 30476.0], [654.0, 30486.333333333332], [646.0, 30519.5], [644.0, 30529.0], [640.0, 30541.0], [702.0, 30260.0], [696.0, 30292.0], [694.0, 30303.0], [686.0, 30335.5], [684.0, 30346.333333333332], [676.0, 30379.0], [674.0, 30389.666666666668], [734.0, 30140.333333333332], [726.0, 30166.0], [724.0, 30177.0], [716.0, 30306.5], [714.0, 30217.333333333332], [706.0, 30247.0], [704.0, 30257.0], [766.0, 30009.0], [764.0, 30030.0], [756.0, 30046.0], [754.0, 30077.333333333332], [746.0, 30096.0], [744.0, 30281.0], [736.0, 30129.0], [796.0, 29969.0], [794.0, 29932.666666666668], [786.0, 29946.5], [784.0, 29956.0], [776.0, 29979.0], [774.0, 29992.666666666668], [826.0, 29816.5], [824.0, 29827.0], [818.0, 29849.5], [816.0, 29860.0], [814.0, 29869.0], [806.0, 29902.0], [804.0, 29912.0], [862.0, 29637.0], [856.0, 29667.0], [854.0, 29676.333333333332], [848.0, 29698.0], [846.0, 29718.5], [844.0, 29719.333333333332], [836.0, 29780.5], [834.0, 29785.333333333332], [894.0, 29505.333333333332], [886.0, 29540.0], [884.0, 29548.666666666668], [876.0, 29581.0], [874.0, 29591.0], [866.0, 29623.5], [864.0, 29637.0], [926.0, 29365.5], [924.0, 29377.0], [916.0, 29411.0], [914.0, 29421.0], [906.0, 29453.0], [904.0, 29463.0], [900.0, 29474.0], [896.0, 29494.5], [956.0, 29239.0], [954.0, 29248.333333333332], [946.0, 29281.5], [944.0, 29292.0], [936.0, 29324.0], [934.0, 29334.0], [930.0, 29344.0], [986.0, 29164.5], [984.0, 29174.333333333332], [976.0, 29206.0], [974.0, 29216.333333333332], [966.0, 29195.5], [964.0, 29206.0], [1016.0, 29043.5], [1014.0, 29054.0], [1006.0, 29085.0], [1004.0, 29095.0], [996.0, 29125.5], [994.0, 29135.666666666668], [1084.0, 28769.666666666668], [1076.0, 28806.0], [1068.0, 28835.0], [1064.0, 28854.0], [1056.0, 28884.0], [1044.0, 28931.666666666668], [1036.0, 28982.5], [1024.0, 29018.666666666668], [1136.0, 28500.0], [1132.0, 28510.0], [1116.0, 28570.25], [1112.0, 28583.0], [1096.0, 28698.5], [1088.0, 28724.0], [1212.0, 28267.0], [1208.0, 28241.0], [1196.0, 28296.75], [1192.0, 28301.0], [1176.0, 28367.25], [1172.0, 28374.0], [1156.0, 28429.5], [1152.0, 28436.0], [1276.0, 27988.0], [1272.0, 28001.0], [1264.0, 28029.5], [1256.0, 28082.666666666668], [1252.0, 28085.0], [1236.0, 28152.75], [1232.0, 28170.0], [1216.0, 28222.0], [1336.0, 27723.25], [1332.0, 27726.0], [1328.0, 27737.0], [1316.0, 27819.75], [1312.0, 27825.0], [1296.0, 27898.0], [1292.0, 27902.0], [1396.0, 27489.5], [1392.0, 27496.0], [1376.0, 27559.0], [1372.0, 27567.0], [1364.0, 27614.5], [1356.0, 27648.0], [1352.0, 27654.0], [1416.0, 27401.5], [1464.0, 27192.0], [1452.0, 27250.0], [1444.0, 27275.5], [1436.0, 27305.0], [1432.0, 27334.666666666668], [1424.0, 27351.0], [1412.0, 27417.0], [1408.0, 27449.0], [1532.0, 26893.333333333332], [1524.0, 26926.0], [1512.0, 26978.333333333332], [1504.0, 27018.5], [1500.0, 27035.0], [1492.0, 27098.666666666668], [1484.0, 27120.0], [1472.0, 27161.666666666668], [1592.0, 26698.0], [1584.0, 26727.0], [1572.0, 26793.0], [1564.0, 26826.0], [1552.0, 26869.0], [1544.0, 26818.5], [1652.0, 26454.0], [1644.0, 26483.5], [1632.0, 26532.0], [1624.0, 26560.0], [1612.0, 26616.666666666668], [1604.0, 26652.0], [1724.0, 26170.5], [1712.0, 26218.333333333332], [1704.0, 26247.0], [1700.0, 26260.0], [1692.0, 26296.666666666668], [1684.0, 26327.0], [1672.0, 26374.0], [1664.0, 26401.5], [1784.0, 26038.0], [1772.0, 25986.666666666668], [1764.0, 26021.0], [1752.0, 26057.666666666668], [1744.0, 26082.5], [1732.0, 26142.333333333332], [1852.0, 25619.666666666668], [1844.0, 25650.0], [1832.0, 25696.666666666668], [1824.0, 25737.5], [1812.0, 25775.0], [1804.0, 25838.5], [1792.0, 25897.333333333332], [1916.0, 25377.5], [1912.0, 25427.666666666668], [1904.0, 25426.0], [1892.0, 25469.0], [1884.0, 25500.0], [1872.0, 25548.0], [1864.0, 25571.5], [1932.0, 25322.666666666668], [1980.0, 25133.0], [1968.0, 25186.0], [1964.0, 25202.25], [1960.0, 25209.0], [1944.0, 25280.5], [1940.0, 25283.0], [1928.0, 25329.0], [1924.0, 25366.0], [2040.0, 24901.0], [2044.0, 24892.75], [2024.0, 24966.5], [2020.0, 24979.0], [2008.0, 25025.0], [2004.0, 25047.0], [2000.0, 25055.0], [1984.0, 25124.75], [2160.0, 24438.0], [2144.0, 24516.0], [2064.0, 24818.5], [2120.0, 24597.0], [2104.0, 24667.0], [2080.0, 24754.0], [2248.0, 24182.0], [2288.0, 24022.25], [2264.0, 24119.0], [2184.0, 24359.5], [2192.0, 24315.0], [2224.0, 24188.0], [2208.0, 24261.0], [2416.0, 23535.0], [2424.0, 23504.333333333332], [2328.0, 23843.0], [2312.0, 23921.0], [2304.0, 23950.0], [2384.0, 23633.666666666668], [2376.0, 23657.0], [2344.0, 23777.0], [2552.0, 22989.0], [2504.0, 23176.0], [2544.0, 23016.5], [2496.0, 23212.0], [2536.0, 23056.0], [2456.0, 23381.0], [2440.0, 23442.0], [2464.0, 23356.333333333332], [2512.0, 23139.0], [2664.0, 22458.5], [2672.0, 22432.0], [2584.0, 22804.5], [2640.0, 22570.0], [2632.0, 22602.0], [2608.0, 22715.333333333332], [2592.0, 22779.666666666668], [2792.0, 21908.333333333332], [2784.0, 21938.5], [2752.0, 22064.0], [2744.0, 22104.0], [2688.0, 22361.0], [2712.0, 22276.0], [2704.0, 22308.0], [2736.0, 22188.0], [2920.0, 21533.0], [2912.0, 21563.5], [2904.0, 21605.75], [2880.0, 21667.0], [2864.0, 21716.5], [2840.0, 21802.0], [2824.0, 21779.0], [3064.0, 20971.0], [3040.0, 21058.0], [3024.0, 21129.5], [2944.0, 21448.25], [2960.0, 21375.0], [3000.0, 21217.0], [2984.0, 21292.75], [3096.0, 20828.0], [3192.0, 20451.0], [3080.0, 20897.0], [3120.0, 20729.0], [3112.0, 20761.0], [3104.0, 20810.333333333332], [3160.0, 20571.666666666668], [3152.0, 20604.0], [3136.0, 20657.0], [3296.0, 19894.4], [3312.0, 19782.75], [3200.0, 20425.0], [3280.0, 19958.5], [3256.0, 20183.0], [3240.0, 20250.0], [3232.0, 20281.5], [3448.0, 19908.0], [3432.0, 19990.25], [3408.0, 19472.0], [3392.0, 20173.0], [3328.0, 19689.0], [3352.0, 19707.0], [3368.0, 19622.0], [3560.0, 19146.0], [3568.0, 18849.0], [3552.0, 19459.5], [3544.0, 19468.0], [3528.0, 19556.0], [3512.0, 19630.75], [3472.0, 19814.75], [3488.0, 19732.0], [3608.0, 18664.0], [3704.0, 18421.333333333332], [3696.0, 18285.0], [3680.0, 18359.0], [3600.0, 18692.0], [3656.0, 18466.0], [3648.0, 18494.5], [3640.0, 18525.5], [3632.0, 18564.5], [3616.0, 19139.0], [3808.0, 17711.0], [3776.0, 18183.5], [3784.0, 17864.0], [3792.0, 17797.0], [3736.0, 18139.0], [3720.0, 18434.5], [3768.0, 18112.25], [3752.0, 18060.0], [3944.0, 16541.0], [3960.0, 16802.0], [3904.0, 16961.0], [3920.0, 16767.0], [3928.0, 16685.5], [3952.0, 16461.0], [3936.0, 16643.75], [3864.0, 17257.0], [3840.0, 17951.0], [3896.0, 17076.5], [3888.0, 17099.0], [4072.0, 14826.0], [4032.0, 14872.0], [4040.0, 15120.0], [4056.0, 14654.0], [4064.0, 14870.0], [3984.0, 15192.0], [3968.0, 16333.0], [4024.0, 14960.0], [4016.0, 15354.0], [4008.0, 15434.0], [4336.0, 12800.0], [4240.0, 13408.0], [4272.0, 13229.666666666666], [4224.0, 13505.0], [4320.0, 12993.0], [4304.0, 13079.0], [4096.0, 14649.0], [4112.0, 14529.0], [4128.0, 14437.0], [4144.0, 14327.0], [4208.0, 13599.5], [4176.0, 13908.0], [4160.0, 14143.0], [4352.0, 12712.0], [4480.0, 11724.0], [4512.0, 11567.75], [4368.0, 12618.0], [4464.0, 11970.0], [4448.0, 11892.0], [4432.0, 12050.0], [4416.0, 12199.0], [4848.0, 8354.0], [4768.0, 9646.5], [4832.0, 8379.0], [4800.0, 8448.0], [4656.0, 10490.0], [4624.0, 10525.0], [4608.0, 10530.0], [4896.0, 6643.0], [4880.0, 6732.0], [4960.0, 6575.333333333333], [4944.0, 6502.0], [4289.0, 13142.5], [4241.0, 13394.0], [4257.0, 13287.0], [4321.0, 12985.0], [4097.0, 14643.0], [4113.0, 14240.0], [4129.0, 14397.0], [4145.0, 14281.0], [4193.0, 13771.5], [4161.0, 14125.0], [4545.0, 11289.0], [4593.0, 11328.0], [4497.0, 11687.0], [4481.0, 11823.0], [4577.0, 11143.5], [4369.0, 12609.0], [4401.0, 12325.5], [4465.0, 11715.0], [4449.0, 11875.0], [4433.0, 12041.0], [4417.0, 12174.0], [4705.0, 9679.25], [4689.0, 10400.333333333334], [4881.0, 6622.0], [4945.0, 6488.0], [2145.0, 24494.0], [2169.0, 24414.0], [2065.0, 24802.0], [2049.0, 24870.5], [2129.0, 24567.25], [2113.0, 24638.0], [2105.0, 24653.0], [2089.0, 24725.5], [2273.0, 24089.75], [2289.0, 24010.0], [2201.0, 24284.5], [2193.0, 24317.5], [2185.0, 24343.0], [2249.0, 24178.0], [2233.0, 24157.5], [2209.0, 24253.0], [2409.0, 23563.333333333332], [2401.0, 23579.0], [2369.0, 23681.0], [2361.0, 23708.5], [2313.0, 23922.0], [2329.0, 23837.0], [2353.0, 23747.25], [2497.0, 23200.0], [2537.0, 23046.0], [2521.0, 23118.0], [2489.0, 23239.666666666668], [2441.0, 23442.0], [2449.0, 23406.0], [2481.0, 23281.0], [2577.0, 22833.666666666668], [2657.0, 22493.0], [2649.0, 22528.5], [2625.0, 22658.666666666668], [2609.0, 22707.0], [2561.0, 22885.0], [2569.0, 22861.5], [2585.0, 22798.0], [2809.0, 21844.0], [2777.0, 21962.333333333332], [2769.0, 21973.0], [2697.0, 22332.0], [2689.0, 22361.0], [2737.0, 22187.666666666668], [2841.0, 21792.0], [2929.0, 21503.75], [2817.0, 21807.0], [2905.0, 21587.0], [2889.0, 21643.75], [2865.0, 21709.0], [2849.0, 21771.75], [3065.0, 20957.0], [3049.0, 21026.5], [3025.0, 21118.0], [3009.0, 21193.75], [2945.0, 21434.0], [2969.0, 21348.0], [2985.0, 21278.0], [3185.0, 20480.333333333332], [3177.0, 20506.5], [3089.0, 20866.75], [3145.0, 20627.0], [3137.0, 20658.0], [3105.0, 20799.0], [3225.0, 20313.0], [3313.0, 19769.0], [3297.0, 19859.0], [3281.0, 19948.0], [3265.0, 20074.0], [3209.0, 20384.0], [3217.0, 20342.0], [3241.0, 20244.0], [3233.0, 20270.0], [3433.0, 19974.0], [3353.0, 19656.0], [3337.0, 19669.75], [3417.0, 19904.75], [3393.0, 20193.0], [3377.0, 19923.5], [3553.0, 19446.0], [3473.0, 19798.0], [3457.0, 19729.25], [3537.0, 19529.25], [3513.0, 19621.0], [3497.0, 19699.75], [3681.0, 18838.0], [3705.0, 18254.0], [3665.0, 18544.0], [3673.0, 18625.5], [3585.0, 18757.0], [3593.0, 18989.0], [3641.0, 18524.0], [3633.0, 18556.0], [3625.0, 18592.5], [3617.0, 18623.0], [3809.0, 17711.5], [3817.0, 17674.333333333332], [3785.0, 17856.0], [3793.0, 17788.0], [3801.0, 17957.0], [3729.0, 18476.333333333332], [3721.0, 18187.0], [3769.0, 17989.0], [3761.0, 18019.5], [3753.0, 18060.0], [3745.0, 18328.5], [3945.0, 16522.0], [3937.0, 16632.0], [3905.0, 16875.0], [3913.0, 16818.0], [3921.0, 16720.0], [3929.0, 16675.0], [3953.0, 16451.0], [3865.0, 17250.0], [3857.0, 17319.0], [3849.0, 17572.666666666668], [3841.0, 17493.0], [3897.0, 17067.0], [3881.0, 17138.0], [3993.0, 15358.0], [4081.0, 14610.5], [4041.0, 15103.0], [4089.0, 14705.5], [4033.0, 15150.0], [4057.0, 14928.0], [3985.0, 15257.0], [3977.0, 16281.0], [3969.0, 16313.0], [4025.0, 15230.0], [4017.0, 15012.0], [4009.0, 15422.0], [4001.0, 15183.0], [4338.0, 12788.5], [4226.0, 13492.0], [4242.0, 13350.0], [4274.0, 13213.0], [4146.0, 14311.0], [4130.0, 14426.0], [4114.0, 14489.0], [4098.0, 14613.0], [4178.0, 13976.0], [4562.0, 11278.0], [4482.0, 11801.0], [4402.0, 12319.0], [4386.0, 12522.0], [4354.0, 12709.5], [4466.0, 11707.0], [4450.0, 11831.0], [4658.0, 10459.25], [4834.0, 8333.0], [4754.0, 9599.0], [4770.0, 9646.0], [4786.0, 8464.666666666666], [4642.0, 10492.5], [4626.0, 10422.5], [4722.0, 9693.333333333334], [4674.0, 10469.0], [4962.0, 6516.0], [4946.0, 6594.0], [4930.0, 6600.666666666667], [4307.0, 13069.0], [4323.0, 12983.0], [4339.0, 12786.0], [4227.0, 13483.0], [4243.0, 13347.0], [4259.0, 13277.0], [4147.0, 14261.0], [4115.0, 14479.0], [4099.0, 14322.0], [4211.0, 13593.333333333334], [4499.0, 11679.0], [4515.0, 11538.333333333334], [4483.0, 11795.0], [4531.0, 11315.25], [4371.0, 12606.5], [4387.0, 12510.0], [4403.0, 12314.0], [4451.0, 11822.0], [4419.0, 12162.0], [4851.0, 8327.0], [4739.0, 9718.5], [4771.0, 9644.0], [4803.0, 8447.333333333334], [4611.0, 10467.666666666666], [4915.0, 6685.8], [4899.0, 6681.333333333333], [4883.0, 6677.5], [4867.0, 8327.166666666666], [4947.0, 6505.0], [4931.0, 6653.0], [1081.0, 28785.5], [1069.0, 28834.5], [1065.0, 28846.0], [1061.0, 28865.0], [1053.0, 28895.0], [1049.0, 28911.0], [1041.0, 28955.5], [1029.0, 29007.333333333332], [1141.0, 28484.25], [1137.0, 28495.0], [1121.0, 28552.5], [1117.0, 28560.0], [1101.0, 28679.0], [1089.0, 28725.0], [1201.0, 28278.75], [1197.0, 28282.0], [1181.0, 28347.75], [1177.0, 28353.0], [1161.0, 28412.0], [1157.0, 28422.0], [1277.0, 27974.0], [1261.0, 28036.5], [1257.0, 28059.0], [1253.0, 28077.0], [1241.0, 28139.5], [1237.0, 28137.0], [1221.0, 28207.75], [1217.0, 28207.0], [1341.0, 27700.75], [1337.0, 27713.0], [1321.0, 27802.25], [1317.0, 27812.0], [1301.0, 27876.25], [1297.0, 27891.0], [1285.0, 27933.0], [1281.0, 27968.0], [1401.0, 27467.75], [1397.0, 27477.0], [1381.0, 27553.0], [1377.0, 27545.0], [1361.0, 27636.75], [1357.0, 27636.0], [1421.0, 27375.25], [1469.0, 27172.0], [1457.0, 27232.666666666668], [1449.0, 27259.5], [1437.0, 27305.0], [1429.0, 27331.5], [1417.0, 27387.0], [1413.0, 27391.0], [1409.0, 27466.0], [1529.0, 26904.0], [1517.0, 26958.333333333332], [1509.0, 26991.5], [1497.0, 27081.666666666668], [1489.0, 27104.0], [1477.0, 27144.0], [1597.0, 26678.666666666668], [1589.0, 26707.5], [1577.0, 26754.666666666668], [1569.0, 26804.0], [1557.0, 26850.666666666668], [1549.0, 26882.5], [1537.0, 26878.333333333332], [1661.0, 26415.0], [1657.0, 26434.0], [1649.0, 26464.5], [1637.0, 26513.666666666668], [1629.0, 26540.0], [1609.0, 26626.0], [1717.0, 26198.333333333332], [1709.0, 26228.0], [1697.0, 26277.666666666668], [1689.0, 26306.5], [1677.0, 26361.333333333332], [1669.0, 26383.0], [1789.0, 25913.0], [1781.0, 25939.5], [1777.0, 25963.5], [1769.0, 25990.0], [1757.0, 26042.333333333332], [1749.0, 26072.0], [1737.0, 26126.0], [1729.0, 26149.5], [1849.0, 25635.0], [1837.0, 25676.666666666668], [1829.0, 25711.5], [1817.0, 25756.0], [1809.0, 25849.5], [1797.0, 25889.0], [1917.0, 25472.0], [1909.0, 25403.5], [1897.0, 25454.666666666668], [1889.0, 25488.0], [1877.0, 25523.666666666668], [1869.0, 25555.5], [1857.0, 25604.0], [1969.0, 25182.0], [1965.0, 25186.0], [1949.0, 25256.0], [1945.0, 25260.0], [1929.0, 25329.0], [2045.0, 24874.0], [2029.0, 24950.0], [2025.0, 24959.0], [2009.0, 25026.0], [2005.0, 25034.0], [1989.0, 25105.666666666668], [1985.0, 25119.0], [2170.0, 24406.0], [2154.0, 24473.75], [2130.0, 24566.0], [2114.0, 24632.333333333332], [2050.0, 24867.0], [2074.0, 24776.0], [2090.0, 24729.0], [2082.0, 24740.0], [2274.0, 24072.0], [2298.0, 23981.75], [2258.0, 24152.0], [2194.0, 24313.0], [2234.0, 24143.0], [2218.0, 24221.5], [2322.0, 23867.0], [2426.0, 23497.0], [2314.0, 23910.0], [2394.0, 23601.0], [2386.0, 23624.5], [2362.0, 23698.0], [2354.0, 23735.0], [2338.0, 23803.25], [2554.0, 22916.5], [2546.0, 23007.0], [2522.0, 23100.0], [2506.0, 23173.0], [2434.0, 23468.333333333332], [2482.0, 23261.0], [2474.0, 23307.333333333332], [2466.0, 23341.0], [2674.0, 22421.5], [2682.0, 22395.0], [2658.0, 22482.0], [2642.0, 22575.5], [2562.0, 22883.0], [2610.0, 22699.0], [2602.0, 22738.666666666668], [2594.0, 22775.5], [2802.0, 21870.0], [2810.0, 21828.0], [2794.0, 21897.0], [2762.0, 22016.333333333332], [2754.0, 22057.5], [2714.0, 22264.5], [2722.0, 22242.333333333332], [2914.0, 21560.0], [2930.0, 21496.0], [2834.0, 21834.5], [2890.0, 21642.0], [2874.0, 21688.5], [2858.0, 21736.666666666668], [2850.0, 21766.0], [3050.0, 21015.0], [2970.0, 21339.0], [2954.0, 21406.25], [3034.0, 21088.5], [3010.0, 21176.0], [2994.0, 21248.25], [3186.0, 20471.0], [3170.0, 20534.666666666668], [3162.0, 20563.0], [3130.0, 20687.333333333332], [3074.0, 20930.5], [3090.0, 20857.0], [3122.0, 20718.5], [3106.0, 20796.0], [3210.0, 20383.0], [3322.0, 19719.75], [3202.0, 20413.5], [3290.0, 19918.0], [3266.0, 20060.0], [3258.0, 20174.0], [3250.0, 20214.5], [3442.0, 19795.5], [3418.0, 20035.0], [3402.0, 19968.25], [3378.0, 19595.0], [3362.0, 19635.0], [3338.0, 19678.0], [3570.0, 19361.0], [3578.0, 18798.333333333332], [3562.0, 19415.5], [3482.0, 19765.5], [3458.0, 19864.0], [3538.0, 19540.0], [3522.0, 19449.75], [3498.0, 19689.0], [3706.0, 18279.0], [3690.0, 18563.25], [3666.0, 18406.0], [3610.0, 19173.5], [3586.0, 19270.0], [3650.0, 18519.0], [3626.0, 18588.0], [3618.0, 19137.0], [3810.0, 17699.0], [3778.0, 18366.5], [3786.0, 17852.0], [3818.0, 17656.0], [3738.0, 18122.0], [3730.0, 18163.0], [3754.0, 18047.0], [3746.0, 18554.0], [3962.0, 16784.5], [3914.0, 16806.0], [3906.0, 16861.0], [3922.0, 16709.0], [3954.0, 16842.0], [3938.0, 16569.0], [3858.0, 17320.0], [3850.0, 17854.0], [3842.0, 17909.0], [3882.0, 17130.0], [3874.0, 17215.25], [4090.0, 14660.0], [4034.0, 15157.0], [4042.0, 15062.0], [4050.0, 14974.5], [4058.0, 14925.0], [4074.0, 14797.0], [4066.0, 14858.0], [3994.0, 15540.0], [3978.0, 16267.0], [3970.0, 16685.0], [4026.0, 15210.0], [4018.0, 15001.0], [4010.0, 15089.0], [4002.0, 15167.0], [4308.0, 13058.0], [4324.0, 12972.0], [4244.0, 13339.0], [4340.0, 12777.0], [4228.0, 13483.0], [4292.0, 13132.0], [4100.0, 14602.0], [4132.0, 14277.5], [4212.0, 13584.0], [4196.0, 13816.333333333334], [4164.0, 14049.0], [4548.0, 11289.0], [4596.0, 10549.0], [4516.0, 11605.0], [4580.0, 11209.333333333334], [4404.0, 12303.0], [4388.0, 12448.0], [4356.0, 12700.5], [4468.0, 11709.5], [4452.0, 11813.0], [4436.0, 12037.666666666666], [4420.0, 12157.0], [4852.0, 8364.0], [4836.0, 8288.0], [4772.0, 9635.0], [4788.0, 8474.0], [4804.0, 8449.0], [4628.0, 10493.0], [4692.0, 9679.666666666666], [4884.0, 6727.0], [4964.0, 6522.0], [4932.0, 6657.0], [4309.0, 13048.0], [4229.0, 13475.0], [4277.0, 13205.333333333334], [4341.0, 12769.0], [4117.0, 14365.5], [4133.0, 14415.0], [4149.0, 14257.5], [4213.0, 13580.0], [4181.0, 13787.666666666666], [4165.0, 14090.0], [4389.0, 12440.0], [4597.0, 10548.5], [4565.0, 11344.0], [4517.0, 11587.0], [4501.0, 11667.0], [4373.0, 12597.0], [4405.0, 12294.0], [4469.0, 11706.0], [4453.0, 11807.0], [4437.0, 12030.0], [4421.0, 12131.0], [4757.0, 9599.0], [4773.0, 9572.0], [4789.0, 8462.0], [4821.0, 8400.666666666666], [4661.0, 10429.0], [4709.0, 9703.75], [4885.0, 6726.0], [4901.0, 6700.5], [4949.0, 6592.0], [4933.0, 6648.0], [2155.0, 24456.0], [2163.0, 24437.0], [2099.0, 24683.75], [2075.0, 24765.0], [2059.0, 24836.75], [2139.0, 24527.75], [2123.0, 24589.0], [2115.0, 24613.0], [2299.0, 23971.0], [2243.0, 24113.5], [2291.0, 24002.0], [2283.0, 24041.75], [2203.0, 24284.0], [2179.0, 24377.25], [2219.0, 24209.0], [2259.0, 24136.0], [2251.0, 24165.5], [2411.0, 23552.0], [2419.0, 23526.0], [2331.0, 23823.0], [2323.0, 23867.0], [2379.0, 23649.333333333332], [2371.0, 23674.0], [2339.0, 23793.0], [2539.0, 23046.5], [2547.0, 23007.0], [2531.0, 23077.25], [2507.0, 23157.0], [2491.0, 23230.5], [2459.0, 23368.666666666668], [2451.0, 23395.5], [2667.0, 22456.333333333332], [2635.0, 22590.333333333332], [2659.0, 22481.0], [2619.0, 22657.0], [2587.0, 22795.5], [2579.0, 22825.0], [2611.0, 22691.0], [2643.0, 22548.0], [2627.0, 22621.5], [2707.0, 22303.333333333332], [2787.0, 21929.0], [2699.0, 22324.0], [2779.0, 21960.0], [2747.0, 22089.0], [2739.0, 22157.0], [2731.0, 22201.25], [2939.0, 21465.75], [2915.0, 21551.0], [2899.0, 21615.75], [2827.0, 21826.666666666668], [2819.0, 21797.0], [2835.0, 21820.0], [2875.0, 21679.0], [2859.0, 21735.0], [3059.0, 20987.75], [2955.0, 21397.0], [3035.0, 21078.0], [3019.0, 21148.25], [2995.0, 21238.0], [2979.0, 21308.25], [3187.0, 20470.0], [3195.0, 20440.333333333332], [3171.0, 20525.0], [3075.0, 20917.0], [3099.0, 20828.333333333332], [3115.0, 20755.0], [3163.0, 20554.0], [3155.0, 20585.333333333332], [3147.0, 20618.5], [3323.0, 19714.0], [3307.0, 19803.75], [3291.0, 19913.0], [3275.0, 19977.25], [3227.0, 20302.0], [3251.0, 20201.0], [3235.0, 20270.5], [3443.0, 19929.0], [3347.0, 19707.5], [3403.0, 20106.0], [3387.0, 19881.0], [3363.0, 19628.0], [3563.0, 19402.0], [3555.0, 19437.5], [3547.0, 19486.333333333332], [3523.0, 19577.0], [3507.0, 19665.0], [3483.0, 19754.0], [3467.0, 19837.25], [3611.0, 19161.0], [3667.0, 18896.0], [3651.0, 18480.0], [3691.0, 18308.0], [3603.0, 18685.0], [3595.0, 18716.5], [3643.0, 18774.5], [3635.0, 19059.0], [3675.0, 18378.5], [3835.0, 17658.5], [3779.0, 18395.0], [3787.0, 17838.0], [3795.0, 18000.5], [3827.0, 17734.0], [3811.0, 17691.0], [3731.0, 18154.0], [3715.0, 18338.0], [3763.0, 18017.0], [3963.0, 16770.0], [3907.0, 16861.0], [3923.0, 16707.0], [3931.0, 16666.5], [3955.0, 16836.0], [3947.0, 16516.5], [3939.0, 16571.0], [3859.0, 17280.0], [3851.0, 17387.0], [3843.0, 17908.0], [3899.0, 17003.5], [3891.0, 17098.0], [3883.0, 17128.0], [3875.0, 17204.0], [4083.0, 14603.5], [4035.0, 15149.0], [4043.0, 15083.0], [4051.0, 15026.0], [4091.0, 14683.0], [4075.0, 14801.0], [4067.0, 14845.0], [3979.0, 15608.0], [4027.0, 15198.0], [4019.0, 15311.0], [4011.0, 15397.0], [4003.0, 15478.0], [4294.0, 13123.0], [4326.0, 12956.0], [4262.0, 13268.333333333334], [4310.0, 13049.0], [4150.0, 14274.0], [4134.0, 14403.0], [4118.0, 14503.0], [4102.0, 14447.5], [4198.0, 13638.0], [4182.0, 13930.0], [4166.0, 14085.0], [4502.0, 11650.0], [4534.0, 11297.0], [4406.0, 12292.0], [4390.0, 12403.0], [4358.0, 12696.5], [4470.0, 11698.0], [4422.0, 12125.0], [4758.0, 9544.0], [4838.0, 8331.5], [4774.0, 9626.0], [4790.0, 8348.0], [4806.0, 8441.5], [4662.0, 10485.0], [4646.0, 10490.75], [4678.0, 10466.0], [4886.0, 6721.0], [4934.0, 6547.0], [4327.0, 12842.0], [4231.0, 13464.0], [4247.0, 13329.0], [4263.0, 13259.0], [4279.0, 13182.0], [4311.0, 13037.0], [4135.0, 14104.0], [4119.0, 14495.0], [4103.0, 14293.0], [4183.0, 13979.0], [4167.0, 14074.0], [4375.0, 12586.5], [4583.0, 11330.0], [4487.0, 11795.0], [4567.0, 11343.0], [4359.0, 12685.0], [4391.0, 12400.0], [4407.0, 12285.0], [4471.0, 11905.0], [4455.0, 11788.0], [4423.0, 12112.0], [4855.0, 8355.666666666666], [4759.0, 9570.0], [4807.0, 8344.0], [4663.0, 10485.0], [4631.0, 10512.0], [4615.0, 10528.0], [4967.0, 6523.666666666667], [4903.0, 6703.5], [4887.0, 6707.0], [4871.0, 8282.0], [543.0, 30950.0], [539.0, 30948.0], [533.0, 30973.25], [529.0, 30981.0], [523.0, 31028.666666666668], [519.0, 31027.0], [515.0, 31049.0], [513.0, 31063.75], [573.0, 30827.0], [569.0, 30854.0], [563.0, 30867.0], [559.0, 30879.0], [553.0, 30915.0], [549.0, 30907.0], [607.0, 30696.0], [603.0, 30717.0], [599.0, 30725.0], [593.0, 30755.5], [591.0, 30757.5], [589.0, 30770.0], [583.0, 30793.5], [579.0, 30808.0], [639.0, 30552.0], [633.0, 30584.0], [631.0, 30582.0], [629.0, 30593.0], [623.0, 30623.25], [619.0, 30632.0], [613.0, 30675.5], [609.0, 30685.0], [647.0, 30509.0], [671.0, 30400.0], [669.0, 30411.333333333332], [661.0, 30443.0], [659.0, 30468.333333333332], [651.0, 30497.5], [649.0, 30508.5], [643.0, 30531.0], [641.0, 30541.0], [701.0, 30271.0], [699.0, 30283.0], [691.0, 30314.0], [689.0, 30328.333333333332], [681.0, 30356.5], [679.0, 30368.333333333332], [731.0, 30147.0], [729.0, 30155.5], [727.0, 30160.0], [721.0, 30187.5], [719.0, 30197.333333333332], [711.0, 30230.5], [709.0, 30237.0], [743.0, 30108.0], [767.0, 30003.0], [761.0, 30034.5], [759.0, 30043.333333333332], [751.0, 30087.0], [749.0, 30090.666666666668], [741.0, 30108.5], [739.0, 30210.0], [737.0, 30131.0], [799.0, 29929.333333333332], [791.0, 29984.5], [789.0, 29954.0], [783.0, 29957.5], [781.0, 29964.5], [779.0, 29976.333333333332], [771.0, 29996.5], [769.0, 30005.0], [831.0, 29795.0], [829.0, 29805.333333333332], [821.0, 29838.5], [819.0, 29849.0], [811.0, 29881.0], [809.0, 29892.333333333332], [801.0, 29896.0], [861.0, 29645.0], [859.0, 29655.333333333332], [851.0, 29687.5], [849.0, 29698.0], [841.0, 29753.0], [839.0, 29762.666666666668], [891.0, 29516.0], [889.0, 29527.0], [887.0, 29526.0], [881.0, 29559.0], [879.0, 29570.0], [871.0, 29603.0], [869.0, 29612.0], [921.0, 29390.0], [919.0, 29399.0], [911.0, 29436.5], [909.0, 29440.5], [907.0, 29443.0], [901.0, 29472.0], [899.0, 29484.666666666668], [959.0, 29230.666666666668], [951.0, 29265.0], [949.0, 29271.0], [941.0, 29303.5], [939.0, 29313.0], [937.0, 29314.0], [931.0, 29344.0], [929.0, 29355.666666666668], [991.0, 29145.0], [989.0, 29154.333333333332], [981.0, 29187.5], [979.0, 29195.5], [977.0, 29203.0], [971.0, 29175.5], [969.0, 29185.333333333332], [961.0, 29217.0], [1021.0, 29025.5], [1019.0, 29036.0], [1011.0, 29065.0], [1009.0, 29075.0], [1001.0, 29107.0], [999.0, 29114.0], [1086.0, 28735.0], [1074.0, 28817.333333333332], [1066.0, 28845.0], [1054.0, 28893.0], [1046.0, 28919.5], [1034.0, 28989.333333333332], [1026.0, 29015.0], [1146.0, 28465.0], [1142.0, 28473.0], [1126.0, 28537.5], [1122.0, 28543.0], [1106.0, 28665.75], [1102.0, 28666.0], [1094.0, 28705.333333333332], [1206.0, 28257.25], [1202.0, 28265.0], [1186.0, 28342.0], [1182.0, 28335.0], [1166.0, 28394.75], [1162.0, 28403.0], [1274.0, 27991.5], [1266.0, 28026.5], [1262.0, 28028.0], [1246.0, 28118.5], [1242.0, 28122.0], [1226.0, 28188.0], [1222.0, 28191.0], [1342.0, 27696.0], [1326.0, 27781.5], [1322.0, 27816.0], [1306.0, 27859.5], [1302.0, 27864.0], [1286.0, 27930.333333333332], [1282.0, 27964.0], [1406.0, 27459.5], [1402.0, 27457.0], [1386.0, 27524.5], [1382.0, 27527.0], [1366.0, 27627.5], [1362.0, 27634.0], [1354.0, 27647.0], [1346.0, 27684.75], [1466.0, 27184.0], [1462.0, 27202.666666666668], [1454.0, 27242.0], [1442.0, 27286.666666666668], [1434.0, 27312.5], [1426.0, 27355.5], [1422.0, 27372.0], [1414.0, 27394.0], [1534.0, 26883.0], [1522.0, 26934.333333333332], [1514.0, 26968.0], [1502.0, 27025.5], [1494.0, 27088.5], [1482.0, 27129.333333333332], [1474.0, 27154.0], [1594.0, 26689.0], [1582.0, 26732.666666666668], [1574.0, 26786.0], [1562.0, 26831.333333333332], [1554.0, 26860.0], [1542.0, 26831.333333333332], [1662.0, 26411.0], [1654.0, 26443.0], [1642.0, 26491.666666666668], [1634.0, 26523.0], [1622.0, 26573.0], [1614.0, 26605.5], [1602.0, 26657.0], [1722.0, 26178.333333333332], [1714.0, 26210.0], [1702.0, 26257.0], [1694.0, 26287.5], [1682.0, 26334.0], [1674.0, 26363.0], [1782.0, 25935.0], [1774.0, 25973.5], [1762.0, 26041.333333333332], [1754.0, 26048.5], [1742.0, 26093.333333333332], [1734.0, 26130.0], [1854.0, 25614.5], [1842.0, 25670.666666666668], [1834.0, 25683.0], [1822.0, 25734.333333333332], [1814.0, 25764.0], [1802.0, 25848.333333333332], [1794.0, 25888.5], [1914.0, 25390.5], [1902.0, 25434.0], [1894.0, 25461.5], [1890.0, 25468.0], [1882.0, 25507.666666666668], [1874.0, 25538.5], [1862.0, 25588.666666666668], [1974.0, 25164.5], [1970.0, 25173.0], [1954.0, 25237.5], [1950.0, 25242.0], [1938.0, 25293.0], [1934.0, 25321.5], [1922.0, 25388.333333333332], [2034.0, 24928.5], [2030.0, 24939.0], [2014.0, 25006.5], [2010.0, 25016.0], [1994.0, 25086.75], [1990.0, 25094.0], [1986.0, 25111.0], [2060.0, 24834.0], [2164.0, 24434.333333333332], [2052.0, 24858.0], [2140.0, 24515.0], [2124.0, 24591.0], [2100.0, 24674.0], [2084.0, 24742.0], [2284.0, 24030.0], [2300.0, 23962.0], [2276.0, 24062.0], [2268.0, 24110.0], [2244.0, 24192.0], [2228.0, 24179.25], [2180.0, 24364.0], [2204.0, 24266.0], [2220.0, 24198.0], [2324.0, 23849.0], [2404.0, 23576.666666666668], [2308.0, 23942.75], [2396.0, 23597.0], [2380.0, 23642.0], [2364.0, 23698.5], [2356.0, 23728.0], [2348.0, 23768.25], [2444.0, 23427.333333333332], [2540.0, 23037.0], [2532.0, 23067.0], [2452.0, 23389.0], [2436.0, 23458.5], [2492.0, 23219.0], [2484.0, 23260.0], [2476.0, 23302.5], [2524.0, 23095.0], [2516.0, 23135.0], [2580.0, 22813.0], [2684.0, 22386.0], [2572.0, 22858.0], [2564.0, 22881.5], [2652.0, 22524.333333333332], [2644.0, 22550.0], [2620.0, 22645.0], [2612.0, 22683.0], [2604.0, 22731.5], [2812.0, 21829.0], [2804.0, 21866.0], [2772.0, 21967.0], [2764.0, 22007.0], [2692.0, 22353.666666666668], [2732.0, 22187.0], [2724.0, 22225.0], [2924.0, 21523.75], [2940.0, 21459.0], [2900.0, 21610.0], [2884.0, 21655.75], [2844.0, 21790.333333333332], [2860.0, 21723.0], [3060.0, 20976.0], [3044.0, 21047.25], [3020.0, 21140.0], [3004.0, 21207.5], [2964.0, 21370.25], [2980.0, 21297.0], [3180.0, 20498.333333333332], [3148.0, 20607.0], [3172.0, 20524.0], [3100.0, 20822.0], [3084.0, 20887.0], [3132.0, 20678.5], [3116.0, 20738.0], [3156.0, 20582.0], [3140.0, 20647.666666666668], [3260.0, 20172.0], [3308.0, 19792.0], [3220.0, 20334.666666666668], [3212.0, 20364.0], [3276.0, 19966.0], [3244.0, 20235.333333333332], [3452.0, 19753.5], [3428.0, 20011.8], [3420.0, 20031.0], [3412.0, 20079.75], [3388.0, 20183.0], [3332.0, 19679.75], [3348.0, 19725.0], [3372.0, 19618.75], [3364.0, 19633.0], [3580.0, 19042.0], [3548.0, 19468.0], [3532.0, 19410.0], [3468.0, 19251.0], [3508.0, 19633.0], [3492.0, 19726.5], [3700.0, 18392.25], [3660.0, 18698.0], [3604.0, 18677.0], [3588.0, 19008.0], [3676.0, 18843.0], [3636.0, 19050.0], [3628.0, 18584.5], [3620.0, 19124.5], [3836.0, 17537.0], [3828.0, 18058.0], [3780.0, 17893.0], [3788.0, 17831.0], [3796.0, 18217.0], [3804.0, 17737.0], [3812.0, 17688.0], [3716.0, 18684.0], [3764.0, 18462.0], [3756.0, 18051.5], [3748.0, 18081.0], [3940.0, 16559.0], [3924.0, 16696.0], [3932.0, 16658.0], [3964.0, 16747.0], [3852.0, 17381.0], [3844.0, 17466.0], [3900.0, 16990.0], [3892.0, 17087.0], [3876.0, 17160.0], [4068.0, 14842.0], [4044.0, 14774.0], [4052.0, 14993.0], [4060.0, 14899.0], [4076.0, 14794.0], [3996.0, 15326.0], [3988.0, 15435.333333333334], [3980.0, 15206.0], [3972.0, 16498.5], [4028.0, 15223.0], [4020.0, 14989.0], [4012.0, 15356.0], [4004.0, 15444.0], [4232.0, 13451.0], [4264.0, 13256.0], [4312.0, 13036.0], [4104.0, 14583.0], [4120.0, 14492.0], [4136.0, 14376.0], [4152.0, 14245.0], [4216.0, 13570.333333333334], [4168.0, 14073.0], [4504.0, 11650.5], [4552.0, 11304.5], [4520.0, 11370.0], [4600.0, 10548.666666666666], [4392.0, 12387.0], [4472.0, 11890.0], [4424.0, 12105.0], [4840.0, 8327.0], [4744.0, 9677.4], [4760.0, 9532.0], [4776.0, 8412.0], [4824.0, 8385.333333333334], [4808.0, 8434.0], [4728.0, 9693.833333333334], [4712.0, 9681.0], [4696.0, 9733.5], [4680.0, 10462.5], [4888.0, 6712.0], [5000.0, 6479.76], [4920.0, 6652.0], [4872.0, 8337.75], [4968.0, 6454.0], [4936.0, 6630.5], [4297.0, 13111.0], [4329.0, 12838.0], [4345.0, 12754.5], [4233.0, 13443.0], [4249.0, 13318.5], [4105.0, 14571.0], [4121.0, 14484.0], [4217.0, 13564.0], [4201.0, 13630.333333333334], [4569.0, 11292.5], [4601.0, 10548.0], [4505.0, 11650.0], [4489.0, 11643.0], [4537.0, 11297.0], [4361.0, 12672.0], [4393.0, 12383.0], [4409.0, 12276.0], [4457.0, 11788.0], [4441.0, 12005.5], [4425.0, 12103.0], [4777.0, 8489.0], [4745.0, 9696.0], [4793.0, 8453.0], [4809.0, 8430.0], [4681.0, 10467.0], [4905.0, 6694.5], [4873.0, 8337.0], [4969.0, 6558.0], [4937.0, 6632.0], [2165.0, 24432.0], [2173.0, 24394.666666666668], [2149.0, 24489.75], [2069.0, 24796.75], [2053.0, 24854.5], [2125.0, 24577.0], [2109.0, 24645.25], [2085.0, 24729.0], [2293.0, 24001.5], [2189.0, 24338.75], [2269.0, 24100.0], [2261.0, 24131.0], [2253.0, 24167.0], [2229.0, 24167.0], [2213.0, 24243.25], [2429.0, 23486.666666666668], [2421.0, 23516.0], [2389.0, 23616.666666666668], [2381.0, 23641.0], [2309.0, 23929.0], [2333.0, 23823.333333333332], [2349.0, 23755.0], [2549.0, 23004.0], [2557.0, 22906.666666666668], [2533.0, 23056.0], [2517.0, 23122.0], [2501.0, 23189.75], [2461.0, 23362.0], [2469.0, 23329.0], [2677.0, 22419.0], [2685.0, 22375.0], [2669.0, 22442.0], [2637.0, 22579.5], [2629.0, 22613.5], [2589.0, 22784.5], [2605.0, 22713.0], [2597.0, 22754.333333333332], [2797.0, 21894.666666666668], [2813.0, 21816.0], [2789.0, 21917.5], [2757.0, 22044.0], [2749.0, 22074.0], [2717.0, 22253.666666666668], [2709.0, 22281.5], [2741.0, 22105.0], [2845.0, 21781.0], [2925.0, 21512.0], [2829.0, 21847.0], [2821.0, 21787.5], [2909.0, 21580.25], [2885.0, 21649.0], [2869.0, 21698.75], [3069.0, 20949.75], [3045.0, 21036.0], [3029.0, 21109.5], [3005.0, 21195.0], [2949.0, 21431.5], [2965.0, 21357.0], [2989.0, 21267.25], [3101.0, 20809.0], [3197.0, 20431.5], [3085.0, 20879.0], [3165.0, 20554.5], [3157.0, 20579.0], [3133.0, 20669.0], [3125.0, 20707.666666666668], [3117.0, 20739.0], [3109.0, 20790.666666666668], [3317.0, 19740.25], [3301.0, 19857.25], [3285.0, 19937.0], [3269.0, 19999.0], [3261.0, 20150.0], [3205.0, 20403.666666666668], [3245.0, 20236.0], [3237.0, 20261.5], [3437.0, 19675.0], [3453.0, 19880.0], [3357.0, 19652.5], [3333.0, 19667.0], [3413.0, 20062.0], [3397.0, 20148.0], [3373.0, 19610.0], [3565.0, 19125.5], [3477.0, 19790.5], [3573.0, 19178.666666666668], [3461.0, 19855.0], [3533.0, 18992.0], [3517.0, 19616.25], [3493.0, 19711.0], [3685.0, 18573.0], [3701.0, 18264.0], [3661.0, 18435.0], [3653.0, 18971.5], [3645.0, 18510.0], [3597.0, 18969.0], [3613.0, 18900.0], [3605.0, 19192.0], [3837.0, 17958.0], [3789.0, 17818.0], [3781.0, 17882.0], [3797.0, 17760.0], [3805.0, 17771.0], [3829.0, 17578.0], [3813.0, 17679.0], [3741.0, 18413.0], [3733.0, 18148.0], [3725.0, 18299.25], [3773.0, 17982.5], [3749.0, 18071.0], [3869.0, 17234.75], [3909.0, 16848.0], [3965.0, 16760.0], [3957.0, 16429.5], [3861.0, 17272.5], [3853.0, 17344.0], [3845.0, 17886.0], [3877.0, 17156.0], [4093.0, 14678.0], [4037.0, 15141.0], [4053.0, 14989.0], [4061.0, 14601.0], [4085.0, 14727.5], [4077.0, 14790.0], [4069.0, 14839.0], [3997.0, 15526.0], [3989.0, 15181.0], [3973.0, 16306.0], [4029.0, 14902.0], [4021.0, 15293.0], [4005.0, 15464.0], [4154.0, 14261.5], [4234.0, 13429.0], [4346.0, 12743.0], [4282.0, 13173.0], [4298.0, 13102.0], [4122.0, 14195.0], [4106.0, 14569.0], [4218.0, 13550.0], [4202.0, 13619.0], [4186.0, 13877.666666666666], [4394.0, 12373.0], [4506.0, 11646.0], [4538.0, 11360.0], [4410.0, 12264.0], [4378.0, 12587.666666666666], [4362.0, 12662.0], [4474.0, 11776.5], [4458.0, 11781.0], [4442.0, 11985.0], [4426.0, 12097.0], [4746.0, 9709.0], [4762.0, 9603.5], [4650.0, 10491.0], [4634.0, 10385.333333333334], [4618.0, 10527.333333333334], [4682.0, 10462.0], [4890.0, 6708.0], [4906.0, 6696.0], [4970.0, 6547.0], [4331.0, 12831.0], [4235.0, 13428.0], [4267.0, 13245.666666666666], [4283.0, 13162.0], [4347.0, 12736.0], [4315.0, 13026.0], [4299.0, 13100.0], [4155.0, 14251.0], [4123.0, 14435.0], [4107.0, 14561.0], [4203.0, 13624.0], [4171.0, 14057.333333333334], [4379.0, 12563.0], [4491.0, 11643.5], [4507.0, 11643.0], [4523.0, 11368.666666666666], [4363.0, 12657.0], [4395.0, 12369.0], [4411.0, 12252.0], [4475.0, 11878.0], [4459.0, 11772.0], [4443.0, 11940.0], [4427.0, 12089.0], [4843.0, 8348.0], [4747.0, 9695.0], [4731.0, 9719.333333333334], [4715.0, 9732.5], [4875.0, 8252.0], [4955.0, 6557.5], [4939.0, 6574.5], [1079.0, 28795.333333333332], [1071.0, 28825.5], [1059.0, 28875.666666666668], [1051.0, 28904.0], [1039.0, 28969.333333333332], [1031.0, 28995.0], [1147.0, 28454.0], [1151.0, 28446.5], [1143.0, 28467.0], [1135.0, 28502.0], [1131.0, 28517.0], [1127.0, 28525.0], [1111.0, 28587.25], [1107.0, 28659.0], [1099.0, 28689.0], [1091.0, 28715.0], [1215.0, 28225.0], [1211.0, 28240.333333333332], [1207.0, 28253.0], [1191.0, 28314.5], [1187.0, 28317.0], [1171.0, 28382.25], [1167.0, 28385.0], [1279.0, 27974.5], [1271.0, 28010.25], [1267.0, 28025.0], [1251.0, 28097.5], [1247.0, 28101.0], [1231.0, 28170.5], [1227.0, 28181.0], [1331.0, 27737.666666666668], [1327.0, 27748.0], [1311.0, 27843.0], [1307.0, 27846.0], [1291.0, 27911.5], [1287.0, 27923.0], [1407.0, 27437.0], [1391.0, 27510.0], [1387.0, 27512.0], [1371.0, 27574.75], [1367.0, 27607.0], [1351.0, 27669.75], [1347.0, 27671.0], [1467.0, 27182.0], [1463.0, 27191.0], [1459.0, 27224.5], [1451.0, 27250.5], [1447.0, 27268.666666666668], [1439.0, 27303.0], [1427.0, 27342.0], [1411.0, 27421.0], [1527.0, 26914.666666666668], [1519.0, 26947.0], [1507.0, 27007.666666666668], [1499.0, 27046.5], [1487.0, 27109.333333333332], [1479.0, 27142.5], [1599.0, 26669.0], [1587.0, 26717.0], [1579.0, 26747.5], [1567.0, 26816.333333333332], [1559.0, 26841.5], [1551.0, 26874.0], [1547.0, 26807.333333333332], [1539.0, 26843.0], [1659.0, 26424.0], [1647.0, 26474.666666666668], [1639.0, 26501.5], [1627.0, 26549.666666666668], [1619.0, 26601.4], [1607.0, 26637.333333333332], [1679.0, 26345.0], [1727.0, 26160.666666666668], [1719.0, 26188.5], [1707.0, 26237.333333333332], [1699.0, 26266.0], [1687.0, 26318.0], [1683.0, 26334.0], [1671.0, 26373.0], [1667.0, 26393.333333333332], [1787.0, 25913.333333333332], [1779.0, 25944.5], [1775.0, 25967.0], [1767.0, 25997.0], [1759.0, 26036.0], [1747.0, 26078.0], [1739.0, 26102.0], [1847.0, 25642.666666666668], [1839.0, 25671.5], [1827.0, 25716.666666666668], [1819.0, 25742.0], [1807.0, 25834.333333333332], [1799.0, 25853.0], [1795.0, 25887.0], [1919.0, 25369.5], [1907.0, 25416.333333333332], [1899.0, 25445.0], [1887.0, 25497.666666666668], [1879.0, 25526.5], [1867.0, 25564.333333333332], [1859.0, 25590.0], [1979.0, 25207.5], [1975.0, 25158.0], [1959.0, 25219.75], [1955.0, 25230.0], [1939.0, 25297.0], [1935.0, 25299.0], [1927.0, 25351.333333333332], [2047.0, 24882.5], [2039.0, 24911.75], [2035.0, 24916.0], [2019.0, 24983.25], [2015.0, 24991.0], [2003.0, 25045.333333333332], [1999.0, 25067.25], [1995.0, 25077.0], [2174.0, 24393.0], [2150.0, 24480.0], [2134.0, 24552.0], [2110.0, 24631.0], [2054.0, 24857.0], [2070.0, 24789.0], [2094.0, 24705.25], [2294.0, 23991.0], [2278.0, 24063.666666666668], [2254.0, 24155.0], [2238.0, 24135.5], [2190.0, 24330.0], [2198.0, 24298.5], [2214.0, 24231.0], [2414.0, 23544.0], [2406.0, 23571.0], [2334.0, 23812.0], [2318.0, 23901.25], [2374.0, 23664.666666666668], [2366.0, 23688.5], [2558.0, 22897.0], [2542.0, 23032.5], [2526.0, 23092.0], [2502.0, 23189.0], [2494.0, 23214.5], [2454.0, 23387.0], [2446.0, 23417.0], [2486.0, 23249.0], [2662.0, 22474.0], [2654.0, 22512.0], [2638.0, 22568.0], [2630.0, 22608.0], [2622.0, 22637.5], [2582.0, 22811.0], [2574.0, 22848.5], [2614.0, 22683.5], [2774.0, 21964.0], [2814.0, 21817.0], [2782.0, 21963.0], [2742.0, 22105.0], [2694.0, 22353.0], [2702.0, 22321.333333333332], [2734.0, 22164.0], [2830.0, 21837.0], [2934.0, 21486.0], [2822.0, 21789.0], [2910.0, 21567.0], [2894.0, 21634.0], [2870.0, 21690.0], [2854.0, 21755.5], [3054.0, 21004.5], [3070.0, 20937.0], [2974.0, 21327.25], [2950.0, 21413.0], [3030.0, 21099.0], [3014.0, 21167.5], [2990.0, 21257.0], [3190.0, 20460.666666666668], [3182.0, 20490.0], [3166.0, 20551.0], [3150.0, 20607.5], [3142.0, 20639.0], [3094.0, 20848.0], [3118.0, 20729.0], [3110.0, 20778.0], [3302.0, 19832.0], [3318.0, 19729.0], [3230.0, 20295.0], [3222.0, 20322.0], [3286.0, 19927.0], [3270.0, 19997.0], [3246.0, 20222.0], [3238.0, 20253.0], [3438.0, 19948.0], [3422.0, 19429.5], [3398.0, 19508.0], [3358.0, 19652.0], [3342.0, 19724.0], [3558.0, 19253.666666666668], [3566.0, 19399.0], [3478.0, 19212.0], [3462.0, 19853.0], [3542.0, 19238.0], [3518.0, 19051.0], [3502.0, 19542.5], [3686.0, 18325.0], [3710.0, 18354.75], [3598.0, 19226.0], [3590.0, 18739.0], [3670.0, 18561.333333333332], [3646.0, 18502.0], [3638.0, 18791.0], [3630.0, 18573.5], [3822.0, 17759.75], [3782.0, 17876.0], [3806.0, 17714.0], [3830.0, 18010.0], [3814.0, 17676.0], [3734.0, 18601.0], [3726.0, 18175.0], [3718.0, 18427.5], [3774.0, 17967.0], [3758.0, 18496.0], [3750.0, 18530.0], [3950.0, 16510.333333333332], [3958.0, 16820.0], [3966.0, 16712.0], [3910.0, 16837.0], [3918.0, 16794.0], [3926.0, 16688.0], [3942.0, 16545.5], [3870.0, 17221.0], [3846.0, 17449.0], [3894.0, 17076.5], [3886.0, 17117.333333333332], [3878.0, 17149.0], [4086.0, 14686.0], [4046.0, 14763.5], [4078.0, 14739.0], [4094.0, 14669.0], [4038.0, 15129.0], [4054.0, 14961.0], [4062.0, 14859.0], [4070.0, 14831.0], [4030.0, 14892.0], [4006.0, 15454.0], [4332.0, 12819.0], [4236.0, 13417.0], [4252.0, 13307.666666666666], [4268.0, 13235.0], [4284.0, 13160.0], [4316.0, 13016.0], [4220.0, 13537.5], [4108.0, 14270.0], [4124.0, 14177.0], [4140.0, 14291.0], [4156.0, 14189.0], [4188.0, 13955.0], [4172.0, 14045.0], [4396.0, 12358.0], [4604.0, 10502.75], [4508.0, 11635.0], [4492.0, 11743.0], [4556.0, 11354.25], [4380.0, 12553.0], [4364.0, 12652.0], [4476.0, 11868.0], [4460.0, 11763.0], [4428.0, 12080.0], [4764.0, 9669.0], [4780.0, 8482.0], [4812.0, 8402.666666666666], [4716.0, 9733.0], [4700.0, 9708.75], [4972.0, 6489.5], [4924.0, 6624.25], [4141.0, 14350.0], [4349.0, 12736.0], [4237.0, 13410.0], [4269.0, 13234.0], [4221.0, 13533.0], [4109.0, 14549.0], [4125.0, 14177.0], [4157.0, 14221.0], [4173.0, 14098.0], [4573.0, 11341.5], [4605.0, 10544.0], [4477.0, 11856.0], [4365.0, 12643.0], [4381.0, 12543.0], [4397.0, 12346.0], [4413.0, 12215.0], [4461.0, 11975.0], [4749.0, 9628.0], [4845.0, 8374.5], [4765.0, 9667.0], [4797.0, 8435.5], [4861.0, 8254.0], [4701.0, 9722.0], [4973.0, 6429.0], [4893.0, 6675.0], [4957.0, 6488.5], [4941.0, 6619.5], [2175.0, 24391.0], [2119.0, 24609.25], [2159.0, 24453.0], [2079.0, 24757.25], [2055.0, 24839.0], [2095.0, 24695.0], [2135.0, 24546.0], [2303.0, 23959.333333333332], [2247.0, 24184.666666666668], [2279.0, 24049.0], [2207.0, 24262.333333333332], [2199.0, 24292.0], [2239.0, 24123.0], [2223.0, 24198.333333333332], [2263.0, 24129.0], [2327.0, 23841.666666666668], [2431.0, 23480.5], [2319.0, 23878.0], [2399.0, 23585.666666666668], [2391.0, 23608.5], [2359.0, 23718.666666666668], [2343.0, 23787.25], [2559.0, 22895.0], [2527.0, 23086.0], [2511.0, 23149.75], [2439.0, 23448.0], [2479.0, 23289.0], [2471.0, 23328.0], [2679.0, 22406.0], [2687.0, 22373.5], [2567.0, 22867.333333333332], [2615.0, 22664.0], [2599.0, 22745.5], [2655.0, 22494.0], [2647.0, 22538.666666666668], [2631.0, 22665.0], [2799.0, 21882.0], [2807.0, 21878.333333333332], [2719.0, 22246.5], [2703.0, 22301.0], [2695.0, 22336.0], [2767.0, 22007.333333333332], [2759.0, 22019.0], [2727.0, 22225.0], [2935.0, 21522.0], [2919.0, 21545.5], [2895.0, 21621.0], [2879.0, 21672.25], [2839.0, 21810.5], [2855.0, 21745.0], [3055.0, 20994.0], [2975.0, 21317.0], [2959.0, 21389.25], [3039.0, 21070.0], [3015.0, 21161.0], [2999.0, 21228.25], [3191.0, 20450.0], [3199.0, 20424.5], [3175.0, 20515.0], [3135.0, 20666.5], [3079.0, 20907.25], [3095.0, 20839.0], [3127.0, 20701.5], [3167.0, 20550.0], [3327.0, 19699.5], [3303.0, 19815.0], [3287.0, 19922.0], [3271.0, 19988.0], [3255.0, 20191.25], [3215.0, 20354.333333333332], [3207.0, 20393.5], [3223.0, 20313.0], [3343.0, 19655.0], [3391.0, 20174.0], [3447.0, 19773.75], [3423.0, 20018.0], [3407.0, 19793.0], [3383.0, 20228.2], [3367.0, 19627.333333333332], [3583.0, 18943.333333333332], [3575.0, 18808.5], [3543.0, 18954.0], [3527.0, 19567.0], [3487.0, 19608.75], [3463.0, 19842.0], [3503.0, 19666.0], [3615.0, 19132.5], [3695.0, 18546.5], [3711.0, 18707.0], [3655.0, 18468.0], [3671.0, 18888.0], [3607.0, 18666.0], [3599.0, 18691.0], [3591.0, 18726.0], [3623.0, 18775.666666666668], [3679.0, 18360.666666666668], [3839.0, 17735.0], [3783.0, 17870.0], [3831.0, 17997.0], [3791.0, 17809.0], [3799.0, 17760.0], [3823.0, 17635.0], [3743.0, 18106.0], [3759.0, 18025.0], [3751.0, 18067.0], [3943.0, 16542.0], [3951.0, 16500.0], [3959.0, 16408.0], [3967.0, 16724.0], [3911.0, 16825.0], [3919.0, 16784.0], [3863.0, 17265.5], [3855.0, 17330.0], [3903.0, 16974.333333333332], [3887.0, 17106.0], [3879.0, 17149.0], [4087.0, 14717.0], [4095.0, 14657.0], [4055.0, 14951.0], [4063.0, 14881.0], [4079.0, 14763.0], [3999.0, 15519.5], [3983.0, 15207.333333333334], [4031.0, 15199.0], [4023.0, 15262.5], [4015.0, 15170.666666666666], [4007.0, 15447.0], [4302.0, 13090.0], [4254.0, 13297.5], [4334.0, 12812.5], [4318.0, 13008.0], [4142.0, 14342.0], [4126.0, 14451.0], [4110.0, 14259.0], [4206.0, 13611.666666666666], [4174.0, 14029.0], [4414.0, 12211.0], [4558.0, 11354.0], [4542.0, 11308.25], [4590.0, 11305.499999999998], [4398.0, 12337.0], [4382.0, 12532.0], [4366.0, 12638.0], [4478.0, 11621.0], [4446.0, 11934.666666666666], [4430.0, 12068.0], [4830.0, 8364.0], [4862.0, 8345.0], [4750.0, 9602.0], [4766.0, 9662.0], [4670.0, 10428.42857142857], [4638.0, 10479.25], [4622.0, 10472.0], [4686.0, 10443.666666666666], [4878.0, 8300.0], [4926.0, 6672.0], [4910.0, 6668.75], [4942.0, 6607.0], [4319.0, 12995.0], [4351.0, 12725.0], [4287.0, 13150.333333333334], [4335.0, 12802.0], [4159.0, 14177.5], [4143.0, 14059.0], [4127.0, 14413.0], [4111.0, 14540.0], [4223.0, 13525.0], [4191.0, 13931.333333333334], [4559.0, 11145.0], [4607.0, 10543.0], [4495.0, 11699.0], [4527.0, 11367.75], [4367.0, 12629.0], [4399.0, 12330.0], [4415.0, 12208.0], [4463.0, 11740.5], [4447.0, 11922.0], [4431.0, 12059.0], [4815.0, 8350.0], [4831.0, 8389.0], [4863.0, 8315.0], [4751.0, 9689.0], [4783.0, 8428.666666666666], [4655.0, 10391.666666666666], [4735.0, 9718.5], [4719.0, 9731.5], [4687.0, 10445.0], [4879.0, 6734.0], [4927.0, 6664.0], [4895.0, 6710.0], [4975.0, 6484.0], [4943.0, 6603.0]], "isOverall": false, "label": "Http Request", "isController": false}, {"data": [[2501.414600000003, 22340.41499999992]], "isOverall": false, "label": "Http Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8787.616666666667, "minX": 1.65795246E12, "maxY": 29083.333333333332, "series": [{"data": [[1.65795246E12, 8787.616666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65795246E12, 29083.333333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795246E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 22340.41499999992, "minX": 1.65795246E12, "maxY": 22340.41499999992, "series": [{"data": [[1.65795246E12, 22340.41499999992]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795246E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 22340.387000000024, "minX": 1.65795246E12, "maxY": 22340.387000000024, "series": [{"data": [[1.65795246E12, 22340.387000000024]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795246E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 58.468199999999975, "minX": 1.65795246E12, "maxY": 58.468199999999975, "series": [{"data": [[1.65795246E12, 58.468199999999975]], "isOverall": false, "label": "Http Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795246E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6398.0, "minX": 1.65795246E12, "maxY": 33041.0, "series": [{"data": [[1.65795246E12, 33041.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65795246E12, 31097.800000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65795246E12, 32874.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65795246E12, 32144.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65795246E12, 6398.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65795246E12, 23189.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795246E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6588.5, "minX": 27.0, "maxY": 32209.5, "series": [{"data": [[85.0, 12170.5], [96.0, 10489.0], [104.0, 8377.5], [107.0, 12174.0], [105.0, 17003.0], [122.0, 6588.5], [123.0, 11367.0], [140.0, 23725.5], [160.0, 13161.0], [171.0, 18080.0], [191.0, 20525.0], [192.0, 19862.0], [198.0, 28834.5], [194.0, 32209.5], [201.0, 23032.0], [202.0, 27154.0], [205.0, 28007.0], [204.0, 31318.5], [208.0, 23802.5], [215.0, 29637.0], [217.0, 21648.5], [218.0, 26329.5], [216.0, 30514.0], [225.0, 21369.0], [224.0, 24631.0], [27.0, 16461.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 225.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6588.5, "minX": 27.0, "maxY": 32209.5, "series": [{"data": [[85.0, 12170.5], [96.0, 10489.0], [104.0, 8377.5], [107.0, 12174.0], [105.0, 17003.0], [122.0, 6588.5], [123.0, 11367.0], [140.0, 23725.5], [160.0, 13161.0], [171.0, 18080.0], [191.0, 20525.0], [192.0, 19862.0], [198.0, 28834.5], [194.0, 32209.5], [201.0, 23032.0], [202.0, 27154.0], [205.0, 28007.0], [204.0, 31318.5], [208.0, 23802.5], [215.0, 29637.0], [217.0, 21648.5], [218.0, 26326.5], [216.0, 30514.0], [225.0, 21369.0], [224.0, 24631.0], [27.0, 16461.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 225.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.65795246E12, "maxY": 83.33333333333333, "series": [{"data": [[1.65795246E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795246E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.65795246E12, "maxY": 83.33333333333333, "series": [{"data": [[1.65795246E12, 83.33333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65795246E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.65795246E12, "maxY": 83.33333333333333, "series": [{"data": [[1.65795246E12, 83.33333333333333]], "isOverall": false, "label": "Http Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795246E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.65795246E12, "maxY": 83.33333333333333, "series": [{"data": [[1.65795246E12, 83.33333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65795246E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

